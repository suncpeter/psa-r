[["index.html", "R Code for Propensity Score Analysis 1 Preface", " R Code for Propensity Score Analysis Shanshan Du, Peter Sun, and Shenyang Guo December 30, 2020 1 Preface The R code presented here is based on Shenyang Guo and Mark Frasers Stata code.1 https://ssw.unc.edu/psa/ "],["01_Section4.4.1.html", "2 Section 4.4.1 Application of the Treatment Effect Model to Analysis of Observational Data (SD &amp; PS) 2.1 Preparation 2.2 Treatment Effect 2.3 Bivariate t-test 2.4 Regression Control 2.5 Sample Description", " 2 Section 4.4.1 Application of the Treatment Effect Model to Analysis of Observational Data (SD &amp; PS) 2.1 Preparation library(haven) library(sampleSelection) library(gmodels) library(tidyverse) # load data d &lt;- haven::read_dta(&quot;data/Data_Chapter4/chpt4_1.dta&quot;) # rename d1 &lt;- d %&gt;% rename( external3 = bc3_ept, internal3 = bc3_ipt ) 2.2 Treatment Effect ## tm1: external3 tm1 &lt;- sampleSelection::treatReg(aodserv ~ cgrage1 + cgrage2 + cgrage3 + high + bahigh + employ + open + sexual + provide + supervis + other + cra47a + mental + arrest + psh17a + cidi + cgneed, external3 ~ aodserv + black + hispanic + natam + chdage2 + chdage3 + ra, data = d1 ) summary(tm1) ## -------------------------------------------- ## Tobit treatment model (switching regression model) ## Maximum Likelihood estimation ## Newton-Raphson maximisation, 3 iterations ## Return code 1: gradient close to zero (gradtol) ## Log-Likelihood: -5779.918 ## 1407 observations: 1295 non-participants (selection 0) and 112 participants (selection 1) ## ## 28 free parameters (df = 1379) ## Probit selection equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -1.75910 0.35352 -4.976 7.31e-07 *** ## cgrage1 -0.76128 0.33057 -2.303 0.021429 * ## cgrage2 -0.68358 0.33400 -2.047 0.040880 * ## cgrage3 -0.70081 0.37681 -1.860 0.063121 . ## high -0.11882 0.12992 -0.915 0.360609 ## bahigh -0.13220 0.16447 -0.804 0.421656 ## employ -0.14578 0.11867 -1.228 0.219499 ## open 0.50951 0.13240 3.848 0.000124 *** ## sexual -0.23793 0.20419 -1.165 0.244125 ## provide 0.04531 0.18550 0.244 0.807067 ## supervis 0.17338 0.16051 1.080 0.280258 ## other 0.10706 0.19382 0.552 0.580798 ## cra47a -0.01902 0.12132 -0.157 0.875439 ## mental 0.36035 0.11964 3.012 0.002642 ** ## arrest 0.54352 0.11719 4.638 3.85e-06 *** ## psh17a 0.62541 0.14106 4.434 1.00e-05 *** ## cidi 0.69456 0.11677 5.948 3.43e-09 *** ## cgneed 0.65257 0.18802 3.471 0.000535 *** ## Outcome equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 59.8803 0.6491 92.247 &lt; 2e-16 *** ## aodserv 8.6010 2.4749 3.475 0.000526 *** ## black -1.0393 0.7734 -1.344 0.179225 ## hispanic -3.1717 0.9226 -3.438 0.000604 *** ## natam -1.8137 1.5331 -1.183 0.236996 ## chdage2 -3.5110 0.9259 -3.792 0.000156 *** ## chdage3 -3.9853 0.7178 -5.552 3.38e-08 *** ## ra -1.4506 1.0688 -1.357 0.174925 ## Error terms: ## Estimate Std. Error t value Pr(&gt;|t|) ## sigma 12.1655 0.2473 49.199 &lt; 2e-16 *** ## rho -0.3603 0.1020 -3.532 0.000425 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## -------------------------------------------- ## tm2: internal3 tm2 &lt;- sampleSelection::treatReg(aodserv ~ cgrage1 + cgrage2 + cgrage3 + high + bahigh + employ + open + sexual + provide + supervis + other + cra47a + mental + arrest + psh17a + cidi + cgneed, internal3 ~ aodserv + black + hispanic + natam + chdage2 + chdage3 + ra, data = d1 ) summary(tm2) ## -------------------------------------------- ## Tobit treatment model (switching regression model) ## Maximum Likelihood estimation ## Newton-Raphson maximisation, 4 iterations ## Return code 1: gradient close to zero (gradtol) ## Log-Likelihood: -5755.528 ## 1407 observations: 1295 non-participants (selection 0) and 112 participants (selection 1) ## ## 28 free parameters (df = 1379) ## Probit selection equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -1.60843 0.35527 -4.527 6.49e-06 *** ## cgrage1 -0.91208 0.32779 -2.782 0.005468 ** ## cgrage2 -0.80298 0.33282 -2.413 0.015967 * ## cgrage3 -0.82370 0.37797 -2.179 0.029480 * ## high -0.16146 0.12893 -1.252 0.210660 ## bahigh -0.16131 0.16539 -0.975 0.329562 ## employ -0.14902 0.11792 -1.264 0.206514 ## open 0.48758 0.13205 3.692 0.000231 *** ## sexual -0.17432 0.20311 -0.858 0.390906 ## provide 0.11691 0.18172 0.643 0.520100 ## supervis 0.21873 0.15834 1.381 0.167391 ## other 0.12114 0.19441 0.623 0.533314 ## cra47a -0.02662 0.12079 -0.220 0.825571 ## mental 0.38840 0.11934 3.255 0.001163 ** ## arrest 0.50687 0.11718 4.325 1.63e-05 *** ## psh17a 0.63688 0.14022 4.542 6.06e-06 *** ## cidi 0.71381 0.11593 6.157 9.70e-10 *** ## cgneed 0.63948 0.18879 3.387 0.000726 *** ## Outcome equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 54.925633 0.639980 85.824 &lt; 2e-16 *** ## aodserv 7.283015 2.349753 3.099 0.00198 ** ## black -2.425341 0.760232 -3.190 0.00145 ** ## hispanic -2.140735 0.907547 -2.359 0.01847 * ## natam 1.007463 1.506590 0.669 0.50380 ## chdage2 -1.967917 0.910989 -2.160 0.03093 * ## chdage3 0.007557 0.706326 0.011 0.99147 ## ra -0.852027 1.051672 -0.810 0.41799 ## Error terms: ## Estimate Std. Error t value Pr(&gt;|t|) ## sigma 11.98052 0.24369 49.163 &lt; 2e-16 *** ## rho -0.37884 0.09658 -3.923 9.19e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## -------------------------------------------- ## tm3: To request Inverse Mills Ratio myprobit &lt;- glm(aodserv ~ cgrage1 + cgrage2 + cgrage3 + high + bahigh + employ + open + sexual + provide + supervis + other + cra47a + mental + arrest + psh17a + cidi + cgneed, family = binomial(link = &quot;probit&quot;), data = d1 ) d1 &lt;- d1 %&gt;% mutate(IMR = ifelse(aodserv == 0, -sampleSelection::invMillsRatio(myprobit)$IMR0, sampleSelection::invMillsRatio(myprobit)$IMR1)) head(d1$IMR, n = 10) ## [1] -0.04965156 -0.16962811 2.09124856 -0.28590709 -0.11544331 -0.25318173 ## [7] -0.02696082 -0.02306216 -0.05237780 -0.12828338 d1 %&gt;% summarize(obs = n(), mean = mean(IMR), sd = sd(IMR), min = min(IMR), max = max(IMR), .groups = &quot;drop&quot;) ## # A tibble: 1 x 5 ## obs mean sd min max ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1407 -0.0000000642 0.463 -1.52 2.60 # To check saved statistics tm1 &lt;- sampleSelection::treatReg(aodserv ~ cgrage1 + cgrage2 + cgrage3 + high + bahigh + employ + open + sexual + provide + supervis + other + cra47a + mental + arrest + psh17a + cidi + cgneed, external3 ~ aodserv + black + hispanic + natam + chdage2 + chdage3 + ra, data = d1 ) summary(tm1) ## -------------------------------------------- ## Tobit treatment model (switching regression model) ## Maximum Likelihood estimation ## Newton-Raphson maximisation, 3 iterations ## Return code 1: gradient close to zero (gradtol) ## Log-Likelihood: -5779.918 ## 1407 observations: 1295 non-participants (selection 0) and 112 participants (selection 1) ## ## 28 free parameters (df = 1379) ## Probit selection equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -1.75910 0.35352 -4.976 7.31e-07 *** ## cgrage1 -0.76128 0.33057 -2.303 0.021429 * ## cgrage2 -0.68358 0.33400 -2.047 0.040880 * ## cgrage3 -0.70081 0.37681 -1.860 0.063121 . ## high -0.11882 0.12992 -0.915 0.360609 ## bahigh -0.13220 0.16447 -0.804 0.421656 ## employ -0.14578 0.11867 -1.228 0.219499 ## open 0.50951 0.13240 3.848 0.000124 *** ## sexual -0.23793 0.20419 -1.165 0.244125 ## provide 0.04531 0.18550 0.244 0.807067 ## supervis 0.17338 0.16051 1.080 0.280258 ## other 0.10706 0.19382 0.552 0.580798 ## cra47a -0.01902 0.12132 -0.157 0.875439 ## mental 0.36035 0.11964 3.012 0.002642 ** ## arrest 0.54352 0.11719 4.638 3.85e-06 *** ## psh17a 0.62541 0.14106 4.434 1.00e-05 *** ## cidi 0.69456 0.11677 5.948 3.43e-09 *** ## cgneed 0.65257 0.18802 3.471 0.000535 *** ## Outcome equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 59.8803 0.6491 92.247 &lt; 2e-16 *** ## aodserv 8.6010 2.4749 3.475 0.000526 *** ## black -1.0393 0.7734 -1.344 0.179225 ## hispanic -3.1717 0.9226 -3.438 0.000604 *** ## natam -1.8137 1.5331 -1.183 0.236996 ## chdage2 -3.5110 0.9259 -3.792 0.000156 *** ## chdage3 -3.9853 0.7178 -5.552 3.38e-08 *** ## ra -1.4506 1.0688 -1.357 0.174925 ## Error terms: ## Estimate Std. Error t value Pr(&gt;|t|) ## sigma 12.1655 0.2473 49.199 &lt; 2e-16 *** ## rho -0.3603 0.1020 -3.532 0.000425 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## -------------------------------------------- 2.3 Bivariate t-test test1 &lt;- t.test(external3 ~ aodserv, data = d1, var.eq = TRUE) broom::tidy(test1) ## # A tibble: 1 x 10 ## estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -1.04 56.9 58.0 -0.861 0.390 1405 -3.40 1.33 ## # ... with 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt; test2 &lt;- t.test(internal3 ~ aodserv, data = d1, var.eq = TRUE) broom::tidy(test2) ## # A tibble: 1 x 10 ## estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -0.0889 54.1 54.2 -0.0757 0.940 1405 -2.39 2.21 ## # ... with 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt; 2.4 Regression Control ## external lm1 &lt;- lm(external3 ~ aodserv + black + hispanic + natam + chdage2 + chdage3 + ra + cgrage1 + cgrage2 + cgrage3 + high + bahigh + employ + open + sexual + provide + supervis + other + cra47a + mental + arrest + psh17a + cidi + cgneed, data = d1 ) summary(lm1) ## ## Call: ## lm(formula = external3 ~ aodserv + black + hispanic + natam + ## chdage2 + chdage3 + ra + cgrage1 + cgrage2 + cgrage3 + high + ## bahigh + employ + open + sexual + provide + supervis + other + ## cra47a + mental + arrest + psh17a + cidi + cgneed, data = d1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -30.348 -8.036 0.066 8.393 33.788 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 59.63256 2.50756 23.781 &lt; 2e-16 *** ## aodserv -0.07639 1.39550 -0.055 0.956356 ## black -1.18384 0.77819 -1.521 0.128418 ## hispanic -3.43055 0.93356 -3.675 0.000247 *** ## natam -2.04080 1.53283 -1.331 0.183280 ## chdage2 -4.12914 0.97743 -4.224 2.55e-05 *** ## chdage3 -4.19303 0.74541 -5.625 2.24e-08 *** ## ra -1.82419 1.10075 -1.657 0.097701 . ## cgrage1 2.14812 2.36725 0.907 0.364335 ## cgrage2 0.74817 2.38893 0.313 0.754189 ## cgrage3 1.26787 2.58228 0.491 0.623513 ## high -0.52629 0.76437 -0.689 0.491232 ## bahigh -1.34996 0.90995 -1.484 0.138154 ## employ -1.21689 0.67206 -1.811 0.070407 . ## open 1.85210 0.68703 2.696 0.007107 ** ## sexual -1.26955 0.97772 -1.298 0.194337 ## provide -2.49281 1.03149 -2.417 0.015791 * ## supervis -1.78870 0.91214 -1.961 0.050081 . ## other -2.30187 1.07602 -2.139 0.032590 * ## cra47a -0.85464 0.74812 -1.142 0.253496 ## mental 1.26474 0.77729 1.627 0.103939 ## arrest 1.50737 0.73360 2.055 0.040088 * ## psh17a 0.43293 1.17182 0.369 0.711848 ## cidi 2.07327 0.74786 2.772 0.005641 ** ## cgneed 1.30013 1.67097 0.778 0.436660 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 11.93 on 1382 degrees of freedom ## Multiple R-squared: 0.06632, Adjusted R-squared: 0.0501 ## F-statistic: 4.09 on 24 and 1382 DF, p-value: 1.684e-10 ## internal lm2 &lt;- lm(internal3 ~ aodserv + black + hispanic + natam + chdage2 + chdage3 + ra + cgrage1 + cgrage2 + cgrage3 + high + bahigh + employ + open + sexual + provide + supervis + other + cra47a + mental + arrest + psh17a + cidi + cgneed, data = d1 ) summary(lm2) ## ## Call: ## lm(formula = internal3 ~ aodserv + black + hispanic + natam + ## chdage2 + chdage3 + ra + cgrage1 + cgrage2 + cgrage3 + high + ## bahigh + employ + open + sexual + provide + supervis + other + ## cra47a + mental + arrest + psh17a + cidi + cgneed, data = d1) ## ## Residuals: ## Min 1Q Median 3Q Max ## -26.887 -8.335 -0.177 8.266 38.084 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 57.78878 2.45679 23.522 &lt; 2e-16 *** ## aodserv -2.04757 1.36724 -1.498 0.134468 ## black -2.39499 0.76243 -3.141 0.001718 ** ## hispanic -2.21251 0.91465 -2.419 0.015694 * ## natam 0.96135 1.50180 0.640 0.522194 ## chdage2 -1.99496 0.95764 -2.083 0.037417 * ## chdage3 0.10588 0.73032 0.145 0.884752 ## ra -1.55199 1.07846 -1.439 0.150355 ## cgrage1 -2.79050 2.31932 -1.203 0.229122 ## cgrage2 -2.53393 2.34056 -1.083 0.279168 ## cgrage3 -1.39309 2.53000 -0.551 0.581978 ## high -0.82272 0.74889 -1.099 0.272141 ## bahigh -1.41785 0.89152 -1.590 0.111982 ## employ -1.42970 0.65845 -2.171 0.030078 * ## open 1.60614 0.67312 2.386 0.017161 * ## sexual -0.28381 0.95792 -0.296 0.767059 ## provide -0.72467 1.01061 -0.717 0.473458 ## supervis -0.79821 0.89367 -0.893 0.371917 ## other -1.03314 1.05423 -0.980 0.327259 ## cra47a -0.69837 0.73298 -0.953 0.340867 ## mental 2.72274 0.76155 3.575 0.000362 *** ## arrest 0.00504 0.71874 0.007 0.994406 ## psh17a 1.02273 1.14810 0.891 0.373190 ## cidi 2.94720 0.73272 4.022 6.08e-05 *** ## cgneed 1.50006 1.63713 0.916 0.359684 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 11.69 on 1382 degrees of freedom ## Multiple R-squared: 0.05524, Adjusted R-squared: 0.03883 ## F-statistic: 3.367 on 24 and 1382 DF, p-value: 8.306e-08 2.5 Sample Description ## race aodserv d2 &lt;- d1 %&gt;% select(aodserv, black, hispanic, natam) %&gt;% mutate(race = case_when( black == 1 ~ 2, hispanic == 1 ~ 3, natam == 1 ~ 4, TRUE ~ 1 )) gmodels::CrossTable(d2$race, d2$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d2$aodserv ## d2$race | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 1 | 716 | 55 | 771 | ## | 0.929 | 0.071 | 0.548 | ## | 0.553 | 0.491 | | ## -------------|-----------|-----------|-----------| ## 2 | 319 | 31 | 350 | ## | 0.911 | 0.089 | 0.249 | ## | 0.246 | 0.277 | | ## -------------|-----------|-----------|-----------| ## 3 | 207 | 12 | 219 | ## | 0.945 | 0.055 | 0.156 | ## | 0.160 | 0.107 | | ## -------------|-----------|-----------|-----------| ## 4 | 53 | 14 | 67 | ## | 0.791 | 0.209 | 0.048 | ## | 0.041 | 0.125 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 18.24426 d.f. = 3 p = 0.0003916627 ## ## ## ## age aodserv d3 &lt;- d1 %&gt;% select(aodserv, chdage2, chdage3) %&gt;% mutate(age = case_when( chdage2 == 1 ~ 1, chdage3 == 1 ~ 2, TRUE ~ 3 )) gmodels::CrossTable(d3$age, d3$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d3$aodserv ## d3$age | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 1 | 239 | 19 | 258 | ## | 0.926 | 0.074 | 0.183 | ## | 0.185 | 0.170 | | ## -------------|-----------|-----------|-----------| ## 2 | 606 | 55 | 661 | ## | 0.917 | 0.083 | 0.470 | ## | 0.468 | 0.491 | | ## -------------|-----------|-----------|-----------| ## 3 | 450 | 38 | 488 | ## | 0.922 | 0.078 | 0.347 | ## | 0.347 | 0.339 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 0.2623022 d.f. = 2 p = 0.8770852 ## ## ## ## ra aodserv CrossTable(d1$ra, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$ra | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 1178 | 34 | 1212 | ## | 0.972 | 0.028 | 0.861 | ## | 0.910 | 0.304 | | ## -------------|-----------|-----------|-----------| ## 1 | 117 | 78 | 195 | ## | 0.600 | 0.400 | 0.139 | ## | 0.090 | 0.696 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 317.1802 d.f. = 1 p = 5.958214e-71 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 312.1238 d.f. = 1 p = 7.526006e-70 ## ## ## cgage aodserv d4 &lt;- d1 %&gt;% select(aodserv, cgrage1, cgrage2, cgrage3) %&gt;% mutate(cgage = case_when( cgrage1 == 1 ~ 1, cgrage2 == 1 ~ 2, cgrage3 == 1 ~ 3, TRUE ~ 4 )) CrossTable(d4$cgage, d4$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d4$aodserv ## d4$cgage | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 1 | 744 | 60 | 804 | ## | 0.925 | 0.075 | 0.571 | ## | 0.575 | 0.536 | | ## -------------|-----------|-----------|-----------| ## 2 | 424 | 41 | 465 | ## | 0.912 | 0.088 | 0.330 | ## | 0.327 | 0.366 | | ## -------------|-----------|-----------|-----------| ## 3 | 103 | 8 | 111 | ## | 0.928 | 0.072 | 0.079 | ## | 0.080 | 0.071 | | ## -------------|-----------|-----------|-----------| ## 4 | 24 | 3 | 27 | ## | 0.889 | 0.111 | 0.019 | ## | 0.019 | 0.027 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 1.189546 d.f. = 3 p = 0.7555126 ## ## ## ## cgedu aodserv d5 &lt;- d1 %&gt;% select(aodserv, high, bahigh) %&gt;% mutate(cgedu = case_when( high == 1 ~ 2, bahigh == 1 ~ 3, TRUE ~ 1 )) CrossTable(d5$cgedu, d5$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d5$aodserv ## d5$cgedu | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 1 | 398 | 45 | 443 | ## | 0.898 | 0.102 | 0.315 | ## | 0.307 | 0.402 | | ## -------------|-----------|-----------|-----------| ## 2 | 573 | 45 | 618 | ## | 0.927 | 0.073 | 0.439 | ## | 0.442 | 0.402 | | ## -------------|-----------|-----------|-----------| ## 3 | 324 | 22 | 346 | ## | 0.936 | 0.064 | 0.246 | ## | 0.250 | 0.196 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 4.520902 d.f. = 2 p = 0.1043035 ## ## ## ## employ aodserv CrossTable(d1$employ, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$employ | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 613 | 69 | 682 | ## | 0.899 | 0.101 | 0.485 | ## | 0.473 | 0.616 | | ## -------------|-----------|-----------|-----------| ## 1 | 682 | 43 | 725 | ## | 0.941 | 0.059 | 0.515 | ## | 0.527 | 0.384 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 8.40587 d.f. = 1 p = 0.003740114 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 7.844196 d.f. = 1 p = 0.005098412 ## ## ## open aodserv CrossTable(d1$open, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$open | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 584 | 23 | 607 | ## | 0.962 | 0.038 | 0.431 | ## | 0.451 | 0.205 | | ## -------------|-----------|-----------|-----------| ## 1 | 711 | 89 | 800 | ## | 0.889 | 0.111 | 0.569 | ## | 0.549 | 0.795 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 25.35062 d.f. = 1 p = 4.779984e-07 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 24.35924 d.f. = 1 p = 7.994254e-07 ## ## ## mtype aodserv d6 &lt;- d1 %&gt;% select(aodserv, sexual, provide, supervis, other) %&gt;% mutate(mytype = case_when( sexual == 1 ~ 2, provide == 1 ~ 3, supervis == 1 ~ 4, other == 1 ~ 5, TRUE ~ 1 )) CrossTable(d6$mytype, d6$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d6$aodserv ## d6$mytype | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 1 | 355 | 20 | 375 | ## | 0.947 | 0.053 | 0.267 | ## | 0.274 | 0.179 | | ## -------------|-----------|-----------|-----------| ## 2 | 246 | 10 | 256 | ## | 0.961 | 0.039 | 0.182 | ## | 0.190 | 0.089 | | ## -------------|-----------|-----------|-----------| ## 3 | 208 | 23 | 231 | ## | 0.900 | 0.100 | 0.164 | ## | 0.161 | 0.205 | | ## -------------|-----------|-----------|-----------| ## 4 | 312 | 41 | 353 | ## | 0.884 | 0.116 | 0.251 | ## | 0.241 | 0.366 | | ## -------------|-----------|-----------|-----------| ## 5 | 174 | 18 | 192 | ## | 0.906 | 0.094 | 0.136 | ## | 0.134 | 0.161 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 17.49052 d.f. = 4 p = 0.001551586 ## ## ## ## cra47a aodserv CrossTable(d1$cra47a, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$cra47a | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 925 | 63 | 988 | ## | 0.936 | 0.064 | 0.702 | ## | 0.714 | 0.562 | | ## -------------|-----------|-----------|-----------| ## 1 | 370 | 49 | 419 | ## | 0.883 | 0.117 | 0.298 | ## | 0.286 | 0.438 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 11.35724 d.f. = 1 p = 0.0007515451 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 10.64298 d.f. = 1 p = 0.001104893 ## ## ## mental aodserv CrossTable(d1$mental, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$mental | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 977 | 53 | 1030 | ## | 0.949 | 0.051 | 0.732 | ## | 0.754 | 0.473 | | ## -------------|-----------|-----------|-----------| ## 1 | 318 | 59 | 377 | ## | 0.844 | 0.156 | 0.268 | ## | 0.246 | 0.527 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 41.56367 d.f. = 1 p = 1.140941e-10 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 40.14231 d.f. = 1 p = 2.361194e-10 ## ## ## arrest aodserv CrossTable(d1$arrest, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$arrest | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 920 | 39 | 959 | ## | 0.959 | 0.041 | 0.682 | ## | 0.710 | 0.348 | | ## -------------|-----------|-----------|-----------| ## 1 | 375 | 73 | 448 | ## | 0.837 | 0.163 | 0.318 | ## | 0.290 | 0.652 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 62.31709 d.f. = 1 p = 2.923769e-15 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 60.65928 d.f. = 1 p = 6.785947e-15 ## ## ## psh17a aodserv CrossTable(d1$psh17a, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$psh17a | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 1199 | 70 | 1269 | ## | 0.945 | 0.055 | 0.902 | ## | 0.926 | 0.625 | | ## -------------|-----------|-----------|-----------| ## 1 | 96 | 42 | 138 | ## | 0.696 | 0.304 | 0.098 | ## | 0.074 | 0.375 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 105.4861 d.f. = 1 p = 9.556549e-25 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 102.1124 d.f. = 1 p = 5.245956e-24 ## ## ## cidi aodserv CrossTable(d1$cidi, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$cidi | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 964 | 41 | 1005 | ## | 0.959 | 0.041 | 0.714 | ## | 0.744 | 0.366 | | ## -------------|-----------|-----------|-----------| ## 1 | 331 | 71 | 402 | ## | 0.823 | 0.177 | 0.286 | ## | 0.256 | 0.634 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 72.29889 d.f. = 1 p = 1.849519e-17 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 70.45695 d.f. = 1 p = 4.704207e-17 ## ## ## cgneed aodserv CrossTable(d1$cgneed, d1$aodserv, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## | N / Col Total | ## |-------------------------| ## ## ## Total Observations in Table: 1407 ## ## ## | d1$aodserv ## d1$cgneed | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 1257 | 91 | 1348 | ## | 0.932 | 0.068 | 0.958 | ## | 0.971 | 0.812 | | ## -------------|-----------|-----------|-----------| ## 1 | 38 | 21 | 59 | ## | 0.644 | 0.356 | 0.042 | ## | 0.029 | 0.188 | | ## -------------|-----------|-----------|-----------| ## Column Total | 1295 | 112 | 1407 | ## | 0.920 | 0.080 | | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 64.18202 d.f. = 1 p = 1.134394e-15 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 60.30568 d.f. = 1 p = 8.121281e-15 ## ## "],["02_Section4.4.2.html", "3 Section 4.4.2 Evaluation of Treatment Effects From a Program With a Group Randomization Design (SD &amp; PS) 3.1 Preparation 3.2 Treatment Effect: Using Robust to Control for Clustering 3.3 Bivariate t-test", " 3 Section 4.4.2 Evaluation of Treatment Effects From a Program With a Group Randomization Design (SD &amp; PS) 3.1 Preparation library(haven) library(sampleSelection) library(stargazer) library(lmtest) library(sandwich) library(broom) library(tidyverse) # Load data d &lt;- haven::read_dta(&quot;data/Data_Chapter4/chpt4_2.dta&quot;) # New variables d1 &lt;- d %&gt;% mutate( icstsc_ = icstsc9 - icstsc8, cccpros_ = cccpros9 - cccpros8 ) 3.2 Treatment Effect: Using Robust to Control for Clustering ## tm1: icstsc_ tm1 &lt;- sampleSelection::treatReg(INTSCH ~ AYP05Cs + pmin05 + freel + puptch05 + age + Femalei + Black + White + Hisp + PCEDU + IncPovL + PCempF + Father + icstagg + icstaca + icstint + cccccon + cccstact + cccragg, icstsc_ ~ INTSCH + age + Femalei + Black + White + Hisp + PCEDU + IncPovL + PCempF + Father, data = d1 ) summary(tm1) ## -------------------------------------------- ## Tobit treatment model (switching regression model) ## Maximum Likelihood estimation ## Newton-Raphson maximisation, 3 iterations ## Return code 8: successive function values within relative tolerance limit (reltol) ## Log-Likelihood: -419.1466 ## 343 observations: 205 non-participants (selection 0) and 138 participants (selection 1) ## ## 33 free parameters (df = 310) ## Probit selection equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 49.884409 6.763195 7.376 1.50e-12 *** ## AYP05Cs -0.350359 0.042089 -8.324 2.75e-15 *** ## pmin05 -0.145510 0.031905 -4.561 7.35e-06 *** ## freel -0.122151 0.024913 -4.903 1.52e-06 *** ## puptch05 -1.213867 0.159621 -7.605 3.44e-13 *** ## age 0.360876 0.270849 1.332 0.18371 ## Femalei 0.111955 0.267683 0.418 0.67606 ## Black -0.702470 0.567162 -1.239 0.21644 ## White -1.119483 0.547849 -2.043 0.04186 * ## Hisp -0.731967 0.679472 -1.077 0.28220 ## PCEDU 0.069780 0.083510 0.836 0.40403 ## IncPovL 0.001162 0.001600 0.726 0.46851 ## PCempF -0.258378 0.268779 -0.961 0.33715 ## Father -0.044764 0.317550 -0.141 0.88799 ## icstagg 0.277720 0.165838 1.675 0.09501 . ## icstaca 0.160521 0.105803 1.517 0.13024 ## icstint 0.163774 0.133682 1.225 0.22146 ## cccccon -0.308199 0.215100 -1.433 0.15292 ## cccstact -0.410143 0.192687 -2.129 0.03408 * ## cccragg 0.843987 0.270015 3.126 0.00194 ** ## Outcome equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.5048621 0.6628793 -0.762 0.4469 ## INTSCH 0.1695111 0.0935018 1.813 0.0708 . ## age 0.0350348 0.0766253 0.457 0.6478 ## Femalei 0.0263529 0.0741235 0.356 0.7224 ## Black -0.1249269 0.1810169 -0.690 0.4906 ## White -0.1943417 0.1753729 -1.108 0.2687 ## Hisp -0.0695145 0.2092986 -0.332 0.7400 ## PCEDU 0.0259126 0.0228527 1.134 0.2577 ## IncPovL 0.0004387 0.0004497 0.976 0.3300 ## PCempF 0.0429337 0.0777466 0.552 0.5812 ## Father -0.0064700 0.0974858 -0.066 0.9471 ## Error terms: ## Estimate Std. Error t value Pr(&gt;|t|) ## sigma 0.67226 0.02576 26.098 &lt;2e-16 *** ## rho 0.20617 0.15105 1.365 0.173 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## -------------------------------------------- ## tm2: cccpros_ tm2 &lt;- sampleSelection::treatReg(INTSCH ~ AYP05Cs + pmin05 + freel + puptch05 + age + Femalei + Black + White + Hisp + PCEDU + IncPovL + PCempF + Father + icstagg + icstaca + icstint + cccccon + cccstact + cccragg, cccpros_ ~ INTSCH + age + Femalei + Black + White + Hisp + PCEDU + IncPovL + PCempF + Father, data = d1 ) summary(tm2) ## -------------------------------------------- ## Tobit treatment model (switching regression model) ## Maximum Likelihood estimation ## Newton-Raphson maximisation, 3 iterations ## Return code 1: gradient close to zero (gradtol) ## Log-Likelihood: -448.9298 ## 343 observations: 205 non-participants (selection 0) and 138 participants (selection 1) ## ## 33 free parameters (df = 310) ## Probit selection equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 50.593380 7.000035 7.228 3.85e-12 *** ## AYP05Cs -0.352590 0.043201 -8.162 8.38e-15 *** ## pmin05 -0.149962 0.032848 -4.565 7.20e-06 *** ## freel -0.121618 0.025292 -4.809 2.37e-06 *** ## puptch05 -1.223879 0.164426 -7.443 9.76e-13 *** ## age 0.334426 0.271992 1.230 0.21980 ## Femalei 0.121558 0.270417 0.450 0.65337 ## Black -0.761199 0.571136 -1.333 0.18358 ## White -1.186747 0.553713 -2.143 0.03287 * ## Hisp -0.725342 0.682592 -1.063 0.28878 ## PCEDU 0.085067 0.082792 1.027 0.30500 ## IncPovL 0.001198 0.001619 0.740 0.45981 ## PCempF -0.306341 0.268932 -1.139 0.25554 ## Father -0.043439 0.323502 -0.134 0.89327 ## icstagg 0.278521 0.169438 1.644 0.10123 ## icstaca 0.153971 0.107256 1.436 0.15214 ## icstint 0.187860 0.134537 1.396 0.16361 ## cccccon -0.302305 0.218265 -1.385 0.16704 ## cccstact -0.416366 0.197693 -2.106 0.03600 * ## cccragg 0.831849 0.277771 2.995 0.00297 ** ## Outcome equation: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -1.082e+00 7.208e-01 -1.501 0.1343 ## INTSCH 2.025e-01 1.004e-01 2.017 0.0446 * ## age 7.613e-02 8.332e-02 0.914 0.3616 ## Femalei 3.354e-02 8.059e-02 0.416 0.6776 ## Black -1.002e-01 1.968e-01 -0.509 0.6111 ## White -1.896e-01 1.907e-01 -0.994 0.3208 ## Hisp 6.832e-02 2.275e-01 0.300 0.7642 ## PCEDU 6.245e-02 2.484e-02 2.514 0.0125 * ## IncPovL 5.907e-05 4.890e-04 0.121 0.9039 ## PCempF 3.710e-02 8.452e-02 0.439 0.6610 ## Father 9.104e-02 1.060e-01 0.859 0.3911 ## Error terms: ## Estimate Std. Error t value Pr(&gt;|t|) ## sigma 0.73101 0.02793 26.177 &lt;2e-16 *** ## rho 0.08307 0.14812 0.561 0.575 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## -------------------------------------------- ## tm3: icstsc_ &amp; robust clustering broom::tidy(lmtest::coeftest(tm1, vcov = vcovCL, cluster = d1$school)) ## # A tibble: 33 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 X.Intercept. 49.9 14.3 3.49 0.000476 ## 2 AYP05Cs -0.350 0.103 -3.39 0.000694 ## 3 pmin05 -0.146 0.0513 -2.83 0.00460 ## 4 freel -0.122 0.0523 -2.34 0.0195 ## 5 puptch05 -1.21 0.282 -4.30 0.0000172 ## 6 age 0.361 0.140 2.58 0.00994 ## 7 Femalei 0.112 0.115 0.974 0.330 ## 8 Black -0.702 0.412 -1.71 0.0881 ## 9 White -1.12 0.542 -2.06 0.0390 ## 10 Hisp -0.732 0.185 -3.95 0.0000766 ## # ... with 23 more rows ## tm4: cccpros_ &amp; robust clustering broom::tidy(lmtest::coeftest(tm2, vcov = vcovCL, cluster = d1$school)) ## # A tibble: 33 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 X.Intercept. 50.6 15.0 3.38 0.000724 ## 2 AYP05Cs -0.353 0.107 -3.30 0.000978 ## 3 pmin05 -0.150 0.0545 -2.75 0.00595 ## 4 freel -0.122 0.0525 -2.32 0.0204 ## 5 puptch05 -1.22 0.297 -4.12 0.0000381 ## 6 age 0.334 0.139 2.40 0.0162 ## 7 Femalei 0.122 0.101 1.20 0.229 ## 8 Black -0.761 0.386 -1.97 0.0488 ## 9 White -1.19 0.517 -2.29 0.0218 ## 10 Hisp -0.725 0.173 -4.20 0.0000270 ## # ... with 23 more rows 3.3 Bivariate t-test test1 &lt;- t.test(icstsc_ ~ INTSCH, data = d1, var.eq = TRUE) broom::tidy(test1) ## # A tibble: 1 x 10 ## estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -0.255 -0.165 0.0899 -3.41 0.000733 341 -0.402 -0.108 ## # ... with 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt; test2 &lt;- t.test(cccpros_ ~ INTSCH, data = d1, var.eq = TRUE) broom::tidy(test2) ## # A tibble: 1 x 10 ## estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 -0.258 -0.170 0.0877 -3.14 0.00181 341 -0.420 -0.0967 ## # ... with 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt; "],["03_Section4.4.3.html", "4 Section 4.4.3 Main Features of Treatreg (PS &amp; SD) 4.1 Preparation 4.2 Run Models 4.3 Extract Coefficients 4.4 Get Combined Results 4.5 Results", " 4 Section 4.4.3 Main Features of Treatreg (PS &amp; SD) 4.1 Preparation library(purrr) library(haven) library(mitools) library(sampleSelection) library(sandwich) library(stargazer) library(tidyverse) select &lt;- dplyr::select # Import data mi.files &lt;- list.files(path = &quot;data/Data_Chapter4&quot;, full.names = TRUE) mi.files.g3ragg &lt;- mi.files[grepl(&quot;g3ragg&quot;, mi.files)] mi.data &lt;- purrr::map(mi.files.g3ragg, read_dta) # Combine data into a list mi.list &lt;- mitools::imputationList(mi.data) 4.2 Run Models fit &lt;- with(mi.list, exp = sampleSelection::treatReg( intbl ~ ageyc + fmale + blck + whit + hisp + pcedu + ipovl + pcemft + fthr + dicsaca2 + dicsint2, raggrch ~ intbl + ageyc + fmale + blck + whit + hisp + pcedu + ipovl + pcemft + fthr )) summary(fit) ## Length Class Mode ## [1,] 24 selection list ## [2,] 24 selection list ## [3,] 24 selection list ## [4,] 24 selection list ## [5,] 24 selection list ## [6,] 24 selection list ## [7,] 24 selection list ## [8,] 24 selection list ## [9,] 24 selection list ## [10,] 24 selection list ## [11,] 24 selection list ## [12,] 24 selection list ## [13,] 24 selection list ## [14,] 24 selection list ## [15,] 24 selection list ## [16,] 24 selection list ## [17,] 24 selection list ## [18,] 24 selection list ## [19,] 24 selection list ## [20,] 24 selection list ## [21,] 24 selection list ## [22,] 24 selection list ## [23,] 24 selection list ## [24,] 24 selection list ## [25,] 24 selection list ## [26,] 24 selection list ## [27,] 24 selection list ## [28,] 24 selection list ## [29,] 24 selection list ## [30,] 24 selection list ## [31,] 24 selection list ## [32,] 24 selection list ## [33,] 24 selection list ## [34,] 24 selection list ## [35,] 24 selection list ## [36,] 24 selection list ## [37,] 24 selection list ## [38,] 24 selection list ## [39,] 24 selection list ## [40,] 24 selection list ## [41,] 24 selection list ## [42,] 24 selection list ## [43,] 24 selection list ## [44,] 24 selection list ## [45,] 24 selection list ## [46,] 24 selection list ## [47,] 24 selection list ## [48,] 24 selection list ## [49,] 24 selection list ## [50,] 24 selection list 4.3 Extract Coefficients # Extract coefficients mi.coef &lt;- mitools::MIextract(fit, fun = coef) # Get robust clustered standard errors mi.data.nm &lt;- mi.data[[1]] %&gt;% select( intbl, ageyc, fmale, blck, whit, hisp, pcedu, ipovl, pcemft, fthr, dicsaca2, dicsint2, raggrch, schbl ) %&gt;% drop_na() mi.vcovCL &lt;- function(x) { return(vcovCL(x, cluster = mi.data.nm$schbl)) } mi.se &lt;- mitools::MIextract(fit, fun = mi.vcovCL) # Get estimates with robust clustered standard errors results &lt;- mitools::MIcombine(results = mi.coef, variances = mi.se) results.sum &lt;- summary(results) ## Multiple imputation results: ## MIcombine.default(results = mi.coef, variances = mi.se) ## results se (lower upper) missInfo ## 1 -0.3846433822 1.0453650438 -2.4335217098 1.6642349454 0 % ## 2 -0.0233546870 0.1130713200 -0.2449704160 0.1982610419 0 % ## 3 0.0367536986 0.1004236317 -0.1600730083 0.2335804054 0 % ## 4 0.1079040203 0.4245326154 -0.7241646205 0.9399726610 0 % ## 5 -0.7794963306 0.3848254013 -1.5337402609 -0.0252524003 0 % ## 6 -0.6523834165 0.5156576970 -1.6630539377 0.3582871047 0 % ## 7 0.0773367853 0.0481110431 -0.0169598121 0.1716333828 2 % ## 8 -0.0002776371 0.0008620650 -0.0019672734 0.0014119992 2 % ## 9 -0.2187803432 0.1151347382 -0.4444408855 0.0068801991 1 % ## 10 -0.0383072170 0.2040816599 -0.4383007945 0.3616863604 1 % ## 11 0.0525243594 0.0535480193 -0.0524278355 0.1574765544 0 % ## 12 0.1177965674 0.0407521963 0.0379236625 0.1976694723 1 % ## 13 0.7182494967 0.3800596548 -0.0266539280 1.4631529213 0 % ## 14 0.5800301960 0.3547247610 -0.1152175869 1.2752779788 0 % ## 15 -0.0843713968 0.0346291042 -0.1522432034 -0.0164995902 0 % ## 16 -0.0254345106 0.0676201642 -0.1579675973 0.1070985761 0 % ## 17 -0.1083275089 0.1582801567 -0.4185509161 0.2018958982 0 % ## 18 -0.1280032894 0.1875294331 -0.4955542276 0.2395476488 0 % ## 19 -0.0851296648 0.1413480328 -0.3621667468 0.1919074173 0 % ## 20 -0.0168040745 0.0213887984 -0.0587254391 0.0251172900 1 % ## 21 0.0002694735 0.0002365097 -0.0001941519 0.0007330989 8 % ## 22 0.0081559683 0.0924078480 -0.1729601100 0.1892720467 0 % ## 23 -0.0473603582 0.0676268419 -0.1799073173 0.0851866009 2 % ## 24 0.6892721817 0.0700485734 0.5519794996 0.8265648637 0 % ## 25 -0.3681447967 0.2710616350 -0.8994158662 0.1631262729 0 % 4.4 Get Combined Results results.t &lt;- results.sum$results / results.sum$se results.p &lt;- 2 * pt(-abs(results.t), df = nrow(mi.data.nm) - 1) results.df &lt;- data.frame( Variable = names(results$coefficients), Estimate = results.sum$results, SE = results.sum$se, t = results.t, p = results.p, `CI Lower` = results.sum$`(lower`, `CI Upper` = results.sum$`upper)` ) 4.5 Results stargazer(results.df, type = &quot;html&quot;, summary = FALSE, digits = 6, notes = c(&quot;Standard errors are robust clustered standard errors&quot;) ) Variable Estimate SE t p CI.Lower CI.Upper 1 (Intercept) -0.384643 1.045365 -0.367951 0.713042 -2.433522 1.664235 2 ageyc -0.023355 0.113071 -0.206548 0.836434 -0.244970 0.198261 3 fmale 0.036754 0.100424 0.365987 0.714507 -0.160073 0.233580 4 blck 0.107904 0.424533 0.254171 0.799452 -0.724165 0.939973 5 whit -0.779496 0.384825 -2.025584 0.043258 -1.533740 -0.025252 6 hisp -0.652383 0.515658 -1.265148 0.206318 -1.663054 0.358287 7 pcedu 0.077337 0.048111 1.607464 0.108488 -0.016960 0.171633 8 ipovl -0.000278 0.000862 -0.322061 0.747521 -0.001967 0.001412 9 pcemft -0.218780 0.115135 -1.900211 0.057893 -0.444441 0.006880 10 fthr -0.038307 0.204082 -0.187705 0.851172 -0.438301 0.361686 11 dicsaca2 0.052524 0.053548 0.980883 0.327053 -0.052428 0.157477 12 dicsint2 0.117797 0.040752 2.890558 0.003987 0.037924 0.197669 13 (Intercept) 0.718249 0.380060 1.889834 0.059271 -0.026654 1.463153 14 intbl 0.580030 0.354725 1.635156 0.102551 -0.115218 1.275278 15 ageyc -0.084371 0.034629 -2.436430 0.015128 -0.152243 -0.016500 16 fmale -0.025435 0.067620 -0.376138 0.706950 -0.157968 0.107099 17 blck -0.108328 0.158280 -0.684404 0.493990 -0.418551 0.201896 18 whit -0.128003 0.187529 -0.682577 0.495142 -0.495554 0.239548 19 hisp -0.085130 0.141348 -0.602270 0.547226 -0.362167 0.191907 20 pcedu -0.016804 0.021389 -0.785648 0.432389 -0.058725 0.025117 21 ipovl 0.000269 0.000237 1.139376 0.255010 -0.000194 0.000733 22 pcemft 0.008156 0.092408 0.088261 0.929700 -0.172960 0.189272 23 fthr -0.047360 0.067627 -0.700319 0.484005 -0.179907 0.085187 24 sigma 0.689272 0.070049 9.839917 0 0.551979 0.826565 25 rho -0.368145 0.271062 -1.358159 0.174933 -0.899416 0.163126 Standard errors are robust clustered standard errors "],["04_Section5.8.1.html", "5 Section 5.8.1 Greedy Matching and Subsequent Analysis of Hazard Rates (SD &amp; PS) 5.1 Preparation 5.2 Propensity Score Estimation 5.3 Bivariate Comparisons 5.4 PSM based on Logistic regression &amp; Covariate Balcance Check 5.5 PSM based on Logistic regression 2 5.6 PSM based on Logistic regression 3 5.7 Bivariate test after matching 5.8 Kaplan-Meier and significance test of difference on survivor function", " 5 Section 5.8.1 Greedy Matching and Subsequent Analysis of Hazard Rates (SD &amp; PS) library(MatchIt) library(cobalt) library(gmodels) library(ggplot2) library(survival) library(survMisc) library(survminer) library(knitr) library(kableExtra) library(tidyverse) select &lt;- dplyr::select 5.1 Preparation # load data d &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_1_original.dta&quot;) # make convenient objects ## names of match vars match_vars1 &lt;- colnames(select(d, PSH17A:other, -aodserv)) match_vars2 &lt;- colnames(select(d, PSH17A:cwwrep, -aodserv)) match_vars3 &lt;- colnames(select(d, PSH17A:cgneed, -aodserv)) ## PS formula psform1 &lt;- f.build(&quot;aodserv&quot;, match_vars1) psform2 &lt;- f.build(&quot;aodserv&quot;, match_vars2) psform3 &lt;- f.build(&quot;aodserv&quot;, match_vars3) # Function for balance check get_bal &lt;- function(out) cobalt::love.plot(out, binary = &quot;std&quot;, stats = c(&quot;mean.diffs&quot;), threshold = c(.1), var.order = &quot;unadjusted&quot;, line = TRUE ) 5.2 Propensity Score Estimation # logistic 1 psmodel1 &lt;- glm(psform1, data = d, family = binomial()) summary(psmodel1) ## ## Call: ## glm(formula = psform1, family = binomial(), data = d) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.6438 -0.4514 -0.2918 -0.1913 2.9941 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -3.08390 0.55184 -5.588 2.29e-08 *** ## PSH17A 1.36643 0.16501 8.281 &lt; 2e-16 *** ## CRA47A -0.05870 0.14756 -0.398 0.690761 ## married 0.05537 0.16348 0.339 0.734845 ## high -0.16055 0.15412 -1.042 0.297546 ## bahigh -0.42414 0.21172 -2.003 0.045142 * ## poverty2 -0.14588 0.17830 -0.818 0.413269 ## poverty3 -0.32912 0.23375 -1.408 0.159126 ## poverty4 -0.12501 0.26138 -0.478 0.632463 ## poverty5 0.09470 0.25266 0.375 0.707812 ## employ -0.17456 0.14975 -1.166 0.243744 ## open 0.80711 0.15888 5.080 3.77e-07 *** ## black 0.16694 0.16609 1.005 0.314827 ## hispanic 0.29803 0.21530 1.384 0.166285 ## natam 0.88220 0.26281 3.357 0.000788 *** ## cgrage1 -1.22543 0.44893 -2.730 0.006340 ** ## cgrage2 -0.75447 0.46083 -1.637 0.101588 ## cgrage3 -0.71892 0.51347 -1.400 0.161476 ## chdage1 1.08795 0.22546 4.826 1.40e-06 *** ## chdage2 0.34131 0.26566 1.285 0.198879 ## chdage3 0.23326 0.23314 1.001 0.317061 ## mental 0.73412 0.14429 5.088 3.62e-07 *** ## arrest 1.03357 0.14070 7.346 2.05e-13 *** ## sexual -0.66734 0.33500 -1.992 0.046365 * ## provide 0.44020 0.20441 2.154 0.031277 * ## supervis 0.10838 0.20141 0.538 0.590524 ## other 0.21122 0.24002 0.880 0.378865 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1888.8 on 2757 degrees of freedom ## Residual deviance: 1508.5 on 2731 degrees of freedom ## AIC: 1562.5 ## ## Number of Fisher Scoring iterations: 6 d$p1 &lt;- predict(psmodel1, newdata = d, type = &quot;response&quot;) d$ps1 &lt;- log((1 - d$p1) / (d$p1)) # logistic 2 psmodel2 &lt;- glm(psform2, data = d, family = binomial()) summary(psmodel2) ## ## Call: ## glm(formula = psform2, family = binomial(), data = d) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.5328 -0.2371 -0.1569 -0.1127 3.1786 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -3.93287 0.76855 -5.117 3.10e-07 *** ## PSH17A 0.35830 0.23549 1.522 0.128134 ## CRA47A -0.19514 0.19862 -0.982 0.325865 ## married 0.39739 0.22083 1.800 0.071929 . ## high 0.07841 0.21128 0.371 0.710541 ## bahigh -0.06395 0.28667 -0.223 0.823466 ## poverty2 -0.20632 0.24105 -0.856 0.392039 ## poverty3 -0.22029 0.30907 -0.713 0.476000 ## poverty4 -0.09863 0.35644 -0.277 0.782015 ## poverty5 -0.27714 0.34128 -0.812 0.416760 ## employ -0.32332 0.20119 -1.607 0.108037 ## open 0.16749 0.20614 0.812 0.416518 ## black -0.36731 0.23130 -1.588 0.112285 ## hispanic -0.08868 0.30319 -0.292 0.769914 ## natam 0.76930 0.36310 2.119 0.034115 * ## cgrage1 -0.92469 0.64331 -1.437 0.150606 ## cgrage2 -0.45959 0.65310 -0.704 0.481620 ## cgrage3 -0.42056 0.71567 -0.588 0.556773 ## chdage1 0.73922 0.29343 2.519 0.011761 * ## chdage2 0.22307 0.34508 0.646 0.518011 ## chdage3 0.17889 0.30061 0.595 0.551785 ## mental 0.20260 0.19791 1.024 0.305979 ## arrest 0.76652 0.18897 4.056 4.99e-05 *** ## sexual -0.42210 0.40478 -1.043 0.297052 ## provide -0.19100 0.27996 -0.682 0.495085 ## supervis -0.20181 0.27020 -0.747 0.455120 ## other -0.56899 0.34079 -1.670 0.094998 . ## ra 1.38794 0.19334 7.179 7.04e-13 *** ## cidi 0.97079 0.19578 4.959 7.10e-07 *** ## cgneed 1.10853 0.31760 3.490 0.000482 *** ## cwwrep 3.39786 0.20240 16.788 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1888.77 on 2757 degrees of freedom ## Residual deviance: 889.14 on 2727 degrees of freedom ## AIC: 951.14 ## ## Number of Fisher Scoring iterations: 7 d$p2 &lt;- predict(psmodel2, newdata = d, type = &quot;response&quot;) d$ps2 &lt;- log((1 - d$p2) / (d$p2)) # logistic 3 psmodel3 &lt;- glm(psform3, data = d, family = binomial()) summary(psmodel3) ## ## Call: ## glm(formula = psform3, family = binomial(), data = d) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.4604 -0.3366 -0.2096 -0.1429 3.0240 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -3.79884 0.62666 -6.062 1.34e-09 *** ## PSH17A 0.62992 0.19120 3.295 0.000986 *** ## CRA47A -0.08252 0.16271 -0.507 0.612045 ## married 0.18045 0.18464 0.977 0.328416 ## high -0.21000 0.17289 -1.215 0.224504 ## bahigh -0.25255 0.23458 -1.077 0.281664 ## poverty2 -0.08765 0.19929 -0.440 0.660077 ## poverty3 -0.22084 0.26155 -0.844 0.398466 ## poverty4 0.09489 0.29126 0.326 0.744579 ## poverty5 0.01112 0.28038 0.040 0.968356 ## employ -0.16203 0.16607 -0.976 0.329231 ## open 0.50934 0.17368 2.933 0.003362 ** ## black 0.02147 0.18840 0.114 0.909258 ## hispanic 0.33221 0.24475 1.357 0.174675 ## natam 0.81935 0.29513 2.776 0.005499 ** ## cgrage1 -1.21001 0.50236 -2.409 0.016012 * ## cgrage2 -0.81256 0.51415 -1.580 0.114015 ## cgrage3 -0.40958 0.56728 -0.722 0.470294 ## chdage1 1.02718 0.24950 4.117 3.84e-05 *** ## chdage2 0.35775 0.29296 1.221 0.222021 ## chdage3 0.19034 0.25683 0.741 0.458610 ## mental 0.63288 0.16118 3.927 8.62e-05 *** ## arrest 0.85781 0.15751 5.446 5.15e-08 *** ## sexual -0.42152 0.36142 -1.166 0.243493 ## provide 0.27552 0.22986 1.199 0.230659 ## supervis -0.01958 0.22708 -0.086 0.931271 ## other 0.03372 0.26971 0.125 0.900518 ## ra 2.02604 0.15716 12.892 &lt; 2e-16 *** ## cidi 0.91196 0.15992 5.703 1.18e-08 *** ## cgneed 1.21045 0.26045 4.648 3.36e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1888.8 on 2757 degrees of freedom ## Residual deviance: 1226.5 on 2728 degrees of freedom ## AIC: 1286.5 ## ## Number of Fisher Scoring iterations: 6 d$p3 &lt;- predict(psmodel3, newdata = d, type = &quot;response&quot;) d$ps3 &lt;- log((1 - d$p3) / (d$p3)) 5.3 Bivariate Comparisons d %&gt;% select(married, educ, pov, employ, open, race, chdage, cgage, CRA47A, mental, arrest, PSH17A, maltx, ra, cidi, cgneed, cwwrep, aodserv) %&gt;% pivot_longer(-aodserv, names_to = &quot;variable&quot;) %&gt;% group_by(variable) %&gt;% nest() %&gt;% mutate(bivariate.test = map(data, ~chisq.test(.$aodserv, .$value, correct = F))) %&gt;% mutate(statistic = map(bivariate.test, ~round(.$statistic, 3))) %&gt;% mutate(p.value = map(bivariate.test, ~round(.$p.value, 3))) %&gt;% unnest(cols = c(statistic, p.value)) %&gt;% select(variable, statistic, p.value) ## # A tibble: 17 x 3 ## # Groups: variable [17] ## variable statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 married 2.97 0.085 ## 2 educ 10.5 0.005 ## 3 pov 11.3 0.023 ## 4 employ 23.1 0 ## 5 open 58.4 0 ## 6 race 11.5 0.009 ## 7 chdage 55.4 0 ## 8 cgage 3.56 0.313 ## 9 CRA47A 17.5 0 ## 10 mental 92.5 0 ## 11 arrest 127. 0 ## 12 PSH17A 179. 0 ## 13 maltx 49.7 0 ## 14 ra 585. 0 ## 15 cidi 157. 0 ## 16 cgneed 139. 0 ## 17 cwwrep 1240. 0 Bivariate tests with contingency tables can also be accomplished with: gmodels::CrossTable(d$married, d$aodserv, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE, chisq = TRUE) 5.4 PSM based on Logistic regression &amp; Covariate Balcance Check Note: The matching results here are slightly different from the results in STATA. With R, we also prefer to use plots to check balances, which is different from the approach in STATA. 5.4.1 Scheme 1 - Nearest neighbor within caliper .25*SD # PSM based on Logistic regression 1 &amp; Covariate Balance Check set.seed(100) m_nc1_1.out &lt;- matchit(psform1, data = d, method = &quot;nearest&quot;, distance = d$ps1, m.order = &quot;random&quot;, caliper = .25, replace = T ) m_nc1_1.out ## A matchit object ## - method: 1:1 nearest neighbor matching with replacement ## - distance: User-defined [caliper] ## - caliper: &lt;distance&gt; (0.311) ## - number of obs.: 2758 (original), 527 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other m_nc1_1.data &lt;- MatchIt::match.data(m_nc1_1.out) get_bal(m_nc1_1.out) 5.4.2 Scheme 2 - Nearest neighbor within caliper .1*SD # Note: Unlike Stata, the default caliper setting in matchit() is in standard deviation units (i.e., caliper = 0.1 is 0.1*SD) set.seed(100) m_nc1_2.out &lt;- matchit(psform1, data = d, method = &quot;nearest&quot;, distance = d$ps1, m.order = &quot;random&quot;, caliper = .1, replace = T ) m_nc1_2.out ## A matchit object ## - method: 1:1 nearest neighbor matching with replacement ## - distance: User-defined [caliper] ## - caliper: &lt;distance&gt; (0.124) ## - number of obs.: 2758 (original), 527 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other m_nc1_2.data &lt;- match.data(m_nc1_2.out) get_bal(m_nc1_2.out) 5.4.3 Scheme 3 - Mahalanobis without propensity score set.seed(100) m_m1.out &lt;- matchit(psform1, data = d, distance = &quot;mahalanobis&quot;, m.order = &quot;random&quot; ) m_m1.out ## A matchit object ## - method: 1:1 nearest neighbor matching without replacement ## - distance: Mahalanobis ## - number of obs.: 2758 (original), 596 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other m_m1.data &lt;- match.data(m_m1.out) get_bal(m_m1.out) 5.4.4 Scheme 4 - Mahalanobis with propensity score match_vars1m &lt;- colnames(select(d, PSH17A:other, ps1, -aodserv)) psform1m &lt;- f.build(&quot;aodserv&quot;, match_vars1m) set.seed(100) m_mp1.out &lt;- matchit(psform1m, data = d, distance = &quot;mahalanobis&quot; ) m_mp1.out ## A matchit object ## - method: 1:1 nearest neighbor matching without replacement ## - distance: Mahalanobis ## - number of obs.: 2758 (original), 596 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ps1 m_mp1.data &lt;- match.data(m_mp1.out) get_bal(m_mp1.out) 5.5 PSM based on Logistic regression 2 5.5.1 Scheme 5 - Nearest neighbor within caliper .25*SD set.seed(100) m_nc2_1.out &lt;- matchit(psform2, data = d, method = &quot;nearest&quot;, distance = d$ps2, m.order = &quot;random&quot;, caliper = .25, replace = T ) m_nc2_1.out ## A matchit object ## - method: 1:1 nearest neighbor matching with replacement ## - distance: User-defined [caliper] ## - caliper: &lt;distance&gt; (0.49) ## - number of obs.: 2758 (original), 424 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed, cwwrep m_nc2_1.data &lt;- match.data(m_nc2_1.out) get_bal(m_nc2_1.out) 5.5.2 Scheme 6 - Nearest neighbor within caliper .1*SD (Note: caliper in MatchIt is not real data) set.seed(100) m_nc2_2.out &lt;- matchit(psform2, data = d, method = &quot;nearest&quot;, distance = d$ps2, m.order = &quot;random&quot;, caliper = .1, replace = T ) m_nc2_2.out ## A matchit object ## - method: 1:1 nearest neighbor matching with replacement ## - distance: User-defined [caliper] ## - caliper: &lt;distance&gt; (0.196) ## - number of obs.: 2758 (original), 417 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed, cwwrep m_mp2.data &lt;- match.data(m_nc2_2.out) get_bal(m_nc2_2.out) 5.5.3 Scheme 7 - Mahalanobis without propensity score set.seed(100) m_m2.out &lt;- matchit(psform2, data = d, distance = &quot;mahalanobis&quot;, m.order = &quot;random&quot; ) m_m2.out ## A matchit object ## - method: 1:1 nearest neighbor matching without replacement ## - distance: Mahalanobis ## - number of obs.: 2758 (original), 596 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed, cwwrep m_m2.data &lt;- match.data(m_m2.out) get_bal(m_m2.out) 5.5.4 Scheme 8 - Mahalanobis with propensity score vars2m &lt;- colnames(select(d, PSH17A:cwwrep, ps2, -aodserv)) psform2m &lt;- f.build(&quot;aodserv&quot;, vars2m) set.seed(100) m_mp2.out &lt;- matchit(psform2m, data = d, distance = &quot;mahalanobis&quot; ) m_mp2.out m_mp2.data &lt;- match.data(m_mp2.out) get_bal(m_mp2.out) 5.6 PSM based on Logistic regression 3 5.6.1 Scheme 9 - Nearest neighbor within caliper .25*SD set.seed(100) m_nc3_1.out &lt;- matchit(psform3, data = d, method = &quot;nearest&quot;, distance = d$ps3, m.order = &quot;random&quot;, caliper = .25, replace = T ) m_nc3_1.out ## A matchit object ## - method: 1:1 nearest neighbor matching with replacement ## - distance: User-defined [caliper] ## - caliper: &lt;distance&gt; (0.401) ## - number of obs.: 2758 (original), 494 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed m_nc3_1.data &lt;- match.data(m_nc3_1.out) get_bal(m_nc3_1.out) 5.6.2 Scheme 10 - Nearest neighbor within caliper .1*SD set.seed(100) m_nc3_2.out &lt;- matchit(psform3, data = d, method = &quot;nearest&quot;, distance = d$ps3, m.order = &quot;random&quot;, caliper = .1, replace = T ) m_nc3_2.out ## A matchit object ## - method: 1:1 nearest neighbor matching with replacement ## - distance: User-defined [caliper] ## - caliper: &lt;distance&gt; (0.16) ## - number of obs.: 2758 (original), 491 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed m_nc3_2.data &lt;- match.data(m_nc3_2.out) get_bal(m_nc3_2.out) 5.6.3 Scheme 11 - Mahalanobis without propensity score set.seed(100) m_m3.out &lt;- matchit(psform3, data = d, distance = &quot;mahalanobis&quot;, m.order = &quot;random&quot; ) m_m3.out ## A matchit object ## - method: 1:1 nearest neighbor matching without replacement ## - distance: Mahalanobis ## - number of obs.: 2758 (original), 596 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed m_m3.data &lt;- match.data(m_m3.out) get_bal(m_m3.out) 5.6.4 Scheme 12 - Mahalanobis with propensity score match_vars3m &lt;- colnames(select(d, PSH17A:cgneed, ps3, -aodserv)) psform3m &lt;- f.build(&quot;aodserv&quot;, match_vars3m) set.seed(100) m_mp3.out &lt;- matchit(psform3m, data = d, distance = &quot;mahalanobis&quot; ) m_mp3.out ## A matchit object ## - method: 1:1 nearest neighbor matching without replacement ## - distance: Mahalanobis ## - number of obs.: 2758 (original), 596 (matched) ## - target estimand: ATT ## - covariates: PSH17A, CRA47A, married, high, bahigh, poverty2, poverty3, poverty4, poverty5, employ, open, black, hispanic, natam, cgrage1, cgrage2, cgrage3, chdage1, chdage2, chdage3, mental, arrest, sexual, provide, supervis, other, ra, cidi, cgneed, ps3 m_mp3.data &lt;- match.data(m_mp3.out) get_bal(m_mp3.out) 5.7 Bivariate test after matching # Check balance using chi-squared tests check_balance &lt;- function(df) { # List of covariates to check balance covs &lt;- c(&quot;married&quot;, &quot;high&quot;, &quot;bahigh&quot;, &quot;poverty2&quot;, &quot;poverty3&quot;, &quot;poverty4&quot;, &quot;poverty5&quot;, &quot;employ&quot;, &quot;open&quot;, &quot;black&quot;, &quot;hispanic&quot;, &quot;natam&quot;, &quot;cgrage1&quot;, &quot;cgrage2&quot;, &quot;cgrage3&quot;, &quot;chdage1&quot;, &quot;chdage2&quot;, &quot;chdage3&quot;, &quot;CRA47A&quot;, &quot;mental&quot;, &quot;arrest&quot;, &quot;PSH17A&quot;, &quot;sexual&quot;, &quot;provide&quot;, &quot;supervis&quot;, &quot;other&quot;, &quot;ra&quot;, &quot;cidi&quot;, &quot;cgneed&quot;, &quot;cwwrep&quot;) # Function to calculate chisq.test p-values calc &lt;- function(cov) { return(data.frame(covariate = cov, p = chisq.test(df[cov], df$aodserv)$p.value)) } # Calculate chisq.test for each covariate results &lt;- map_dfr(covs, calc) %&gt;% mutate(sig = ifelse(p &lt; 0.05, &quot;sig&quot;, &quot;not sig&quot;)) %&gt;% mutate(p = round(p, 2)) # Get covariates that did not overlap sufficiently (p &lt; .05) results_sig &lt;- results %&gt;% filter(sig == &quot;sig&quot;) # Return results return(list(table = results, sig = toupper(results_sig$covariate))) } # Combine tables 5.5 and 5.6 get_table &lt;- function(scheme, df) { sig_vars &lt;- ifelse(is.data.frame(df), paste(check_balance(df)$sig, collapse = &quot;, &quot;), df) treated_n &lt;- ifelse(is.data.frame(df), nrow(filter(df, aodserv == 1)), NA) control_n &lt;- ifelse(is.data.frame(df), nrow(filter(df, aodserv == 0)), NA) results &lt;- tibble(Scheme = scheme, SigCovariates = sig_vars, Treated = treated_n, Control = control_n) } table_schemes &lt;- c(&quot;Original&quot;, &quot;1. Nearest 1-1&quot;, &quot;2. Nearest 1-2&quot;, &quot;3. Mahalanobis 1&quot;, &quot;4. Mahalanobis 1 with p-score added&quot;, &quot;5. Nearest 2-1&quot;, &quot;6. Nearest 2-2&quot;, &quot;7. Mahalanobis 2&quot;, &quot;8. Mahalanobis 2 with p-score added&quot;, &quot;9. Nearest 3-1&quot;, &quot;10. Nearest 3-2&quot;, &quot;11. Mahalanobis 3&quot;, &quot;12. Mahalanobis 3 with p-score added&quot;) table_dfs &lt;- list(d, m_nc1_1.data, m_nc1_2.data, # Original, Schemes 1, 2 m_m1.data, m_mp1.data, # Schemes 3, 4 m_nc2_1.data, m_mp2.data, # Schemes 5, 6 m_m2.data, m_mp2.data , # Schemes 7, 8 m_nc3_1.data, m_nc3_2.data, # Schemes 9, 10 m_m3.data, m_mp3.data) # Schemes 11, 12 table_summary &lt;- map2_dfr(table_schemes, table_dfs, get_table) options(knitr.kable.NA = &quot;&quot;) # Do not display NAs in kable table_summary %&gt;% kbl(format = &quot;html&quot;, col.names = c(&quot;Scheme&quot;, &quot;Covariate Distributions Did Not Overlap Sufficiently: Covariates Significant After Matching p &lt; .05&quot;, &quot;Treated&quot;, &quot;Control&quot;)) %&gt;% add_header_above(c(&quot; &quot; = 2, &quot;N of the New Sample&quot; = 2)) N of the New Sample Scheme Covariate Distributions Did Not Overlap Sufficiently: Covariates Significant After Matching p &lt; .05 Treated Control Original BAHIGH, POVERTY3, EMPLOY, OPEN, NATAM, CHDAGE1, CHDAGE3, CRA47A, MENTAL, ARREST, PSH17A, SEXUAL, PROVIDE, RA, CIDI, CGNEED, CWWREP 298 2460 Nearest 1-1 RA, CIDI, CGNEED, CWWREP 295 232 Nearest 1-2 RA, CIDI, CGNEED, CWWREP 295 232 Mahalanobis 1 OPEN, MENTAL, ARREST, PSH17A, RA, CIDI, CGNEED, CWWREP 298 298 Mahalanobis 1 with p-score added OPEN, MENTAL, ARREST, PSH17A, RA, CIDI, CGNEED, CWWREP 298 298 Nearest 2-1 RA, CWWREP 294 130 Nearest 2-2 RA, CWWREP 287 130 Mahalanobis 2 OPEN, CRA47A, MENTAL, ARREST, PSH17A, RA, CIDI, CWWREP 298 298 Mahalanobis 2 with p-score added RA, CWWREP 287 130 Nearest 3-1 CIDI, CWWREP 298 196 Nearest 3-2 CWWREP 295 196 Mahalanobis 3 OPEN, CRA47A, MENTAL, ARREST, PSH17A, RA, CIDI, CWWREP 298 298 Mahalanobis 3 with p-score added OPEN, CGRAGE2, MENTAL, ARREST, PSH17A, RA, CIDI, CWWREP 298 298 5.8 Kaplan-Meier and significance test of difference on survivor function 5.8.1 All # all ds &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_all.dta&quot;) ## KM survival analysis fit &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds) fit ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds) ## ## n events median 0.95LCL 0.95UCL ## aodserv=0 2429 448 NA NA NA ## aodserv=1 294 84 NA NA NA quantile(fit, probs = 0.15) ## $quantile ## 15 ## aodserv=0 13.552092 ## aodserv=1 7.645611 ## ## $lower ## 15 ## aodserv=0 12.600492 ## aodserv=1 5.972108 ## ## $upper ## 15 ## aodserv=0 15.06153 ## aodserv=1 10.43478 ## Log-rank or Mantel-Haenszel test fit.test &lt;- survival::survdiff(Surv(durm, rrpt) ~ aodserv, data = ds, rho = 0) fit.test ## Call: ## survival::survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds, ## rho = 0) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 2429 448 478.2 1.91 18.9 ## aodserv=1 294 84 53.8 16.95 18.9 ## ## Chisq= 18.9 on 1 degrees of freedom, p= 1e-05 comp(ten(fit)) # the first n row is the Gehan-Breslow generalized Wilcoxon test ## Q Var Z pNorm ## 1 3.0201e+01 4.8338e+01 4.3440 6 ## n 7.5476e+04 2.9252e+08 4.4130 2 ## sqrtN 1.5091e+03 1.1865e+05 4.3812 5 ## S1 2.7758e+01 3.9630e+01 4.4094 4 ## S2 2.7747e+01 3.9597e+01 4.4094 3 ## FH_p=1_q=1 2.1482e+00 4.3656e-01 3.2513 1 ## maxAbsZ Var Q pSupBr ## 1 3.0201e+01 4.8338e+01 4.3440 6 ## n 7.5476e+04 2.9252e+08 4.4130 2 ## sqrtN 1.5091e+03 1.1865e+05 4.3812 5 ## S1 2.7758e+01 3.9630e+01 4.4094 4 ## S2 2.7747e+01 3.9597e+01 4.4094 3 ## FH_p=1_q=1 2.1482e+00 4.3656e-01 3.2513 1 ## plot ggsurvplot(fit, data = ds, pval = F) 5.8.2 Scheme 1 ds1 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_1.dta&quot;) ## KM survival analysis fit1 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds1) fit1 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds1) ## ## 9 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 277 73 NA NA NA ## aodserv=1 278 79 NA NA NA quantile(fit1, probs = 0.15) ## $quantile ## 15 ## aodserv=0 9.483183 ## aodserv=1 7.448728 ## ## $lower ## 15 ## aodserv=0 7.186218 ## aodserv=1 5.742412 ## ## $upper ## 15 ## aodserv=0 12.17391 ## aodserv=1 10.53322 ## Log-rank or Mantel-Haenszel test fit1.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds1, rho = 0) fit1.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds1, rho = 0) ## ## n=555, 9 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 277 73 76.9 0.194 0.394 ## aodserv=1 278 79 75.1 0.199 0.394 ## ## Chisq= 0.4 on 1 degrees of freedom, p= 0.5 comp(ten(fit1)) ## Q Var Z pNorm ## 1 3.8659e+00 3.7981e+01 0.627292 5 ## n 2.1150e+03 8.7738e+06 0.714029 3 ## sqrtN 9.0488e+01 1.8173e+04 0.671248 4 ## S1 3.8181e+00 2.8463e+01 0.715660 2 ## S2 3.8111e+00 2.8345e+01 0.715832 1 ## FH_p=1_q=1 7.1132e-02 5.9633e-01 0.092114 6 ## maxAbsZ Var Q pSupBr ## 1 6.2567e+00 3.7981e+01 1.01522 5 ## n 3.2300e+03 8.7738e+06 1.09046 1 ## sqrtN 1.4209e+02 1.8173e+04 1.05401 4 ## S1 5.8074e+00 2.8463e+01 1.08853 3 ## S2 5.7962e+00 2.8345e+01 1.08868 2 ## FH_p=1_q=1 4.7369e-01 5.9633e-01 0.61341 6 ## plot ggsurvplot(fit1, data = ds1, pval = F) 5.8.3 Scheme 2 ds2 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_2.dta&quot;) ## KM survival analysis fit2 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds2) fit2 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds2) ## ## 9 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 276 70 NA NA NA ## aodserv=1 277 79 NA NA NA quantile(fit2, probs = 0.15) ## $quantile ## 15 ## aodserv=0 10.205086 ## aodserv=1 7.645611 ## ## $lower ## 15 ## aodserv=0 7.711239 ## aodserv=1 5.742412 ## ## $upper ## 15 ## aodserv=0 12.92863 ## aodserv=1 10.53322 ## Log-rank or Mantel-Haenszel test fit2.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds2, rho = 0) fit2.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds2, rho = 0) ## ## n=553, 9 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 276 70 75.5 0.401 0.814 ## aodserv=1 277 79 73.5 0.412 0.814 ## ## Chisq= 0.8 on 1 degrees of freedom, p= 0.4 comp(ten(fit2)) ## Q Var Z pNorm ## 1 5.5027e+00 3.7230e+01 0.90183 5 ## n 2.8410e+03 8.5777e+06 0.97003 3 ## sqrtN 1.2491e+02 1.7793e+04 0.93643 4 ## S1 5.1543e+00 2.8035e+01 0.97345 2 ## S2 5.1443e+00 2.7919e+01 0.97359 1 ## FH_p=1_q=1 3.0002e-01 5.7032e-01 0.39727 6 ## maxAbsZ Var Q pSupBr ## 1 7.2715e+00 3.7230e+01 1.19171 5 ## n 3.7380e+03 8.5777e+06 1.27630 1 ## sqrtN 1.6484e+02 1.7793e+04 1.23576 4 ## S1 6.7453e+00 2.8035e+01 1.27394 3 ## S2 6.7322e+00 2.7919e+01 1.27411 2 ## FH_p=1_q=1 4.9779e-01 5.7032e-01 0.65915 6 ## plot ggsurvplot(fit2, data = ds2, pval = F) 5.8.4 Scheme 3 ds3 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_3.dta&quot;) ## KM survival analysis fit3 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds3) fit3 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds3) ## ## 9 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 261 52 NA NA NA ## aodserv=1 261 77 NA NA NA quantile(fit3, probs = 0.15) ## $quantile ## 15 ## aodserv=0 12.108285 ## aodserv=1 7.645611 ## ## $lower ## 15 ## aodserv=0 10.205086 ## aodserv=1 5.742412 ## ## $upper ## 15 ## aodserv=0 NA ## aodserv=1 10.63167 ## Log-rank or Mantel-Haenszel test fit3.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds3, rho = 0) fit3.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds3, rho = 0) ## ## n=522, 9 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 261 52 66.7 3.23 6.69 ## aodserv=1 261 77 62.3 3.45 6.69 ## ## Chisq= 6.7 on 1 degrees of freedom, p= 0.01 comp(ten(fit3)) ## Q Var Z pNorm ## 1 1.4674e+01 3.2190e+01 2.5863 4 ## n 6.7630e+03 6.7873e+06 2.5959 2 ## sqrtN 3.1472e+02 1.4730e+04 2.5931 3 ## S1 1.2955e+01 2.4836e+01 2.5995 1 ## S2 1.2927e+01 2.4728e+01 2.5995 1 ## FH_p=1_q=1 1.4200e+00 4.3025e-01 2.1649 5 ## maxAbsZ Var Q pSupBr ## 1 1.4674e+01 3.2190e+01 2.5863 4 ## n 6.7630e+03 6.7873e+06 2.5959 2 ## sqrtN 3.1472e+02 1.4730e+04 2.5931 3 ## S1 1.2955e+01 2.4836e+01 2.5995 1 ## S2 1.2927e+01 2.4728e+01 2.5995 1 ## FH_p=1_q=1 1.4200e+00 4.3025e-01 2.1649 5 ## plot ggsurvplot(fit3, data = ds3, pval = F) 5.8.5 Scheme 4 ds4 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_4.dta&quot;) ## KM survival analysis fit4 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds4) fit4 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds4) ## ## 9 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 261 52 NA NA NA ## aodserv=1 261 75 NA NA NA quantile(fit4, probs = 0.15) ## $quantile ## 15 ## aodserv=0 12.108285 ## aodserv=1 7.645611 ## ## $lower ## 15 ## aodserv=0 10.205086 ## aodserv=1 5.578343 ## ## $upper ## 15 ## aodserv=0 NA ## aodserv=1 10.53322 ## Log-rank or Mantel-Haenszel test fit4.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds4, rho = 0) fit4.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds4, rho = 0) ## ## n=522, 9 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 261 52 65.6 2.82 5.85 ## aodserv=1 261 75 61.4 3.02 5.85 ## ## Chisq= 5.8 on 1 degrees of freedom, p= 0.02 comp(ten(fit4)) ## Q Var Z pNorm ## 1 1.3613e+01 3.1696e+01 2.4181 5 ## n 6.3540e+03 6.7105e+06 2.4528 3 ## sqrtN 2.9383e+02 1.4535e+04 2.4372 4 ## S1 1.2174e+01 2.4555e+01 2.4567 2 ## S2 1.2148e+01 2.4448e+01 2.4568 1 ## FH_p=1_q=1 1.1979e+00 4.1344e-01 1.8631 6 ## maxAbsZ Var Q pSupBr ## 1 1.3613e+01 3.1696e+01 2.4181 5 ## n 6.3540e+03 6.7105e+06 2.4528 3 ## sqrtN 2.9383e+02 1.4535e+04 2.4372 4 ## S1 1.2174e+01 2.4555e+01 2.4567 2 ## S2 1.2148e+01 2.4448e+01 2.4568 1 ## FH_p=1_q=1 1.1979e+00 4.1344e-01 1.8631 6 ## plot ggsurvplot(fit4, data = ds4, pval = F) 5.8.6 Scheme 5 ds5 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_5.dta&quot;) ## KM survival analysis fit5 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds5) fit5 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds5) ## ## 4 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 164 41 NA NA NA ## aodserv=1 160 48 NA NA NA quantile(fit5, probs = 0.15) ## $quantile ## 15 ## aodserv=0 9.515997 ## aodserv=1 7.547170 ## ## $lower ## 15 ## aodserv=0 5.512715 ## aodserv=1 5.053322 ## ## $upper ## 15 ## aodserv=0 13.35521 ## aodserv=1 11.28794 ## Log-rank or Mantel-Haenszel test fit5.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds5, rho = 0) fit5.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds5, rho = 0) ## ## n=324, 4 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 164 41 45.6 0.461 0.946 ## aodserv=1 160 48 43.4 0.484 0.946 ## ## Chisq= 0.9 on 1 degrees of freedom, p= 0.3 comp(ten(fit5)) ## Q Var Z pNorm ## 1 4.5849e+00 2.2226e+01 0.97251 2 ## n 1.2030e+03 1.7512e+06 0.90906 6 ## sqrtN 7.4286e+01 6.2104e+03 0.94264 3 ## S1 3.7094e+00 1.6628e+01 0.90967 4 ## S2 3.6953e+00 1.6511e+01 0.90943 5 ## FH_p=1_q=1 7.1015e-01 3.4820e-01 1.20347 1 ## maxAbsZ Var Q pSupBr ## 1 5.0699e+00 2.2226e+01 1.0754 2 ## n 1.3460e+03 1.7512e+06 1.0171 4 ## sqrtN 8.2656e+01 6.2104e+03 1.0488 3 ## S1 4.1350e+00 1.6628e+01 1.0140 5 ## S2 4.1195e+00 1.6511e+01 1.0138 6 ## FH_p=1_q=1 7.6877e-01 3.4820e-01 1.3028 1 ## plot ggsurvplot(fit5, data = ds5, pval = F) 5.8.7 Scheme 6 ds6 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_6.dta&quot;) ## KM survival analysis fit6 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds6) fit6 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds6) ## ## 4 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 163 41 NA NA NA ## aodserv=1 159 47 NA NA NA quantile(fit6, probs = 0.15) ## $quantile ## 15 ## aodserv=0 9.515997 ## aodserv=1 8.761280 ## ## $lower ## 15 ## aodserv=0 5.184578 ## aodserv=1 5.250205 ## ## $upper ## 15 ## aodserv=0 13.35521 ## aodserv=1 11.94422 ## Log-rank or Mantel-Haenszel test fit6.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds6, rho = 0) fit6.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds6, rho = 0) ## ## n=322, 4 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 163 41 44.9 0.340 0.696 ## aodserv=1 159 47 43.1 0.355 0.696 ## ## Chisq= 0.7 on 1 degrees of freedom, p= 0.4 comp(ten(fit6)) ## Q Var Z pNorm ## 1 3.9103e+00 2.1982e+01 0.83402 2 ## n 9.8500e+02 1.7122e+06 0.75277 6 ## sqrtN 6.2073e+01 6.1069e+03 0.79431 3 ## S1 3.0711e+00 1.6468e+01 0.75680 4 ## S2 3.0590e+00 1.6351e+01 0.75649 5 ## FH_p=1_q=1 6.6073e-01 3.4163e-01 1.13044 1 ## maxAbsZ Var Q pSupBr ## 1 3.9564e+00 2.1982e+01 0.84386 2 ## n 1.0310e+03 1.7122e+06 0.78792 4 ## sqrtN 6.3915e+01 6.1069e+03 0.81788 3 ## S1 3.1854e+00 1.6468e+01 0.78497 5 ## S2 3.1732e+00 1.6351e+01 0.78476 6 ## FH_p=1_q=1 6.6073e-01 3.4163e-01 1.13044 1 ## plot ggsurvplot(fit6, data = ds6, pval = F) 5.8.8 Scheme 7 ds7 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_7.dta&quot;) ## KM survival analysis fit7 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds7) fit7 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds7) ## ## 5 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 181 43 NA NA NA ## aodserv=1 178 50 NA NA NA quantile(fit7, probs = 0.15) ## $quantile ## 15 ## aodserv=0 9.909762 ## aodserv=1 7.842494 ## ## $lower ## 15 ## aodserv=0 6.365874 ## aodserv=1 5.742412 ## ## $upper ## 15 ## aodserv=0 13.65053 ## aodserv=1 11.94422 ## Log-rank or Mantel-Haenszel test fit7.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds7, rho = 0) fit7.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds7, rho = 0) ## ## n=359, 5 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 181 43 47.3 0.384 0.782 ## aodserv=1 178 50 45.7 0.397 0.782 ## ## Chisq= 0.8 on 1 degrees of freedom, p= 0.4 comp(ten(fit7)) ## Q Var Z pNorm ## 1 4.2622e+00 2.3240e+01 0.88412 2 ## n 1.2360e+03 2.2889e+06 0.81697 6 ## sqrtN 7.2516e+01 7.2654e+03 0.85075 3 ## S1 3.4533e+00 1.7690e+01 0.82107 4 ## S2 3.4415e+00 1.7578e+01 0.82084 5 ## FH_p=1_q=1 6.3117e-01 3.3362e-01 1.09275 1 ## maxAbsZ Var Q pSupBr ## 1 4.2622e+00 2.3240e+01 0.88412 2 ## n 1.2360e+03 2.2889e+06 0.81697 6 ## sqrtN 7.2516e+01 7.2654e+03 0.85075 3 ## S1 3.4533e+00 1.7690e+01 0.82107 4 ## S2 3.4415e+00 1.7578e+01 0.82084 5 ## FH_p=1_q=1 6.3117e-01 3.3362e-01 1.09275 1 ## plot ggsurvplot(fit7, data = ds7, pval = F) 5.8.9 Scheme 8 ds8 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_8.dta&quot;) ## KM survival analysis fit8 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds8) fit8 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds8) ## ## 5 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 181 43 NA NA NA ## aodserv=1 178 49 NA NA NA quantile(fit8, probs = 0.15) ## $quantile ## 15 ## aodserv=0 9.909762 ## aodserv=1 7.251846 ## ## $lower ## 15 ## aodserv=0 6.365874 ## aodserv=1 5.217391 ## ## $upper ## 15 ## aodserv=0 13.65053 ## aodserv=1 12.46924 ## Log-rank or Mantel-Haenszel test fit8.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds8, rho = 0) fit8.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds8, rho = 0) ## ## n=359, 5 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 181 43 46.9 0.317 0.645 ## aodserv=1 178 49 45.1 0.328 0.645 ## ## Chisq= 0.6 on 1 degrees of freedom, p= 0.4 comp(ten(fit8)) ## Q Var Z pNorm ## 1 3.8510e+00 2.2987e+01 0.80320 1 ## n 1.1720e+03 2.2716e+06 0.77761 6 ## sqrtN 6.7077e+01 7.1991e+03 0.79055 3 ## S1 3.2670e+00 1.7547e+01 0.77992 4 ## S2 3.2563e+00 1.7436e+01 0.77983 5 ## FH_p=1_q=1 4.5504e-01 3.2435e-01 0.79900 2 ## maxAbsZ Var Q pSupBr ## 1 3.8510e+00 2.2987e+01 0.80320 1 ## n 1.1720e+03 2.2716e+06 0.77761 6 ## sqrtN 6.7077e+01 7.1991e+03 0.79055 3 ## S1 3.2670e+00 1.7547e+01 0.77992 4 ## S2 3.2563e+00 1.7436e+01 0.77983 5 ## FH_p=1_q=1 4.5504e-01 3.2435e-01 0.79900 2 ## plot ggsurvplot(fit8, data = ds8, pval = F) 5.8.10 Scheme 9 ds9 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_9.dta&quot;) ## KM survival analysis fit9 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds9) fit9 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds9) ## ## 8 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 241 49 NA NA NA ## aodserv=1 241 69 NA NA NA quantile(fit9, probs = 0.15) ## $quantile ## 15 ## aodserv=0 12.698934 ## aodserv=1 7.645611 ## ## $lower ## 15 ## aodserv=0 10.926989 ## aodserv=1 5.578343 ## ## $upper ## 15 ## aodserv=0 17.26005 ## aodserv=1 10.43478 ## Log-rank or Mantel-Haenszel test fit9.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds9, rho = 0) fit9.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds9, rho = 0) ## ## n=482, 8 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 241 49 61 2.36 4.88 ## aodserv=1 241 69 57 2.52 4.88 ## ## Chisq= 4.9 on 1 degrees of freedom, p= 0.03 comp(ten(fit9)) ## Q Var Z pNorm ## 1 1.1988e+01 2.9446e+01 2.2091 5 ## n 5.2650e+03 5.2896e+06 2.2892 1 ## sqrtN 2.5117e+02 1.2436e+04 2.2524 4 ## S1 1.0901e+01 2.2775e+01 2.2842 3 ## S2 1.0876e+01 2.2668e+01 2.2844 2 ## FH_p=1_q=1 9.5097e-01 3.8852e-01 1.5257 6 ## maxAbsZ Var Q pSupBr ## 1 1.3613e+01 2.9446e+01 2.5086 5 ## n 5.9200e+03 5.2896e+06 2.5740 1 ## sqrtN 2.8382e+02 1.2436e+04 2.5451 4 ## S1 1.2252e+01 2.2775e+01 2.5673 3 ## S2 1.2224e+01 2.2668e+01 2.5674 2 ## FH_p=1_q=1 1.1797e+00 3.8852e-01 1.8926 6 ## plot ggsurvplot(fit9, data = ds9, pval = F) 5.8.11 Scheme 10 ds10 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_10.dta&quot;) ## KM survival analysis fit10 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds10) fit10 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds10) ## ## 8 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 241 49 NA NA NA ## aodserv=1 241 70 NA NA NA quantile(fit10, probs = 0.15) ## $quantile ## 15 ## aodserv=0 12.698934 ## aodserv=1 7.645611 ## ## $lower ## 15 ## aodserv=0 10.926989 ## aodserv=1 5.283019 ## ## $upper ## 15 ## aodserv=0 17.26005 ## aodserv=1 11.15669 ## Log-rank or Mantel-Haenszel test fit10.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds10, rho = 0) fit10.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds10, rho = 0) ## ## n=482, 8 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 241 49 61.4 2.51 5.19 ## aodserv=1 241 70 57.6 2.67 5.19 ## ## Chisq= 5.2 on 1 degrees of freedom, p= 0.02 comp(ten(fit10)) ## Q Var Z pNorm ## 1 1.2410e+01 2.9701e+01 2.2771 5 ## n 5.3880e+03 5.3103e+06 2.3381 1 ## sqrtN 2.5841e+02 1.2511e+04 2.3103 4 ## S1 1.1177e+01 2.2915e+01 2.3348 3 ## S2 1.1151e+01 2.2808e+01 2.3349 2 ## FH_p=1_q=1 1.0460e+00 3.9736e-01 1.6593 6 ## maxAbsZ Var Q pSupBr ## 1 1.3044e+01 2.9701e+01 2.3935 5 ## n 5.6880e+03 5.3103e+06 2.4683 1 ## sqrtN 2.7231e+02 1.2511e+04 2.4345 4 ## S1 1.1774e+01 2.2915e+01 2.4596 3 ## S2 1.1747e+01 2.2808e+01 2.4597 2 ## FH_p=1_q=1 1.0946e+00 3.9736e-01 1.7365 6 ## plot ggsurvplot(fit10, data = ds10, pval = F) 5.8.12 Scheme 11 ds11 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_11.dta&quot;) ## KM survival analysis fit11 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds11) fit11 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds11) ## ## 7 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 232 46 NA NA NA ## aodserv=1 231 62 NA NA NA quantile(fit11, probs = 0.1) ## $quantile ## 10 ## aodserv=0 7.645611 ## aodserv=1 5.283019 ## ## $lower ## 10 ## aodserv=0 4.757998 ## aodserv=1 4.495488 ## ## $upper ## 10 ## aodserv=0 11.386382 ## aodserv=1 7.645611 ## Log-rank or Mantel-Haenszel test fit11.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds11, rho = 0) fit11.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds11, rho = 0) ## ## n=463, 7 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 232 46 55.2 1.55 3.17 ## aodserv=1 231 62 52.8 1.62 3.17 ## ## Chisq= 3.2 on 1 degrees of freedom, p= 0.07 comp(ten(fit11)) ## Q Var Z pNorm ## 1 9.2489e+00 2.6974e+01 1.7808 1 ## n 3.7510e+03 4.5446e+06 1.7595 5 ## sqrtN 1.8613e+02 1.1039e+04 1.7716 2 ## S1 8.0927e+00 2.1121e+01 1.7609 3 ## S2 8.0728e+00 2.1019e+01 1.7608 4 ## FH_p=1_q=1 9.5997e-01 3.2902e-01 1.6736 6 ## maxAbsZ Var Q pSupBr ## 1 9.2489e+00 2.6974e+01 1.7808 1 ## n 3.7510e+03 4.5446e+06 1.7595 5 ## sqrtN 1.8613e+02 1.1039e+04 1.7716 2 ## S1 8.0927e+00 2.1121e+01 1.7609 3 ## S2 8.0728e+00 2.1019e+01 1.7608 4 ## FH_p=1_q=1 9.5997e-01 3.2902e-01 1.6736 6 ## plot ggsurvplot(fit11, data = ds11, pval = F) 5.8.13 Scheme 12 ds12 &lt;- haven::read_dta(&quot;data/Data_Chapter5/svl_12.dta&quot;) ## KM survival analysis fit12 &lt;- survfit(Surv(durm, rrpt) ~ aodserv, data = ds12) fit12 ## Call: survfit(formula = Surv(durm, rrpt) ~ aodserv, data = ds12) ## ## 7 observations deleted due to missingness ## n events median 0.95LCL 0.95UCL ## aodserv=0 232 46 NA NA NA ## aodserv=1 231 64 NA NA NA quantile(fit12, probs = 0.1) ## $quantile ## 10 ## aodserv=0 7.645611 ## aodserv=1 5.972108 ## ## $lower ## 10 ## aodserv=0 4.757998 ## aodserv=1 4.495488 ## ## $upper ## 10 ## aodserv=0 11.38638 ## aodserv=1 8.76128 ## Log-rank or Mantel-Haenszel test fit12.test &lt;- survdiff(Surv(durm, rrpt) ~ aodserv, data = ds12, rho = 0) fit12.test ## Call: ## survdiff(formula = Surv(durm, rrpt) ~ aodserv, data = ds12, rho = 0) ## ## n=463, 7 observations deleted due to missingness. ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## aodserv=0 232 46 56.3 1.89 3.87 ## aodserv=1 231 64 53.7 1.98 3.87 ## ## Chisq= 3.9 on 1 degrees of freedom, p= 0.05 comp(ten(fit12)) ## Q Var Z pNorm ## 1 1.0305e+01 2.7473e+01 1.9660 2 ## n 4.0950e+03 4.6009e+06 1.9091 6 ## sqrtN 2.0522e+02 1.1207e+04 1.9386 3 ## S1 8.8610e+00 2.1412e+01 1.9149 4 ## S2 8.8387e+00 2.1308e+01 1.9148 5 ## FH_p=1_q=1 1.1738e+00 3.4510e-01 1.9980 1 ## maxAbsZ Var Q pSupBr ## 1 1.0305e+01 2.7473e+01 1.9660 2 ## n 4.0950e+03 4.6009e+06 1.9091 6 ## sqrtN 2.0522e+02 1.1207e+04 1.9386 3 ## S1 8.8610e+00 2.1412e+01 1.9149 4 ## S2 8.8387e+00 2.1308e+01 1.9148 5 ## FH_p=1_q=1 1.1738e+00 3.4510e-01 1.9980 1 ## plot ggsurvplot(fit12, data = ds12, pval = F) "],["05_Section5.8.2_5.8.3_5.8.4.html", "6 Section 5.8.2, 5.8.3, and 5.8.4 (SD &amp; PS) 6.1 Section 5.8.2 Optimal Matching 6.2 Section 5.8.3 Post-Full-Matching Analysis of Outcome 6.3 Section 5.8.4 Post-Matching Analysis Using Regression of Difference Scores", " 6 Section 5.8.2, 5.8.3, and 5.8.4 (SD &amp; PS) 6.1 Section 5.8.2 Optimal Matching library(optmatch) library(knitr) library(broom) library(sandwich) library(kableExtra) library(tidyverse) library(rlang) select &lt;- dplyr::select 6.1.1 Load Data d &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_2_original.dta&quot;) df &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_2.dta&quot;) cds &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_2ps.dta&quot;) 6.1.2 Bivariate Comparisons # Intergenerational dependence gmodels::CrossTable(d$kuse, d$puse, prop.c = FALSE, prop.r = FALSE, prop.chisq = FALSE, chisq = TRUE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Table Total | ## |-------------------------| ## ## ## Total Observations in Table: 1003 ## ## ## | d$puse ## d$kuse | 0 | 1 | Row Total | ## -------------|-----------|-----------|-----------| ## 0 | 615 | 114 | 729 | ## | 0.613 | 0.114 | | ## -------------|-----------|-----------|-----------| ## 1 | 154 | 120 | 274 | ## | 0.154 | 0.120 | | ## -------------|-----------|-----------|-----------| ## Column Total | 769 | 234 | 1003 | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 88.27405 d.f. = 1 p = 5.698621e-21 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 86.70687 d.f. = 1 p = 1.258586e-20 ## ## # Wilcoxon Rank-Sum (Mann-Whitney) test and t-test d %&gt;% select(mratio96, pcged97, pcg_adc, black, age97, male, kuse) %&gt;% pivot_longer(-kuse, names_to = &quot;variable&quot;) %&gt;% group_by(variable) %&gt;% nest() %&gt;% mutate(wilcoxon = map(data, ~wilcox.test(.$value ~.$kuse, correct = F))) %&gt;% mutate(wilcoxon.stat = map(wilcoxon, ~round(.$statistic, 3))) %&gt;% mutate(wilcoxon.pvalue = map(wilcoxon, ~round(.$p.value, 3))) %&gt;% unnest(cols = c(wilcoxon.stat, wilcoxon.pvalue)) %&gt;% mutate(ttest = map(data, ~t.test(.$value ~ .$kuse, var.equal = T))) %&gt;% mutate(t.stat = map(ttest, ~round(.$statistic, 3))) %&gt;% mutate(t.pvalue = map(ttest, ~round(.$p.value, 3))) %&gt;% unnest(cols = c(t.stat, t.pvalue)) %&gt;% select(-data, -wilcoxon, -ttest) ## # A tibble: 6 x 5 ## # Groups: variable [6] ## variable wilcoxon.stat wilcoxon.pvalue t.stat t.pvalue ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 mratio96 172618. 0 12.3 0 ## 2 pcged97 147410. 0 12.3 0 ## 3 pcg_adc 69728 0 -11.0 0 ## 4 black 58038 0 -12.7 0 ## 5 age97 87129 0.002 -3.11 0.002 ## 6 male 101544 0.636 0.473 0.637 6.1.3 Outcome Without Bias Control # visual d &lt;- d %&gt;% dplyr::mutate(treatfac = case_when(kuse==0 ~ &quot;Nonusers&quot;, kuse==1 ~ &quot;Users&quot;)) ggplot(d, aes(y = lwss97, x = treatfac)) + geom_boxplot() # t-test t.test(lwss97 ~ kuse, data = d, var.equal = T) %&gt;% broom::tidy() ## # A tibble: 1 x 10 ## estimate estimate1 estimate2 statistic p.value parameter conf.low conf.high ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 9.82 104. 94.2 8.51 6.27e-17 1001 7.56 12.1 ## # ... with 2 more variables: method &lt;chr&gt;, alternative &lt;chr&gt; # regression reg &lt;- lm( lwss97 ~ kuse + male + black + age97 + pcged97 + mratio96 + pcg_adc, data = d) broom::tidy(lmtest::coeftest(reg, vcov = vcovCL, cluster = d$pcg_id)) ## # A tibble: 8 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 84.9 4.50 18.9 4.30e-68 ## 2 kuse -4.73 1.39 -3.40 7.00e- 4 ## 3 male -2.00 0.987 -2.02 4.34e- 2 ## 4 black -1.88 1.23 -1.53 1.27e- 1 ## 5 age97 0.873 0.170 5.14 3.30e- 7 ## 6 pcged97 0.910 0.336 2.71 6.91e- 3 ## 7 mratio96 1.13 0.332 3.41 6.67e- 4 ## 8 pcg_adc -0.758 0.311 -2.44 1.50e- 2 6.1.4 Matching Note: To be consistent with the STATA result, we will use the propensity scores created by Stata. 6.1.4.1 Distribution of estimated propensity scores cds &lt;- cds %&gt;% dplyr::mutate( treatfac = case_when( kuse==0 ~ &quot;Nonusers&quot;, kuse==1 ~ &quot;Users&quot;)) ggplot(cds, aes(x = treatfac, y = ps)) + geom_boxplot() + ggtitle(&quot;Box Plots of Estimated Propensity Scores&quot;) + theme(plot.title = element_text(hjust = 0.5)) ggplot(cds, aes(x = ps, color = treatfac)) + geom_histogram(aes(y=..density..), fill=&quot;white&quot;, position=&quot;dodge&quot;)+ geom_density(alpha=.2, fill=&quot;#FF6666&quot;) + ggtitle(&quot;Histograms of Estimated Propensity Scores&quot;) + theme(plot.title = element_text(hjust = 0.5)) 6.1.4.2 Optimal Matching attach(cds) prank &lt;- rank(ps) names(prank) &lt;- kid d1 &lt;- outer(prank[kuse==1], prank[kuse==0], &quot;-&quot;) d1 &lt;- abs(d1) #fullmatch fm fm &lt;- fullmatch(d1) (fm.d &lt;- matched.distances(fm,d1,pres=TRUE)) unlist(fm.d,max) #variable match, (vm1 - at least 1 at most 4) vm1 &lt;- fullmatch(d1,min.controls=1,max.controls=4) (vm1.d &lt;- matched.distances(vm1,d1,pres=TRUE)) unlist(vm1.d,max) #variable match, (vm2 - at least 2 at most 4) vm2 &lt;- fullmatch(d1,min.controls=2,max.controls=4) (vm2.d &lt;- matched.distances(vm2,d1,pres=TRUE)) unlist(vm2.d,max) #variable match, (vm3 - use Hensen&#39;s equaion) vm3 &lt;- fullmatch(d1,min.controls=1.33,max.controls=5.32) (vm3.d &lt;- matched.distances(vm3,d1,pres=TRUE)) unlist(vm3.d,max) #variable match, (vm4 at least 2 at most 7) vm4 &lt;- fullmatch(d1,min.controls=2,max.controls=7) (vm4.d &lt;- matched.distances(vm4,d1,pres=TRUE)) unlist(vm4.d,max) #pairmatch pm pm &lt;- pairmatch(d1, controls=1) (pm.d &lt;- matched.distances(pm,d1,pres=TRUE)) unlist(pm.d,max) mean(unlist(fm.d)) ## [1] 35.89389 sum(unlist(fm.d)) ## [1] 31120 stratumStructure(fm) ## 25:1 14:1 11:1 10:1 9:1 7:1 6:1 5:1 4:1 3:1 2:1 1:1 1:2 ## 1 1 2 2 1 1 2 3 3 5 8 48 8 ## 1:3 1:4 1:5 1:6 1:7 1:8 1:9 1:10 1:11 1:15 1:17 1:18 1:21 ## 10 7 8 3 2 4 1 5 2 1 1 2 1 ## 1:24 1:31 1:64 1:185 ## 1 1 1 1 mean(unlist(vm1.d)) ## [1] 328.7579 sum(unlist(vm1.d)) ## [1] 239664.5 stratumStructure(vm1) ## 1:1 1:3 1:4 ## 122 1 151 mean(unlist(vm2.d)) ## [1] 348.1852 sum(unlist(vm2.d)) ## [1] 253827 stratumStructure(vm2) ## 1:2 1:3 1:4 ## 183 1 90 mean(unlist(vm3.d)) ## [1] 269.7222 sum(unlist(vm3.d)) ## [1] 196627.5 stratumStructure(vm3) ## 1:1 1:6 ## 183 91 mean(unlist(vm4.d)) ## [1] 312.3162 sum(unlist(vm4.d)) ## [1] 227678.5 stratumStructure(vm4) ## 1:2 1:3 1:7 ## 237 1 36 mean(unlist(pm.d)) ## [1] 143.2263 sum(unlist(pm.d)) ## [1] 39244 stratumStructure(pm) ## 1:1 0:1 ## 274 455 6.1.4.3 Table 5.10. Covariate Imbalance Before and After Matching by Matching Scheme # Imbalance function imbalance &lt;- function(cov, method) { # get quosure cov_name &lt;- cov method_name &lt;- method cov &lt;- rlang::parse_expr(cov) method &lt;- rlang::parse_expr(method) # dx df2 &lt;- df %&gt;% group_by(kuse) %&gt;% summarise(m_x := mean(!!cov), sd_x := sd(!!cov), .groups = &quot;drop&quot;) mxt = df2[2,2] mxc = df2[1,2] s2xt = df2[2,3]^2 s2xc = df2[1,3]^2 sx = sqrt((s2xt+s2xc)/2) dx = as.numeric(abs(mxt-mxc)/sx) # dxm if (method != &quot;before&quot;) { df3 &lt;- df %&gt;% group_by(!!method, kuse) %&gt;% summarise(m_x = mean(!!cov), sd_x = sd(!!cov), n = n(), .groups = &quot;drop&quot;) mxc = as.numeric(mean(filter(df3, kuse == 0)$m_x)) mxt = as.numeric(mean(filter(df3, kuse == 1)$m_x)) dxm_num = abs(mxt-mxc) dxm = as.numeric(dxm_num/sx) return(tibble(cov = cov_name, method = method_name, dx = NA, dxm = dxm)) } else { return(tibble(cov = cov_name, method = method_name, dx = dx, dxm = NA)) } } # Define covariates cov_labels &lt;- tibble(cov = c(&quot;mratio96&quot;, &quot;pcged97&quot;, &quot;pcg_adc&quot;, &quot;black&quot;, &quot;age97&quot;, &quot;male&quot;), new = c(&quot;Ratio of family income to poverty line in 1996&quot;, &quot;Caregiver&#39;s education in 1997 (years of schooling)&quot;, &quot;Caregiver&#39;s number of years using AFDC in childhood&quot;, &quot;Child&#39;s race: African American (reference: other)&quot;, &quot;Child&#39;s age in 1997&quot;, &quot;Child&#39;s gender: male (reference: female)&quot;), order = c(1, 2, 3, 4, 5, 6)) # Calculate dx and dxm using imbalance() arg1 &lt;- rep(c(&quot;mratio96&quot;, &quot;pcged97&quot;, &quot;pcg_adc&quot;, &quot;black&quot;, &quot;age97&quot;, &quot;male&quot;), each = 7) arg2 &lt;- rep(c(&quot;before&quot;, &quot;fm&quot;, &quot;vm1&quot;, &quot;vm2&quot;, &quot;vm3&quot;, &quot;vm4&quot;, &quot;pm&quot;), length(arg1)/7) table_5.10 &lt;- map2_dfr(arg1, arg2, imbalance) %&gt;% mutate(method = recode(method, `before` = &quot;Before Matching&quot;, `fm` = &quot;Full Matching&quot;, `vm1` = &quot;Variable Matching 1 (at least 1, at most 4)&quot;, `vm2` = &quot;Variable Matching 2 (at least 2, at most 4)&quot;, `vm3` = &quot;Variable Matching 3 (Hansen&#39;s equation)&quot;, `vm4` = &quot;Variable Matching 4 (at least 2, at most 7)&quot;, `pm` = &quot;Pair matching&quot;)) %&gt;% left_join(cov_labels, by = &quot;cov&quot;) %&gt;% arrange(order) %&gt;% select(new, method, dx, dxm) # Print Table 5.10 options(knitr.kable.NA = &quot;&quot;) knitr::kable(table_5.10, col.names = c(&quot;Covariate&quot;, &quot;Matching Scheme&quot;, &quot;$d_x$&quot;, &quot;$d_{xm}$&quot;), escape = FALSE, format = &quot;html&quot;, digits = 2, caption = &quot;Table 5.10. Covariate Imbalance Before and After Matching by Matching Scheme&quot;) %&gt;% kable_styling(latex_options = &quot;striped&quot;) %&gt;% kable_styling(position = &quot;center&quot;) %&gt;% collapse_rows(columns = 1, valign = &quot;top&quot;) Table 6.1: Table 5.10. Covariate Imbalance Before and After Matching by Matching Scheme Covariate Matching Scheme \\(d_x\\) \\(d_{xm}\\) Ratio of family income to poverty line in 1996 Before Matching 1.02 Full Matching 0.04 Variable Matching 1 (at least 1, at most 4) 0.79 Variable Matching 2 (at least 2, at most 4) 0.94 Variable Matching 3 (Hansens equation) 0.74 Variable Matching 4 (at least 2, at most 7) 0.87 Pair matching 0.25 Caregivers education in 1997 (years of schooling) Before Matching 0.91 Full Matching 0.17 Variable Matching 1 (at least 1, at most 4) 0.72 Variable Matching 2 (at least 2, at most 4) 0.87 Variable Matching 3 (Hansens equation) 0.75 Variable Matching 4 (at least 2, at most 7) 0.81 Pair matching 0.34 Caregivers number of years using AFDC in childhood Before Matching 0.67 Full Matching 0.01 Variable Matching 1 (at least 1, at most 4) 0.56 Variable Matching 2 (at least 2, at most 4) 0.65 Variable Matching 3 (Hansens equation) 0.55 Variable Matching 4 (at least 2, at most 7) 0.63 Pair matching 0.40 Childs race: African American (reference: other) Before Matching 0.93 Full Matching 0.01 Variable Matching 1 (at least 1, at most 4) 0.79 Variable Matching 2 (at least 2, at most 4) 0.92 Variable Matching 3 (Hansens equation) 0.73 Variable Matching 4 (at least 2, at most 7) 0.85 Pair matching 0.44 Childs age in 1997 Before Matching 0.22 Full Matching 0.07 Variable Matching 1 (at least 1, at most 4) 0.21 Variable Matching 2 (at least 2, at most 4) 0.22 Variable Matching 3 (Hansens equation) 0.19 Variable Matching 4 (at least 2, at most 7) 0.24 Pair matching 0.14 Childs gender: male (reference: female) Before Matching 0.03 Full Matching 0.05 Variable Matching 1 (at least 1, at most 4) 0.02 Variable Matching 2 (at least 2, at most 4) 0.05 Variable Matching 3 (Hansens equation) 0.01 Variable Matching 4 (at least 2, at most 7) 0.03 Pair matching 0.09 6.2 Section 5.8.3 Post-Full-Matching Analysis of Outcome 6.2.1 Hodges-Lehmann Aligned Rank Test # Shenyang Guo&#39;s Stata program, hodgesl, version 8.2 hodgesl &lt;- function(dataname, varname, blockname, treatname) { blockname_str &lt;- deparse(substitute(blockname)) set.seed(1000) renamed_file &lt;- dataname %&gt;% filter(!is.na({{blockname}})) r1 &lt;- renamed_file %&gt;% group_by({{blockname}}) %&gt;% summarise(m_y = mean({{varname}}), .groups = &quot;drop&quot;) %&gt;% arrange({{blockname}}) r2 &lt;- renamed_file %&gt;% group_by({{blockname}}, {{treatname}}) %&gt;% summarise(mean_y = mean({{varname}}), n = n(), .groups = &quot;drop&quot;) %&gt;% mutate(mean_diff = ifelse({{treatname}} == 1, ((n+lag(n))/sum(n))*(mean_y-lag(mean_y)), NA)) %&gt;% mutate(tx_effect = sum(mean_diff, na.rm = T)) %&gt;% mutate(i = row_number()) %&gt;% slice(1) %&gt;% select(tx_effect, i) fm_results &lt;- renamed_file %&gt;% group_by({{blockname}}, {{treatname}}) %&gt;% summarise(mean_y = mean({{varname}}), n = n(), .groups = &quot;drop&quot;) r3 &lt;- renamed_file %&gt;% group_by({{blockname}}, {{treatname}}) %&gt;% summarise(m_or_n = n(), .groups = &quot;drop&quot;) %&gt;% arrange({{blockname}}, {{treatname}}) %&gt;% mutate(mi = ifelse({{treatname}} == 0, m_or_n, ifelse({{treatname}} == 1, NA, NA))) %&gt;% mutate(ni = ifelse({{treatname}} == 1, m_or_n, ifelse({{treatname}} == 0, NA, NA))) %&gt;% mutate(Ni = ni+lag(mi)) %&gt;% mutate(mi = ifelse(is.na(mi), lag(mi), mi)) %&gt;% filter(!is.na(Ni)) %&gt;% mutate(factor = (mi*ni)/(Ni*(Ni-1))) %&gt;% select({{blockname}}, factor) %&gt;% arrange({{blockname}}) r4 &lt;- renamed_file %&gt;% arrange({{blockname}}) %&gt;% left_join(r1, by = blockname_str) %&gt;% mutate(dy = {{varname}}-m_y) %&gt;% arrange(dy) %&gt;% mutate(rk = row_number()) %&gt;% arrange({{blockname}}) r4a &lt;- r4 %&gt;% filter({{treatname}} != 0) %&gt;% group_by({{blockname}}) %&gt;% summarise(wsi = sum(rk), .groups = &quot;drop&quot;) r5 &lt;- r4 %&gt;% group_by({{blockname}}) %&gt;% summarise(ki_ = mean(rk), .groups = &quot;drop&quot;) r6 &lt;- r4 %&gt;% filter({{treatname}} != 0) %&gt;% group_by({{blockname}}) %&gt;% summarise(ni = n(), .groups = &quot;drop&quot;) %&gt;% arrange({{blockname}}) %&gt;% left_join(r5, by = blockname_str) %&gt;% mutate(E_wsi = ni*ki_) %&gt;% arrange({{blockname}}) r7 &lt;- r4 %&gt;% arrange({{blockname}}) %&gt;% left_join(r5, by = blockname_str) %&gt;% mutate(k = (rk-ki_)^2) %&gt;% group_by({{blockname}}) %&gt;% summarise(ss_kd_i = sum(k), .groups = &quot;drop&quot;) %&gt;% arrange({{blockname}}) results &lt;- r3 %&gt;% arrange({{blockname}}) %&gt;% left_join(r7, by = blockname_str) %&gt;% left_join(r6, by = blockname_str) %&gt;% left_join(r4a, by = blockname_str) %&gt;% mutate(var_wsi = factor*ss_kd_i, var = sum(var_wsi), sum_Ewsi = sum(E_wsi), ws = sum(wsi), HL_mean = ws-sum_Ewsi, HL_se = sqrt(var), z = HL_mean/HL_se, p = 1 - pnorm(abs(z))) %&gt;% select(HL_mean, HL_se, z, p) %&gt;% slice(1) %&gt;% mutate(i = row_number()) %&gt;% left_join(r2, by = &quot;i&quot;) return(results) } df.h &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_2(original).dta&quot;) %&gt;% mutate(fm_s = paste0(round(fm, 5), &quot;s&quot;)) hodgesl(df.h, lwss97, fm_s, kuse) ## # A tibble: 1 x 6 ## HL_mean HL_se z p i tx_effect ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; ## 1 -36028. 4559. -7.90 1.33e-15 1 -10.2 6.2.2 Cohens d # Shenyang Guo&#39;s Stata program, imbalance, version 8.2 imbalance2 &lt;- function(df, varname, treatname, blockname) { # dx df2 &lt;- df %&gt;% group_by({{treatname}}) %&gt;% summarise(m_x = mean({{varname}}), sd_x = sd({{varname}}), .groups = &quot;drop&quot;) mxt = df2[2,2] mxc = df2[1,2] s2xt = df2[2,3]^2 s2xc = df2[1,3]^2 sx = sqrt((s2xt+s2xc)/2) dx = as.numeric(abs(mxt-mxc)/sx) # dx df3 &lt;- df %&gt;% group_by({{blockname}}, {{treatname}}) %&gt;% summarise(m_x = mean({{varname}}), sd_x = sd({{varname}}), n = n(), .groups = &quot;drop&quot;) mxc = as.numeric(mean(filter(df3, {{treatname}} == 0)$m_x)) mxt = as.numeric(mean(filter(df3, {{treatname}} == 1)$m_x)) dxm_num = abs(mxt-mxc) dxm = as.numeric(dxm_num/sx) return(list(dx = dx, dxm = dxm)) } df.h2 &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_2(original).dta&quot;) imbalance2(df.h2, lwss97, kuse, fm)$dxm # dxm for the outcome variable is Cohen&#39;s d ## [1] 0.6523181 6.3 Section 5.8.4 Post-Matching Analysis Using Regression of Difference Scores df &lt;- haven::read_dta(&quot;data/Data_Chapter5/chpt5_2.dta&quot;) # kuse == 1 df1 &lt;- df %&gt;% select(pm, kuse, y1 = lwss97, male1 = male, black1 = black, age971 = age97, pcged971 = pcged97, mratio961 = mratio96, pcg_id) %&gt;% filter(kuse==1) # kuse == 0 df0 &lt;- df %&gt;% select(pm, kuse, y0 = lwss97, male0 = male, black0 = black, age970 = age97, pcged970 = pcged97, mratio960 = mratio96, pcg_id) %&gt;% filter( kuse == 0 ) # merge data df2 &lt;- left_join(df0, df1, &quot;pm&quot;) df2 &lt;- df2 %&gt;% mutate(y = y1 - y0, male = male1 - male0, black = black1 - black0, age97 = age971 - age970, pcged97 = pcged971 - pcged970, mratio96 = mratio961 - mratio960) # regression reg1 &lt;- lm(y ~ male + black + age97 + pcged97 + mratio96, data = df2) broom::tidy(lmtest::coeftest(reg1, vcov = vcovCL, cluster = df2$pcg_id.x)) ## # A tibble: 6 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) -3.17 1.73 -1.83 0.0682 ## 2 male -1.21 1.84 -0.657 0.512 ## 3 black -3.34 2.33 -1.43 0.153 ## 4 age97 0.229 0.329 0.695 0.487 ## 5 pcged97 0.0111 0.508 0.0219 0.983 ## 6 mratio96 3.15 1.67 1.89 0.0602 "],["06_Section5.8.5.html", "7 Section 5.8.5 Multilevel Propensity Score (PS) 7.1 cccpros57 7.2 cccragg24", " 7 Section 5.8.5 Multilevel Propensity Score (PS) library(tidyverse) library(haven) library(broom) library(MatchIt) library(cobalt) library(plm) library(lme4) library(lmerTest) library(sjlabelled) library(performance) options(scipen=999) 7.1 cccpros57 7.1.1 Import Data # Remove formats and labels, because matchit requires a vector for the distance option df &lt;- haven::read_dta(&quot;data/Data_Chapter5/cccpros57.dta&quot;) %&gt;% zap_formats() df &lt;- sjlabelled::remove_all_labels(df) %&gt;% as_tibble() post1 &lt;- haven::read_dta(&quot;data/Data_Chapter5/post1.dta&quot;) post2 &lt;- haven::read_dta(&quot;data/Data_Chapter5/post2.dta&quot;) 7.1.2 Obtain Single-Level p-score m1 &lt;- glm(&quot;intschb ~ agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s&quot;, family = binomial, data = df) m1.sum &lt;- summary(m1) exp(m1.sum$coefficients[,1]) ## (Intercept) agey female ## 38966508817.1685028076 0.8431486659 1.1826521220 ## black hisp pcedu ## 2.4594809316 0.6102697550 1.1493126863 ## incpovlr pcempf fatherr ## 0.9990353470 0.6577613322 0.8748319518 ## AYP05Cs pmin05s ## 0.7456891068 0.0004952084 exp(confint(m1)) ## Waiting for profiling to be done... ## 2.5 % 97.5 % ## (Intercept) 115570492.22183506191 20081560925616.000000000 ## agey 0.51414641226 1.378521524 ## female 0.74483328390 1.879544965 ## black 1.36262822614 4.486695708 ## hisp 0.20603826654 1.745844136 ## pcedu 0.99791178543 1.327304722 ## incpovlr 0.99638797325 1.001688708 ## pcempf 0.40135946992 1.070435734 ## fatherr 0.45541386742 1.688725534 ## AYP05Cs 0.70816246819 0.782024951 ## pmin05s 0.00005024149 0.004414004 ps_sgl &lt;- predict(m1, type = &quot;response&quot;) # equivalent to df$ps_sgl 7.1.3 Obtain School-Level p-score Model # Keep the first row/observation for each schbl value df.school &lt;- df %&gt;% arrange(schbl) %&gt;% group_by(schbl) %&gt;% slice(1) m2 &lt;- glm(&quot;intschb ~ AYP05Cs + pmin05s&quot;, family = binomial, data = df.school) m2.sum &lt;- summary(m2) exp(m2.sum$coefficients[,1]) ## (Intercept) AYP05Cs pmin05s ## 207606.86381660 0.85518059 0.02207066 exp(confint(m2)) ## Waiting for profiling to be done... ## 2.5 % 97.5 % ## (Intercept) 0.00185810346135 5674025413970693.000000 ## AYP05Cs 0.64764761513951 1.048226 ## pmin05s 0.00000007544837 2563.223374 7.1.4 Before-Matching Balance Check t.test(agey ~ intschb, data = df, var.equal = TRUE) ## ## Two Sample t-test ## ## data: agey by intschb ## t = -0.53426, df = 552, p-value = 0.5934 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -0.10549027 0.06037623 ## sample estimates: ## mean in group 0 mean in group 1 ## 7.896591 7.919148 chisq.test(df$female, df$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: df$female and df$intschb ## X-squared = 3.0238, df = 1, p-value = 0.08205 chisq.test(df$black, df$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: df$black and df$intschb ## X-squared = 40.379, df = 1, p-value = 0.0000000002092 chisq.test(df$hisp, df$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: df$hisp and df$intschb ## X-squared = 3.0572, df = 1, p-value = 0.08038 t.test(pcedu ~ intschb, data = df, var.equal = TRUE) ## ## Two Sample t-test ## ## data: pcedu by intschb ## t = -0.21644, df = 552, p-value = 0.8287 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -0.3750634 0.3006107 ## sample estimates: ## mean in group 0 mean in group 1 ## 5.424028 5.461255 t.test(incpovlr ~ intschb, data = df, var.equal = TRUE) ## ## Two Sample t-test ## ## data: incpovlr by intschb ## t = 3.4934, df = 552, p-value = 0.0005152 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## 14.38040 51.32562 ## sample estimates: ## mean in group 0 mean in group 1 ## 192.2183 159.3653 chisq.test(df$pcempf, df$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: df$pcempf and df$intschb ## X-squared = 1.1468, df = 1, p-value = 0.2842 chisq.test(df$fatherr, df$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: df$fatherr and df$intschb ## X-squared = 15.557, df = 1, p-value = 0.00008005 t.test(AYP05Cs ~ intschb, data = df, var.equal = TRUE) ## ## Two Sample t-test ## ## data: AYP05Cs by intschb ## t = 17.354, df = 552, p-value &lt; 0.00000000000000022 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## 10.19661 12.79958 ## sample estimates: ## mean in group 0 mean in group 1 ## 72.25972 60.76162 t.test(pmin05s ~ intschb, data = df, var.equal = TRUE) ## ## Two Sample t-test ## ## data: pmin05s by intschb ## t = -7.5318, df = 552, p-value = 0.0000000000002057 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -0.14393616 -0.08438928 ## sample estimates: ## mean in group 0 mean in group 1 ## 0.4747435 0.5889062 # Alternative balance check using matchit scheme1.before &lt;- MatchIt::matchit(intschb ~ agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s, data = df, method = NULL) summary(scheme1.before) ## ## Call: ## MatchIt::matchit(formula = intschb ~ agey + female + black + ## hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s, ## data = df, method = NULL) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean ## distance 0.7340 0.2547 2.0364 0.8873 0.3968 ## agey 7.9191 7.8966 0.0457 0.9721 0.0198 ## female 0.5720 0.4982 0.1490 . 0.0737 ## black 0.4280 0.1802 0.5009 . 0.2478 ## hisp 0.0701 0.1131 -0.1683 . 0.0430 ## pcedu 5.4613 5.4240 0.0190 0.8764 0.0151 ## incpovlr 159.3653 192.2183 -0.3032 0.9228 0.0817 ## pcempf 0.5129 0.5583 -0.0908 . 0.0454 ## fatherr 0.7048 0.8445 -0.3063 . 0.1397 ## AYP05Cs 60.7616 72.2597 -1.2531 2.1957 0.3322 ## pmin05s 0.5889 0.4747 0.5017 4.0809 0.1774 ## eCDF Max ## distance 0.6784 ## agey 0.0807 ## female 0.0737 ## black 0.2478 ## hisp 0.0430 ## pcedu 0.0356 ## incpovlr 0.1365 ## pcempf 0.0454 ## fatherr 0.1397 ## AYP05Cs 0.7951 ## pmin05s 0.3471 ## ## ## Sample Sizes: ## Control Treated ## All 283 271 ## Matched 283 271 ## Unmatched 0 0 ## Discarded 0 0 7.1.5 Matching with ps_sgl Note that the caliper argument in matchit() is the number of standard deviations of the distance measure within which to draw control units (default = 0, no caliper matching). If a caliper is specified, a control unit within the caliper for a treated unit is randomly selected as the match for that treated unit.2 # Generate a column of x random numbers, sort x in ascending order, calculate caliper with ps_sgl set.seed(1000) df.scheme1 &lt;- df %&gt;% add_column(x = runif(nrow(.))) %&gt;% arrange(x) # Scheme 1 - Nearest Neighbor with ps_sgl set.seed(1000) scheme1 &lt;- MatchIt::matchit(intschb ~ agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s, data = df.scheme1, method = &quot;nearest&quot;, distance = df.scheme1$ps_sgl, caliper = .25, # equivalent to sd(df.scheme1$ps_sgl)*.25 std.caliper = T, # caliper in standard deviation units m.order = &quot;largest&quot;, # descending order of distance measures replace = FALSE) sd(df.scheme1$ps_sgl)*.25 == scheme1$caliper # check caliper ## ## TRUE scheme1.data &lt;- MatchIt::match.data(scheme1) # Balance Check cobalt::love.plot(scheme1, binary = &quot;std&quot;, stats = c(&quot;mean.diffs&quot;), threshold = c(.1), var.order = &quot;unadjusted&quot;, line = TRUE, s.d.denom = &quot;pooled&quot; ) 7.1.6 Matching with ps_sch # Generate a column of x random numbers, sort x in ascending order, calculate caliper with ps_sch set.seed(1000) df.scheme2 &lt;- df %&gt;% add_column(x = runif(nrow(.))) %&gt;% arrange(x) # Scheme 2 - Nearest Neighbor with ps_sch set.seed(1000) scheme2 &lt;- MatchIt::matchit(intschb ~ agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s, data = df.scheme2, method = &quot;nearest&quot;, distance = df.scheme2$ps_sch, caliper = .25, # equivalent to sd(df.scheme2$ps_sch)*.25 m.order = &quot;largest&quot;, # descending order of distance measures replace = FALSE) scheme2.data &lt;- MatchIt::match.data(scheme2) # Balance Check cobalt::love.plot(scheme2, binary = &quot;std&quot;, stats = c(&quot;mean.diffs&quot;), threshold = c(.1), var.order = &quot;unadjusted&quot;, line = TRUE, s.d.denom = &quot;pooled&quot; ) 7.1.7 Check ICC # Function to calculate Stata&#39;s &quot;rho&quot; (ICC) in xtreg get_icc &lt;- function(lmer_obj, group) { sigma_u2 &lt;- as.numeric(attr(VarCorr(lmer_obj)[[group]], &quot;stddev&quot;))^2 sigma_e2 &lt;- summary(lmer_obj)$sigma^2 return(sigma_u2/(sigma_u2+sigma_e2)) } # Original dataset m3 &lt;- lmer(cccpros57 ~ (1|schbl), data = df, REML = F) get_icc(m3, &quot;schbl&quot;) ## [1] 0.1850556 # Scheme 1: ICC using school as a clustering variable m4 &lt;- lmer(cccpros57 ~ (1|schbl), data = post1, REML = F) get_icc(m4, &quot;schbl&quot;) ## [1] 0.1827006 # Scheme 1: ICC using the matched set as a clustering variable (create mset first) m5 &lt;- lmer(cccpros57 ~ (1|mset), data = post1, REML = F) get_icc(m5, &quot;mset&quot;) ## [1] 0.07452924 # Scheme 2: ICC using school as a clustering variable m6 &lt;- lmer(cccpros57 ~ (1|schbl), data = post2, REML = F) get_icc(m6, &quot;schbl&quot;) ## [1] 0.1930747 # Scheme 2: ICC using the matched set as a clustering variable (create mset first) m7 &lt;- lmer(cccpros57 ~ (1|mset), data = post2, REML = F) ## boundary (singular) fit: see help(&#39;isSingular&#39;) get_icc(m7, &quot;mset&quot;) ## [1] 0 7.1.8 Outcome Analsis: Multilevel out1 &lt;- lmer(cccpros57 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl), data = df, REML = FALSE) summary(out1) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccpros57 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) ## Data: df ## ## AIC BIC logLik deviance df.resid ## 1132.1 1192.6 -552.1 1104.1 540 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.1169 -0.6230 -0.0446 0.6716 4.5429 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schbl (Intercept) 0.03177 0.1782 ## Residual 0.41621 0.6451 ## Number of obs: 554, groups: schbl, 12 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 0.6912222 1.1150068 17.2991369 0.620 0.5434 ## intschb 0.2313252 0.1417319 11.5995931 1.632 0.1295 ## agey -0.0329893 0.0582583 547.8266420 -0.566 0.5714 ## female 0.0116071 0.0556196 543.1304500 0.209 0.8348 ## black -0.1068533 0.0751899 551.0960379 -1.421 0.1558 ## hisp 0.1116060 0.1108651 551.5320199 1.007 0.3145 ## pcedu -0.0294279 0.0168356 547.7983137 -1.748 0.0810 . ## incpovlr 0.0001694 0.0003295 547.6612236 0.514 0.6074 ## pcempf -0.0085714 0.0587865 548.5975537 -0.146 0.8841 ## fatherr 0.0274703 0.0761396 546.0925033 0.361 0.7184 ## AYP05Cs 0.0031425 0.0109294 11.2024750 0.288 0.7790 ## pmin05s -1.0415518 0.5423622 9.7450652 -1.920 0.0845 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.428 ## agey -0.451 -0.003 ## female -0.047 -0.014 0.040 ## black 0.039 -0.075 0.002 0.041 ## hisp 0.004 0.011 -0.017 0.009 0.232 ## pcedu -0.077 -0.035 0.119 -0.048 -0.067 0.207 ## incpovlr -0.049 0.014 0.113 0.034 0.207 0.207 -0.373 ## pcempf -0.012 0.041 -0.061 0.052 -0.127 -0.111 -0.116 -0.225 ## fatherr -0.058 -0.007 0.063 0.030 0.222 -0.118 -0.047 -0.230 0.037 ## AYP05Cs -0.882 0.481 0.022 0.007 -0.056 -0.020 -0.028 -0.019 0.034 -0.022 ## pmin05s -0.784 0.229 0.021 -0.005 -0.139 -0.068 -0.034 0.013 0.025 0.019 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.784 out2 &lt;- lmer(cccpros57 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl), data = post1, REML = FALSE) summary(out2) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccpros57 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) ## Data: post1 ## ## AIC BIC logLik deviance df.resid ## 399.2 445.2 -185.6 371.2 184 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.4114 -0.6032 -0.0443 0.6692 2.9257 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schbl (Intercept) 0.02531 0.1591 ## Residual 0.36656 0.6054 ## Number of obs: 198, groups: schbl, 10 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 1.0198112 1.5786272 16.3303382 0.646 0.527 ## intschb 0.2513471 0.1440230 6.9879211 1.745 0.125 ## agey -0.0595067 0.1066836 193.7636716 -0.558 0.578 ## female 0.1039814 0.0917062 192.4232631 1.134 0.258 ## black 0.0591394 0.1112419 197.9966270 0.532 0.596 ## hisp 0.0407093 0.2259732 188.6752480 0.180 0.857 ## pcedu -0.0262788 0.0282298 194.0906852 -0.931 0.353 ## incpovlr -0.0001293 0.0005047 188.0448990 -0.256 0.798 ## pcempf 0.0314214 0.0957509 196.6787517 0.328 0.743 ## fatherr 0.0413359 0.1207982 192.5515736 0.342 0.733 ## AYP05Cs 0.0016732 0.0143406 8.3323211 0.117 0.910 ## pmin05s -1.3511808 0.8470734 12.0151531 -1.595 0.137 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.208 ## agey -0.529 -0.006 ## female -0.014 0.013 0.014 ## black 0.105 -0.005 -0.045 0.208 ## hisp 0.006 0.027 -0.062 0.039 0.181 ## pcedu -0.037 -0.011 0.115 -0.132 -0.018 0.024 ## incpovlr -0.003 0.017 0.010 0.133 0.256 0.104 -0.340 ## pcempf -0.042 -0.040 -0.034 0.080 -0.105 -0.064 -0.116 -0.284 ## fatherr -0.095 0.001 0.019 0.107 0.174 -0.030 -0.075 -0.293 0.124 ## AYP05Cs -0.821 0.223 -0.012 -0.022 -0.126 0.017 -0.112 -0.025 0.074 0.035 ## pmin05s -0.766 0.125 -0.014 -0.081 -0.230 -0.006 -0.105 0.008 0.024 0.076 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.852 out3 &lt;- lmer(cccpros57 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl), data = post2, REML = FALSE) summary(out3) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccpros57 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) ## Data: post2 ## ## AIC BIC logLik deviance df.resid ## 412.7 458.9 -192.4 384.7 186 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.07060 -0.65843 -0.08637 0.64639 2.82804 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schbl (Intercept) 0.007886 0.0888 ## Residual 0.394913 0.6284 ## Number of obs: 200, groups: schbl, 6 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -1.2416479 1.6329395 9.1879217 -0.760 0.466 ## intschb 0.2275477 0.1204337 4.2859290 1.889 0.127 ## agey 0.0593026 0.1013635 199.8174428 0.585 0.559 ## female 0.0021723 0.0913075 199.8217452 0.024 0.981 ## black -0.0583104 0.1119639 199.3489521 -0.521 0.603 ## hisp 0.0997444 0.2225810 199.1519185 0.448 0.655 ## pcedu -0.0290466 0.0298435 193.6725616 -0.973 0.332 ## incpovlr -0.0001440 0.0005401 197.1817950 -0.267 0.790 ## pcempf -0.0056656 0.0968596 196.0481669 -0.058 0.953 ## fatherr 0.2021954 0.1271594 199.8855228 1.590 0.113 ## AYP05Cs 0.0167172 0.0143067 4.8553601 1.168 0.297 ## pmin05s -0.6566093 0.9255222 4.5321180 -0.709 0.513 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb 0.006 ## agey -0.592 -0.039 ## female 0.023 0.035 0.010 ## black 0.086 -0.116 -0.014 0.113 ## hisp -0.020 0.002 0.009 0.017 0.176 ## pcedu 0.106 -0.068 0.004 -0.100 -0.014 -0.052 ## incpovlr -0.098 -0.038 0.110 0.132 0.199 0.176 -0.447 ## pcempf -0.054 0.155 -0.017 0.033 -0.104 -0.014 -0.146 -0.220 ## fatherr -0.088 0.043 0.109 0.029 0.176 -0.079 0.005 -0.347 0.114 ## AYP05Cs -0.848 -0.020 0.114 -0.076 -0.120 0.018 -0.206 0.058 0.057 -0.030 ## pmin05s -0.789 -0.032 0.087 -0.060 -0.178 -0.023 -0.199 0.050 0.059 0.020 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.852 # Note that lmer() does not use the EM algorithm in Stata&#39;s xtmixed, but the results are similar out4 &lt;- lmer(cccpros57 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl) + (1|mset), data = post1, REML = FALSE, control=lmerControl(optCtrl=list(maxfun=30000))) summary(out4) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccpros57 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) + ## (1 | mset) ## Data: post1 ## Control: lmerControl(optCtrl = list(maxfun = 30000)) ## ## AIC BIC logLik deviance df.resid ## 398.6 447.9 -184.3 368.6 183 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.1782 -0.5565 -0.0578 0.5494 2.8696 ## ## Random effects: ## Groups Name Variance Std.Dev. ## mset (Intercept) 0.06665 0.2582 ## schbl (Intercept) 0.03020 0.1738 ## Residual 0.29910 0.5469 ## Number of obs: 198, groups: mset, 99; schbl, 10 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 0.86819778 1.64132442 18.32532978 0.529 0.603 ## intschb 0.25627509 0.14769119 7.32366768 1.735 0.124 ## agey -0.02372054 0.10482779 184.99539019 -0.226 0.821 ## female 0.13113839 0.09090378 190.20413511 1.443 0.151 ## black 0.07539073 0.11345707 184.67749689 0.664 0.507 ## hisp 0.09772452 0.22307047 185.75288181 0.438 0.662 ## pcedu -0.01984058 0.02816233 194.40353852 -0.705 0.482 ## incpovlr -0.00026858 0.00050134 188.22356200 -0.536 0.593 ## pcempf 0.04281962 0.09514526 196.31075831 0.450 0.653 ## fatherr 0.07114051 0.11820569 180.87910907 0.602 0.548 ## AYP05Cs -0.00007682 0.01531744 10.27769908 -0.005 0.996 ## pmin05s -1.51762130 0.87986778 13.99895548 -1.725 0.107 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.217 ## agey -0.503 -0.006 ## female -0.024 0.012 0.036 ## black 0.091 -0.002 -0.035 0.201 ## hisp -0.007 0.022 -0.050 0.036 0.203 ## pcedu -0.024 -0.010 0.106 -0.110 0.012 0.028 ## incpovlr -0.027 0.018 0.035 0.129 0.244 0.110 -0.364 ## pcempf -0.035 -0.040 -0.032 0.081 -0.137 -0.065 -0.120 -0.254 ## fatherr -0.085 -0.002 0.018 0.120 0.147 -0.043 -0.087 -0.292 0.119 ## AYP05Cs -0.840 0.233 -0.009 -0.025 -0.114 0.025 -0.111 -0.009 0.063 0.031 ## pmin05s -0.780 0.125 -0.013 -0.078 -0.211 -0.004 -0.111 0.025 0.016 0.068 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.850 7.2 cccragg24 7.2.1 Import Data ra &lt;- haven::read_dta(&quot;data/Data_Chapter5/cccragg24.dta&quot;) %&gt;% zap_formats() ra &lt;- sjlabelled::remove_all_labels(ra) %&gt;% as_tibble() post3 &lt;- haven::read_dta(&quot;data/Data_Chapter5/post3.dta&quot;) post4 &lt;- haven::read_dta(&quot;data/Data_Chapter5/post4.dta&quot;) 7.2.2 Obtain Single-Level p-score ra_glm &lt;- glm(&quot;intschb ~ agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s&quot;, family = binomial, data = ra) ra_glm_sum &lt;- summary(ra_glm) exp(ra_glm_sum$coefficients[,1]) ## (Intercept) agey female black ## 63047622.532016911 0.838656988 1.232935406 2.349062618 ## hisp pcedu incpovlr pcempf ## 0.960575635 1.110584039 1.001039226 0.658712488 ## fatherr AYP05Cs pmin05s ## 1.289773619 0.807745966 0.001351376 ra_ps_sgl &lt;- predict(ra_glm, type = &quot;response&quot;) 7.2.3 Obtain School-Level p-score Model # Keep the first row/observation for each schbl value ra_school &lt;- ra %&gt;% arrange(schbl) %&gt;% group_by(schbl) %&gt;% slice(1) ra_glm2 &lt;- glm(&quot;intschb ~ AYP05Cs + pmin05s&quot;, family = binomial, data = ra_school) ra_glm2_sum &lt;- summary(ra_glm2) exp(ra_glm_sum$coefficients[,1]) ## (Intercept) agey female black ## 63047622.532016911 0.838656988 1.232935406 2.349062618 ## hisp pcedu incpovlr pcempf ## 0.960575635 1.110584039 1.001039226 0.658712488 ## fatherr AYP05Cs pmin05s ## 1.289773619 0.807745966 0.001351376 7.2.4 Before-Matching Balance Check t.test(agey ~ intschb, data = ra, var.equal = TRUE) ## ## Two Sample t-test ## ## data: agey by intschb ## t = 0.79153, df = 585, p-value = 0.429 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -0.04743792 0.11148723 ## sample estimates: ## mean in group 0 mean in group 1 ## 7.904738 7.872713 chisq.test(ra$female, ra$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: ra$female and ra$intschb ## X-squared = 3.4349, df = 1, p-value = 0.06383 chisq.test(ra$black, ra$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: ra$black and ra$intschb ## X-squared = 24.638, df = 1, p-value = 0.0000006917 chisq.test(ra$hisp, ra$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: ra$hisp and ra$intschb ## X-squared = 4.443, df = 1, p-value = 0.03505 t.test(pcedu ~ intschb, data = ra, var.equal = TRUE) ## ## Two Sample t-test ## ## data: pcedu by intschb ## t = -1.9926, df = 585, p-value = 0.04677 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -0.647443176 -0.004681272 ## sample estimates: ## mean in group 0 mean in group 1 ## 5.270548 5.596610 t.test(incpovlr ~ intschb, data = ra, var.equal = TRUE) ## ## Two Sample t-test ## ## data: incpovlr by intschb ## t = 0.42796, df = 585, p-value = 0.6688 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -13.79001 21.47404 ## sample estimates: ## mean in group 0 mean in group 1 ## 172.2237 168.3817 chisq.test(ra$pcempf, ra$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: ra$pcempf and ra$intschb ## X-squared = 0.93015, df = 1, p-value = 0.3348 chisq.test(ra$fatherr, ra$intschb, correct = FALSE) ## ## Pearson&#39;s Chi-squared test ## ## data: ra$fatherr and ra$intschb ## X-squared = 3.6137, df = 1, p-value = 0.05731 t.test(AYP05Cs ~ intschb, data = ra, var.equal = TRUE) ## ## Two Sample t-test ## ## data: AYP05Cs by intschb ## t = 13.66, df = 585, p-value &lt; 0.00000000000000022 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## 8.272252 11.050358 ## sample estimates: ## mean in group 0 mean in group 1 ## 70.86164 61.20034 t.test(pmin05s ~ intschb, data = ra, var.equal = TRUE) ## ## Two Sample t-test ## ## data: pmin05s by intschb ## t = -4.6302, df = 585, p-value = 0.000004504 ## alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0 ## 95 percent confidence interval: ## -0.09255402 -0.03742139 ## sample estimates: ## mean in group 0 mean in group 1 ## 0.5016288 0.5666165 7.2.5 Matching with ps_sgl # Scheme 1 - Nearest Neighbor with ps_sgl set.seed(1000) ra_scheme1 &lt;- MatchIt::matchit(intschb ~ agey + female + black + hisp + pcedu + incpovlr +pcempf + fatherr + AYP05Cs + pmin05s, data = ra, method = &quot;nearest&quot;, distance = ra$ps_sgl, caliper = .25, replace = FALSE) ## Warning: Fewer control units than treated units; not all treated units will get ## a match. ra_scheme1_data &lt;- MatchIt::match.data(ra_scheme1) # Balance Check cobalt::love.plot(ra_scheme1, binary = &quot;std&quot;, stats = c(&quot;mean.diffs&quot;), threshold = c(.1), var.order = &quot;unadjusted&quot;, line = TRUE, s.d.denom = &quot;pooled&quot; ) 7.2.6 Matching with ps_sch # Scheme 2 - Nearest Neighbor with ps_sch set.seed(1000) ra_scheme2 &lt;- MatchIt::matchit(intschb ~ agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s, data = ra, method = &quot;nearest&quot;, distance = ra$ps_sch, caliper = .25, replace = FALSE) ## Warning: Fewer control units than treated units; not all treated units will get ## a match. ra_scheme2_data &lt;- MatchIt::match.data(ra_scheme2) # Balance Check cobalt::love.plot(ra_scheme2, binary = &quot;std&quot;, stats = c(&quot;mean.diffs&quot;), threshold = c(.1), var.order = &quot;unadjusted&quot;, line = TRUE, s.d.denom = &quot;pooled&quot; ) 7.2.7 Check ICC i1 &lt;- lmer(cccragg24 ~ (1|schbl), data = ra, REML = F) get_icc(i1, &quot;schbl&quot;) ## [1] 0.07795007 i2 &lt;- lmer(cccragg24 ~ (1|schbl), data = post3, REML = F) get_icc(i2, &quot;schbl&quot;) ## [1] 0.05052852 i3 &lt;- lmer(cccragg24 ~ (1|mset), data = post3, REML = F) ## boundary (singular) fit: see help(&#39;isSingular&#39;) get_icc(i3, &quot;mset&quot;) ## [1] 0 i4 &lt;- lmer(cccragg24 ~ (1|schbl), data = post4, REML = F) get_icc(i4, &quot;schbl&quot;) ## [1] 0.05130242 i5 &lt;- lmer(cccragg24 ~ (1|mset), data = post4, REML = F) get_icc(i5, &quot;mset&quot;) ## [1] 0.1915563 7.2.8 Outcome Analsis: Multilevel ra_out1 &lt;- lmer(cccragg24 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl), data = ra, REML = FALSE) summary(ra_out1) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccragg24 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) ## Data: ra ## ## AIC BIC logLik deviance df.resid ## 1126.8 1188.0 -549.4 1098.8 573 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.8820 -0.5803 0.0780 0.5367 3.3552 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schbl (Intercept) 0.02068 0.1438 ## Residual 0.37063 0.6088 ## Number of obs: 587, groups: schbl, 12 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 0.44505943 0.92667699 20.80649307 0.480 0.636 ## intschb -0.19656648 0.11357659 12.48761677 -1.731 0.108 ## agey 0.07941009 0.05382555 582.22221593 1.475 0.141 ## female 0.03161287 0.05082602 576.34561568 0.622 0.534 ## black -0.01901878 0.06731344 585.73246960 -0.283 0.778 ## hisp 0.08005447 0.10498239 584.71862879 0.763 0.446 ## pcedu 0.01859684 0.01556726 582.82205863 1.195 0.233 ## incpovlr -0.00002751 0.00030395 583.45375442 -0.090 0.928 ## pcempf -0.01315617 0.05343864 584.32266097 -0.246 0.806 ## fatherr 0.00938409 0.06573253 582.51785428 0.143 0.887 ## AYP05Cs -0.01264483 0.00876189 11.84124707 -1.443 0.175 ## pmin05s -0.74186729 0.45384409 11.98884397 -1.635 0.128 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.401 ## agey -0.496 0.010 ## female -0.050 -0.027 0.042 ## black 0.020 -0.070 0.003 0.018 ## hisp 0.019 -0.009 -0.025 0.015 0.234 ## pcedu -0.112 -0.032 0.121 -0.063 -0.009 0.204 ## incpovlr -0.035 -0.023 0.106 0.051 0.191 0.218 -0.367 ## pcempf -0.004 0.045 -0.051 0.016 -0.154 -0.087 -0.102 -0.193 ## fatherr -0.034 -0.027 0.049 0.028 0.200 -0.151 -0.054 -0.231 -0.037 ## AYP05Cs -0.856 0.455 0.020 0.005 -0.031 -0.033 -0.003 -0.037 0.025 -0.039 ## pmin05s -0.767 0.231 0.023 0.003 -0.148 -0.083 -0.015 -0.002 0.015 0.006 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.783 ra_out2 &lt;- lmer(cccragg24 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl), data = post3, REML = FALSE) summary(ra_out2) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccragg24 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) ## Data: post3 ## ## AIC BIC logLik deviance df.resid ## 531.1 580.8 -251.5 503.1 244 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.7352 -0.5681 0.0571 0.5068 3.0213 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schbl (Intercept) 0.01501 0.1225 ## Residual 0.40105 0.6333 ## Number of obs: 258, groups: schbl, 12 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 0.00355236 1.22511662 30.59643738 0.003 0.9977 ## intschb -0.12316154 0.11591401 9.60776615 -1.063 0.3140 ## agey 0.16194551 0.09043449 255.90423248 1.791 0.0745 . ## female -0.03125581 0.08099518 251.69678848 -0.386 0.6999 ## black -0.06630285 0.09716807 257.80775401 -0.682 0.4956 ## hisp -0.05398092 0.22522493 254.67539409 -0.240 0.8108 ## pcedu 0.00321377 0.02638440 256.13958504 0.122 0.9031 ## incpovlr -0.00004034 0.00049467 253.79053324 -0.082 0.9351 ## pcempf -0.03234786 0.08712100 257.89077137 -0.371 0.7107 ## fatherr 0.07079410 0.10683566 257.96375589 0.663 0.5081 ## AYP05Cs -0.01572501 0.01049485 12.62583098 -1.498 0.1586 ## pmin05s -0.54183591 0.59338036 18.67049306 -0.913 0.3728 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.160 ## agey -0.615 -0.003 ## female -0.052 -0.027 0.040 ## black 0.007 -0.006 0.017 0.116 ## hisp 0.027 0.022 -0.091 0.022 0.209 ## pcedu -0.116 -0.011 0.112 -0.036 0.013 0.019 ## incpovlr -0.003 0.012 0.088 0.082 0.222 0.140 -0.412 ## pcempf 0.022 -0.023 -0.117 0.091 -0.142 -0.011 -0.102 -0.232 ## fatherr -0.010 -0.009 -0.041 0.012 0.088 -0.102 0.016 -0.331 -0.049 ## AYP05Cs -0.780 0.188 0.029 -0.017 -0.041 0.023 -0.051 -0.075 0.074 -0.038 ## pmin05s -0.719 0.050 0.021 -0.028 -0.181 -0.030 -0.051 -0.032 0.007 0.046 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.826 ra_out3 &lt;- lmer(cccragg24 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl), data = post4, REML = FALSE) summary(ra_out3) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccragg24 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) ## Data: post4 ## ## AIC BIC logLik deviance df.resid ## 511.1 560.6 -241.5 483.1 240 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.6880 -0.5859 0.0529 0.4843 3.2563 ## ## Random effects: ## Groups Name Variance Std.Dev. ## schbl (Intercept) 0.00128 0.03577 ## Residual 0.39096 0.62527 ## Number of obs: 254, groups: schbl, 7 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 1.09709583 1.19341507 13.34615431 0.919 0.3743 ## intschb -0.10696919 0.08524443 6.33137228 -1.255 0.2539 ## agey 0.02529304 0.09186204 253.36723409 0.275 0.7833 ## female 0.13416143 0.07965086 250.29881755 1.684 0.0934 . ## black 0.05193543 0.09994578 251.59262147 0.520 0.6038 ## hisp -0.03404747 0.21252278 249.85982494 -0.160 0.8728 ## pcedu 0.01362782 0.02547170 253.96608169 0.535 0.5931 ## incpovlr -0.00003668 0.00047039 253.22022061 -0.078 0.9379 ## pcempf 0.02919453 0.08242162 252.61959792 0.354 0.7235 ## fatherr 0.10313539 0.10286490 253.68799736 1.003 0.3170 ## AYP05Cs -0.02139554 0.00958739 5.05899405 -2.232 0.0754 . ## pmin05s -0.37482131 0.65921741 5.54584079 -0.569 0.5919 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.045 ## agey -0.644 -0.019 ## female -0.086 -0.018 0.078 ## black 0.069 -0.161 -0.011 0.066 ## hisp -0.005 -0.045 -0.028 -0.056 0.166 ## pcedu 0.003 -0.108 0.039 -0.074 0.091 0.100 ## incpovlr -0.055 -0.067 0.116 0.072 0.153 0.167 -0.382 ## pcempf -0.042 0.080 -0.071 0.036 -0.077 0.030 -0.054 -0.203 ## fatherr -0.068 -0.015 0.063 0.020 0.192 -0.131 -0.018 -0.302 0.012 ## AYP05Cs -0.763 0.051 0.035 0.005 -0.104 0.007 -0.128 -0.044 0.100 -0.040 ## pmin05s -0.710 0.057 0.016 0.005 -0.230 -0.023 -0.174 0.016 0.049 0.032 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.849 # Note that lmer() does not use the EM algorithm in Stata&#39;s xtmixed ra_out4 &lt;- lmer(cccragg24 ~ intschb + agey + female + black + hisp + pcedu + incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1|schbl) + (1|mset), data = post4, REML = FALSE, control=lmerControl(optCtrl=list(maxfun=30000))) summary(ra_out4) ## Linear mixed model fit by maximum likelihood . t-tests use Satterthwaite&#39;s ## method [lmerModLmerTest] ## Formula: cccragg24 ~ intschb + agey + female + black + hisp + pcedu + ## incpovlr + pcempf + fatherr + AYP05Cs + pmin05s + (1 | schbl) + ## (1 | mset) ## Data: post4 ## Control: lmerControl(optCtrl = list(maxfun = 30000)) ## ## AIC BIC logLik deviance df.resid ## 509.6 562.6 -239.8 479.6 239 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -3.3653 -0.5190 0.0556 0.5112 2.9183 ## ## Random effects: ## Groups Name Variance Std.Dev. ## mset (Intercept) 0.067181 0.25919 ## schbl (Intercept) 0.004645 0.06815 ## Residual 0.321605 0.56710 ## Number of obs: 254, groups: mset, 127; schbl, 7 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) 1.07899536 1.28793876 13.49164645 0.838 0.4168 ## intschb -0.11506523 0.09065629 6.28988597 -1.269 0.2493 ## agey 0.03082777 0.09012865 240.42202105 0.342 0.7326 ## female 0.11357833 0.07927570 249.91017822 1.433 0.1532 ## black 0.04595566 0.09844551 243.50055839 0.467 0.6411 ## hisp -0.03270908 0.20792136 234.74041010 -0.157 0.8751 ## pcedu 0.01614542 0.02511835 246.43805625 0.643 0.5210 ## incpovlr -0.00003758 0.00046317 244.59325663 -0.081 0.9354 ## pcempf 0.01030922 0.08082582 239.84989857 0.128 0.8986 ## fatherr 0.11643540 0.10074056 238.92767246 1.156 0.2489 ## AYP05Cs -0.02171177 0.01113103 6.78125609 -1.951 0.0934 . ## pmin05s -0.37363177 0.72844547 6.31305169 -0.513 0.6255 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) intsch agey female black hisp pcedu incpvl pcempf fathrr ## intschb -0.068 ## agey -0.582 -0.022 ## female -0.074 -0.012 0.074 ## black 0.069 -0.150 -0.008 0.044 ## hisp -0.014 -0.041 -0.012 -0.060 0.160 ## pcedu 0.000 -0.105 0.046 -0.082 0.092 0.110 ## incpovlr -0.046 -0.060 0.124 0.083 0.154 0.165 -0.379 ## pcempf -0.047 0.076 -0.068 0.036 -0.097 0.021 -0.055 -0.220 ## fatherr -0.064 -0.018 0.075 0.010 0.194 -0.116 -0.018 -0.297 -0.001 ## AYP05Cs -0.806 0.076 0.023 0.002 -0.096 0.002 -0.107 -0.048 0.096 -0.039 ## pmin05s -0.750 0.076 0.009 0.005 -0.213 -0.020 -0.157 0.003 0.054 0.023 ## AYP05C ## intschb ## agey ## female ## black ## hisp ## pcedu ## incpovlr ## pcempf ## fatherr ## AYP05Cs ## pmin05s 0.851 https://r.iq.harvard.edu/docs/matchit/2.4-14/Additional_Arguments_f3.html "],["07_Section5.8.6.html", "8 Section 5.8.6 Comparison of Rand-gbm and Stata-boost (PS) 8.1 Import Data 8.2 Optimal pair matching Using pscores generated by Rand-gbm (ps) 8.3 Optimal pair matching Using pscores generated by Stata-boost (psb) 8.4 Balance Checks 8.5 Postmatching Regression Analysis Using Difference Scores", " 8 Section 5.8.6 Comparison of Rand-gbm and Stata-boost (PS) library(tidyverse) library(haven) library(cobalt) library(sjlabelled) library(estimatr) library(lmtest) library(sandwich) library(optmatch) options(scipen=999) select &lt;- dplyr::select 8.1 Import Data mc &lt;- read_dta(&quot;data/Data_Chapter5/g3aca1_.dta&quot;) %&gt;% zap_formats() mc &lt;- sjlabelled::remove_all_labels(mc) %&gt;% as_tibble() 8.2 Optimal pair matching Using pscores generated by Rand-gbm (ps) prank &lt;- rank(mc$ps) names(prank) &lt;- mc$id d1 &lt;- outer(prank[mc$intbl==1], prank[mc$intbl==0], &quot;-&quot;) d1 &lt;- abs(d1) pm &lt;- pairmatch(d1, controls=1) (pm.d &lt;- matched.distances(pm,d1,pres=TRUE)) ## 1.1 1.10 1.100 1.101 1.102 1.103 1.104 1.105 1.106 1.107 1.108 1.109 1.11 ## 79.0 348.0 360.0 480.0 401.0 196.0 120.0 19.0 32.0 117.0 60.0 60.0 19.0 ## 1.110 1.111 1.112 1.113 1.114 1.115 1.116 1.117 1.118 1.119 1.12 1.120 1.121 ## 120.0 259.0 57.0 180.0 180.0 139.0 281.0 281.0 240.0 190.0 79.0 281.0 19.0 ## 1.122 1.123 1.124 1.125 1.126 1.127 1.128 1.129 1.13 1.130 1.131 1.132 1.133 ## 117.0 461.0 76.0 19.0 180.0 341.0 19.0 79.0 60.0 76.0 199.0 319.0 259.0 ## 1.134 1.135 1.136 1.137 1.138 1.139 1.14 1.140 1.141 1.142 1.143 1.144 1.145 ## 259.0 177.0 297.0 199.0 98.0 76.0 13.0 19.0 294.0 152.0 158.0 120.0 442.0 ## 1.146 1.147 1.148 1.149 1.15 1.150 1.151 1.152 1.153 1.154 1.155 1.156 1.157 ## 401.0 319.0 108.0 60.0 79.0 420.0 108.0 120.0 180.0 155.0 281.0 221.0 278.0 ## 1.158 1.159 1.16 1.160 1.161 1.162 1.163 1.164 1.165 1.166 1.167 1.168 1.169 ## 60.0 221.0 401.0 76.0 338.0 357.0 114.0 54.0 420.0 461.0 139.0 401.0 57.0 ## 1.17 1.170 1.171 1.172 1.173 1.174 1.175 1.176 1.177 1.178 1.179 1.18 1.180 ## 341.0 139.0 174.0 221.0 60.0 158.0 120.0 180.0 341.0 341.0 240.0 199.0 221.0 ## 1.181 1.182 1.183 1.184 1.185 1.186 1.187 1.188 1.189 1.19 1.190 1.191 1.192 ## 360.0 300.0 341.0 341.0 272.0 379.0 420.0 98.0 199.0 16.0 60.0 502.0 401.0 ## 1.193 1.194 1.195 1.196 1.197 1.198 1.199 1.2 1.20 1.200 1.201 1.202 1.203 ## 480.0 338.0 341.0 521.0 221.0 120.0 281.0 218.0 120.0 199.0 275.0 442.0 139.0 ## 1.204 1.205 1.206 1.207 1.208 1.209 1.21 1.210 1.211 1.212 1.213 1.214 1.215 ## 420.0 281.0 319.0 60.0 180.0 139.0 7.0 120.0 120.0 136.0 221.0 379.0 234.0 ## 1.216 1.217 1.218 1.219 1.22 1.220 1.221 1.222 1.223 1.224 1.225 1.226 1.227 ## 158.0 29.0 60.0 221.0 221.0 300.0 379.0 278.0 79.0 341.0 117.0 120.0 297.0 ## 1.228 1.229 1.23 1.230 1.231 1.232 1.233 1.234 1.235 1.236 1.237 1.238 1.239 ## 221.0 234.0 319.0 180.0 60.0 461.0 171.0 341.0 218.0 221.0 19.0 13.0 38.0 ## 1.24 1.240 1.241 1.242 1.243 1.244 1.245 1.246 1.247 1.248 1.249 1.25 1.250 ## 19.0 221.0 221.0 442.0 319.0 16.0 136.0 19.0 120.0 281.0 139.0 79.0 38.0 ## 1.251 1.252 1.253 1.254 1.255 1.256 1.257 1.258 1.259 1.26 1.260 1.261 1.262 ## 281.0 281.0 19.0 76.0 120.0 136.0 177.0 180.0 234.0 60.0 521.0 60.0 136.0 ## 1.263 1.264 1.265 1.266 1.267 1.268 1.269 1.27 1.270 1.271 1.272 1.273 1.274 ## 19.0 221.0 300.0 209.0 16.0 158.0 79.0 281.0 38.0 319.0 221.0 95.0 35.0 ## 1.275 1.276 1.277 1.278 1.279 1.28 1.280 1.281 1.282 1.283 1.284 1.285 1.286 ## 180.0 95.0 79.0 98.0 341.0 300.0 120.0 278.0 38.0 341.0 38.0 120.0 240.0 ## 1.29 1.3 1.30 1.31 1.32 1.33 1.34 1.35 1.36 1.37 1.38 1.39 1.4 ## 79.0 152.0 60.0 502.0 60.0 461.0 180.0 341.0 79.0 13.0 79.0 259.0 38.0 ## 1.40 1.41 1.42 1.43 1.44 1.45 1.46 1.47 1.48 1.49 1.5 1.50 1.51 ## 221.0 60.0 521.0 401.0 117.0 139.0 73.0 199.0 178.5 361.5 240.0 442.0 521.0 ## 1.52 1.53 1.54 1.55 1.56 1.57 1.58 1.59 1.6 1.60 1.61 1.62 1.63 ## 60.0 341.0 281.0 38.0 221.0 38.0 158.0 180.0 281.0 240.0 76.0 38.0 92.0 ## 1.64 1.65 1.66 1.67 1.68 1.69 1.7 1.70 1.71 1.72 1.73 1.74 1.75 ## 38.0 281.0 60.0 221.0 300.0 60.0 294.0 300.0 120.0 240.0 180.0 120.0 240.0 ## 1.76 1.77 1.78 1.79 1.8 1.80 1.81 1.82 1.83 1.84 1.85 1.86 1.87 ## 76.0 300.0 221.0 19.0 420.0 199.0 79.0 442.0 16.0 180.0 221.0 300.0 215.0 ## 1.88 1.89 1.9 1.90 1.91 1.92 1.93 1.94 1.95 1.96 1.97 1.98 1.99 ## 417.0 60.0 60.0 221.0 357.0 76.0 57.0 300.0 461.0 461.0 221.0 212.0 60.0 unlist(pm.d,max) ## 1.1 1.10 1.100 1.101 1.102 1.103 1.104 1.105 1.106 1.107 1.108 1.109 1.11 ## 79.0 348.0 360.0 480.0 401.0 196.0 120.0 19.0 32.0 117.0 60.0 60.0 19.0 ## 1.110 1.111 1.112 1.113 1.114 1.115 1.116 1.117 1.118 1.119 1.12 1.120 1.121 ## 120.0 259.0 57.0 180.0 180.0 139.0 281.0 281.0 240.0 190.0 79.0 281.0 19.0 ## 1.122 1.123 1.124 1.125 1.126 1.127 1.128 1.129 1.13 1.130 1.131 1.132 1.133 ## 117.0 461.0 76.0 19.0 180.0 341.0 19.0 79.0 60.0 76.0 199.0 319.0 259.0 ## 1.134 1.135 1.136 1.137 1.138 1.139 1.14 1.140 1.141 1.142 1.143 1.144 1.145 ## 259.0 177.0 297.0 199.0 98.0 76.0 13.0 19.0 294.0 152.0 158.0 120.0 442.0 ## 1.146 1.147 1.148 1.149 1.15 1.150 1.151 1.152 1.153 1.154 1.155 1.156 1.157 ## 401.0 319.0 108.0 60.0 79.0 420.0 108.0 120.0 180.0 155.0 281.0 221.0 278.0 ## 1.158 1.159 1.16 1.160 1.161 1.162 1.163 1.164 1.165 1.166 1.167 1.168 1.169 ## 60.0 221.0 401.0 76.0 338.0 357.0 114.0 54.0 420.0 461.0 139.0 401.0 57.0 ## 1.17 1.170 1.171 1.172 1.173 1.174 1.175 1.176 1.177 1.178 1.179 1.18 1.180 ## 341.0 139.0 174.0 221.0 60.0 158.0 120.0 180.0 341.0 341.0 240.0 199.0 221.0 ## 1.181 1.182 1.183 1.184 1.185 1.186 1.187 1.188 1.189 1.19 1.190 1.191 1.192 ## 360.0 300.0 341.0 341.0 272.0 379.0 420.0 98.0 199.0 16.0 60.0 502.0 401.0 ## 1.193 1.194 1.195 1.196 1.197 1.198 1.199 1.2 1.20 1.200 1.201 1.202 1.203 ## 480.0 338.0 341.0 521.0 221.0 120.0 281.0 218.0 120.0 199.0 275.0 442.0 139.0 ## 1.204 1.205 1.206 1.207 1.208 1.209 1.21 1.210 1.211 1.212 1.213 1.214 1.215 ## 420.0 281.0 319.0 60.0 180.0 139.0 7.0 120.0 120.0 136.0 221.0 379.0 234.0 ## 1.216 1.217 1.218 1.219 1.22 1.220 1.221 1.222 1.223 1.224 1.225 1.226 1.227 ## 158.0 29.0 60.0 221.0 221.0 300.0 379.0 278.0 79.0 341.0 117.0 120.0 297.0 ## 1.228 1.229 1.23 1.230 1.231 1.232 1.233 1.234 1.235 1.236 1.237 1.238 1.239 ## 221.0 234.0 319.0 180.0 60.0 461.0 171.0 341.0 218.0 221.0 19.0 13.0 38.0 ## 1.24 1.240 1.241 1.242 1.243 1.244 1.245 1.246 1.247 1.248 1.249 1.25 1.250 ## 19.0 221.0 221.0 442.0 319.0 16.0 136.0 19.0 120.0 281.0 139.0 79.0 38.0 ## 1.251 1.252 1.253 1.254 1.255 1.256 1.257 1.258 1.259 1.26 1.260 1.261 1.262 ## 281.0 281.0 19.0 76.0 120.0 136.0 177.0 180.0 234.0 60.0 521.0 60.0 136.0 ## 1.263 1.264 1.265 1.266 1.267 1.268 1.269 1.27 1.270 1.271 1.272 1.273 1.274 ## 19.0 221.0 300.0 209.0 16.0 158.0 79.0 281.0 38.0 319.0 221.0 95.0 35.0 ## 1.275 1.276 1.277 1.278 1.279 1.28 1.280 1.281 1.282 1.283 1.284 1.285 1.286 ## 180.0 95.0 79.0 98.0 341.0 300.0 120.0 278.0 38.0 341.0 38.0 120.0 240.0 ## 1.29 1.3 1.30 1.31 1.32 1.33 1.34 1.35 1.36 1.37 1.38 1.39 1.4 ## 79.0 152.0 60.0 502.0 60.0 461.0 180.0 341.0 79.0 13.0 79.0 259.0 38.0 ## 1.40 1.41 1.42 1.43 1.44 1.45 1.46 1.47 1.48 1.49 1.5 1.50 1.51 ## 221.0 60.0 521.0 401.0 117.0 139.0 73.0 199.0 178.5 361.5 240.0 442.0 521.0 ## 1.52 1.53 1.54 1.55 1.56 1.57 1.58 1.59 1.6 1.60 1.61 1.62 1.63 ## 60.0 341.0 281.0 38.0 221.0 38.0 158.0 180.0 281.0 240.0 76.0 38.0 92.0 ## 1.64 1.65 1.66 1.67 1.68 1.69 1.7 1.70 1.71 1.72 1.73 1.74 1.75 ## 38.0 281.0 60.0 221.0 300.0 60.0 294.0 300.0 120.0 240.0 180.0 120.0 240.0 ## 1.76 1.77 1.78 1.79 1.8 1.80 1.81 1.82 1.83 1.84 1.85 1.86 1.87 ## 76.0 300.0 221.0 19.0 420.0 199.0 79.0 442.0 16.0 180.0 221.0 300.0 215.0 ## 1.88 1.89 1.9 1.90 1.91 1.92 1.93 1.94 1.95 1.96 1.97 1.98 1.99 ## 417.0 60.0 60.0 221.0 357.0 76.0 57.0 300.0 461.0 461.0 221.0 212.0 60.0 mean(unlist(pm.d)) ## [1] 200.2867 sum(unlist(pm.d)) ## [1] 57282 stratumStructure(pm) ## 1:1 0:1 ## 286 31 # Merge to original dataset and calculate difference scores m1.df &lt;- tibble(id = as.numeric(names(pm)), gbm_pm = as.numeric(pm)) %&gt;% left_join(mc, by = &quot;id&quot;) %&gt;% filter(!is.na(gbm_pm)) %&gt;% select(icsacach, ageyc, fmale, blck, whit, hisp, pcedu, ipovl, pcemft, fthr, schbl, gbm_pm, intbl) %&gt;% group_by(intbl) %&gt;% arrange(gbm_pm) %&gt;% # sort by group to ensure that the columns are matched nest() %&gt;% pivot_wider(names_from = &quot;intbl&quot;, values_from = &quot;data&quot;, names_prefix = &quot;g&quot;) %&gt;% unnest(cols = c(g1, g0), names_sep = &quot;_&quot;) %&gt;% mutate(y = g1_icsacach - g0_icsacach, age = g1_ageyc - g0_ageyc, fmale = g1_fmale - g0_fmale, blck = g1_blck - g0_blck, whit = g1_whit - g0_whit, hisp = g1_hisp - g0_hisp, pcedu = g1_pcedu - g0_pcedu, ipovl = g1_ipovl - g0_ipovl, pcemft = g1_pcemft - g0_pcemft, fthr = g1_fthr - g0_fthr) 8.3 Optimal pair matching Using pscores generated by Stata-boost (psb) prank &lt;- rank(mc$psb) names(prank) &lt;- mc$id d1 &lt;- outer(prank[mc$intbl==1], prank[mc$intbl==0], &quot;-&quot;) d1 &lt;- abs(d1) pm1 &lt;- pairmatch(d1, controls=1) (pm1.d &lt;- matched.distances(pm1,d1,pres=TRUE)) ## 1.1 1.10 1.100 1.101 1.102 1.103 1.104 1.105 1.106 1.107 1.108 1.109 1.11 ## 13.0 360.0 281.0 16.0 38.0 319.0 60.0 86.0 120.0 120.0 10.0 1.0 108.0 ## 1.110 1.111 1.112 1.113 1.114 1.115 1.116 1.117 1.118 1.119 1.12 1.120 1.121 ## 98.0 136.0 7.0 206.0 259.0 168.0 114.0 98.0 60.0 180.0 51.0 120.0 60.0 ## 1.122 1.123 1.124 1.125 1.126 1.127 1.128 1.129 1.13 1.130 1.131 1.132 1.133 ## 10.0 4.0 19.0 120.0 57.0 60.0 16.0 13.0 294.0 146.0 240.0 338.0 1.0 ## 1.134 1.135 1.136 1.137 1.138 1.139 1.14 1.140 1.141 1.142 1.143 1.144 1.145 ## 38.0 120.0 117.0 221.0 60.0 278.0 60.0 19.0 19.0 79.0 199.0 139.0 360.0 ## 1.146 1.147 1.148 1.149 1.15 1.150 1.151 1.152 1.153 1.154 1.155 1.156 1.157 ## 341.0 120.0 16.0 221.0 19.0 461.0 76.0 13.0 120.0 19.0 502.0 177.0 282.0 ## 1.158 1.159 1.16 1.160 1.161 1.162 1.163 1.164 1.165 1.166 1.167 1.168 1.169 ## 60.0 19.0 60.0 221.0 60.0 60.0 79.0 341.0 319.0 502.0 19.0 180.0 19.0 ## 1.17 1.170 1.171 1.172 1.173 1.174 1.175 1.176 1.177 1.178 1.179 1.18 1.180 ## 1.0 180.0 259.0 360.0 19.0 120.0 199.0 60.0 519.5 16.0 120.0 180.0 417.0 ## 1.181 1.182 1.183 1.184 1.185 1.186 1.187 1.188 1.189 1.19 1.190 1.191 1.192 ## 436.0 177.0 60.0 341.0 98.0 7.0 57.0 221.0 300.0 38.0 281.0 240.0 212.0 ## 1.193 1.194 1.195 1.196 1.197 1.198 1.199 1.2 1.20 1.200 1.201 1.202 1.203 ## 16.0 461.0 98.0 278.0 57.0 401.0 360.0 341.0 76.0 60.0 281.0 259.0 136.0 ## 1.204 1.205 1.206 1.207 1.208 1.209 1.21 1.210 1.211 1.212 1.213 1.214 1.215 ## 16.0 89.0 120.0 117.0 16.0 19.0 10.0 16.0 95.0 79.0 218.0 120.0 436.0 ## 1.216 1.217 1.218 1.219 1.22 1.220 1.221 1.222 1.223 1.224 1.225 1.226 1.227 ## 10.0 442.0 319.0 16.0 60.0 297.0 1.0 79.0 180.0 158.0 48.0 199.0 259.0 ## 1.228 1.229 1.23 1.230 1.231 1.232 1.233 1.234 1.235 1.236 1.237 1.238 1.239 ## 158.0 13.0 120.0 221.0 10.0 38.0 60.0 417.0 57.0 7.0 231.0 19.0 13.0 ## 1.24 1.240 1.241 1.242 1.243 1.244 1.245 1.246 1.247 1.248 1.249 1.25 1.250 ## 35.0 341.0 54.0 218.0 221.0 19.0 386.0 54.0 180.0 19.0 60.0 19.0 120.0 ## 1.251 1.252 1.253 1.254 1.255 1.256 1.257 1.258 1.259 1.26 1.260 1.261 1.262 ## 237.0 19.0 146.0 19.0 442.0 79.0 19.0 338.0 79.0 4.0 158.0 401.0 60.0 ## 1.263 1.264 1.265 1.266 1.267 1.268 1.269 1.27 1.270 1.271 1.272 1.273 1.274 ## 120.0 240.0 117.0 29.0 98.0 180.0 278.0 60.0 8.0 193.0 114.0 240.0 237.0 ## 1.275 1.276 1.277 1.278 1.279 1.28 1.280 1.281 1.282 1.283 1.284 1.285 1.286 ## 120.0 60.0 120.0 16.0 240.0 281.0 98.0 13.0 2.0 98.0 35.0 60.0 19.0 ## 1.29 1.3 1.30 1.31 1.32 1.33 1.34 1.35 1.36 1.37 1.38 1.39 1.4 ## 10.0 19.0 13.0 281.0 221.0 136.0 259.0 79.0 1.0 19.0 320.5 95.0 13.0 ## 1.40 1.41 1.42 1.43 1.44 1.45 1.46 1.47 1.48 1.49 1.5 1.50 1.51 ## 215.0 79.0 60.0 19.0 158.0 60.0 177.0 4.0 35.0 10.0 19.0 19.0 19.0 ## 1.52 1.53 1.54 1.55 1.56 1.57 1.58 1.59 1.6 1.60 1.61 1.62 1.63 ## 70.0 120.0 19.0 221.0 19.0 199.0 19.0 7.0 19.0 136.0 7.0 19.0 221.0 ## 1.64 1.65 1.66 1.67 1.68 1.69 1.7 1.70 1.71 1.72 1.73 1.74 1.75 ## 98.0 4.0 180.0 221.0 351.0 98.0 79.0 278.0 38.0 60.0 218.0 70.0 180.0 ## 1.76 1.77 1.78 1.79 1.8 1.80 1.81 1.82 1.83 1.84 1.85 1.86 1.87 ## 38.0 158.0 281.0 221.0 120.0 341.0 341.0 79.0 1.0 278.0 13.0 60.0 57.0 ## 1.88 1.89 1.9 1.90 1.91 1.92 1.93 1.94 1.95 1.96 1.97 1.98 1.99 ## 89.0 16.0 1.0 133.0 13.0 60.0 60.0 221.0 221.0 215.0 19.0 19.0 57.0 unlist(pm1.d,max) ## 1.1 1.10 1.100 1.101 1.102 1.103 1.104 1.105 1.106 1.107 1.108 1.109 1.11 ## 13.0 360.0 281.0 16.0 38.0 319.0 60.0 86.0 120.0 120.0 10.0 1.0 108.0 ## 1.110 1.111 1.112 1.113 1.114 1.115 1.116 1.117 1.118 1.119 1.12 1.120 1.121 ## 98.0 136.0 7.0 206.0 259.0 168.0 114.0 98.0 60.0 180.0 51.0 120.0 60.0 ## 1.122 1.123 1.124 1.125 1.126 1.127 1.128 1.129 1.13 1.130 1.131 1.132 1.133 ## 10.0 4.0 19.0 120.0 57.0 60.0 16.0 13.0 294.0 146.0 240.0 338.0 1.0 ## 1.134 1.135 1.136 1.137 1.138 1.139 1.14 1.140 1.141 1.142 1.143 1.144 1.145 ## 38.0 120.0 117.0 221.0 60.0 278.0 60.0 19.0 19.0 79.0 199.0 139.0 360.0 ## 1.146 1.147 1.148 1.149 1.15 1.150 1.151 1.152 1.153 1.154 1.155 1.156 1.157 ## 341.0 120.0 16.0 221.0 19.0 461.0 76.0 13.0 120.0 19.0 502.0 177.0 282.0 ## 1.158 1.159 1.16 1.160 1.161 1.162 1.163 1.164 1.165 1.166 1.167 1.168 1.169 ## 60.0 19.0 60.0 221.0 60.0 60.0 79.0 341.0 319.0 502.0 19.0 180.0 19.0 ## 1.17 1.170 1.171 1.172 1.173 1.174 1.175 1.176 1.177 1.178 1.179 1.18 1.180 ## 1.0 180.0 259.0 360.0 19.0 120.0 199.0 60.0 519.5 16.0 120.0 180.0 417.0 ## 1.181 1.182 1.183 1.184 1.185 1.186 1.187 1.188 1.189 1.19 1.190 1.191 1.192 ## 436.0 177.0 60.0 341.0 98.0 7.0 57.0 221.0 300.0 38.0 281.0 240.0 212.0 ## 1.193 1.194 1.195 1.196 1.197 1.198 1.199 1.2 1.20 1.200 1.201 1.202 1.203 ## 16.0 461.0 98.0 278.0 57.0 401.0 360.0 341.0 76.0 60.0 281.0 259.0 136.0 ## 1.204 1.205 1.206 1.207 1.208 1.209 1.21 1.210 1.211 1.212 1.213 1.214 1.215 ## 16.0 89.0 120.0 117.0 16.0 19.0 10.0 16.0 95.0 79.0 218.0 120.0 436.0 ## 1.216 1.217 1.218 1.219 1.22 1.220 1.221 1.222 1.223 1.224 1.225 1.226 1.227 ## 10.0 442.0 319.0 16.0 60.0 297.0 1.0 79.0 180.0 158.0 48.0 199.0 259.0 ## 1.228 1.229 1.23 1.230 1.231 1.232 1.233 1.234 1.235 1.236 1.237 1.238 1.239 ## 158.0 13.0 120.0 221.0 10.0 38.0 60.0 417.0 57.0 7.0 231.0 19.0 13.0 ## 1.24 1.240 1.241 1.242 1.243 1.244 1.245 1.246 1.247 1.248 1.249 1.25 1.250 ## 35.0 341.0 54.0 218.0 221.0 19.0 386.0 54.0 180.0 19.0 60.0 19.0 120.0 ## 1.251 1.252 1.253 1.254 1.255 1.256 1.257 1.258 1.259 1.26 1.260 1.261 1.262 ## 237.0 19.0 146.0 19.0 442.0 79.0 19.0 338.0 79.0 4.0 158.0 401.0 60.0 ## 1.263 1.264 1.265 1.266 1.267 1.268 1.269 1.27 1.270 1.271 1.272 1.273 1.274 ## 120.0 240.0 117.0 29.0 98.0 180.0 278.0 60.0 8.0 193.0 114.0 240.0 237.0 ## 1.275 1.276 1.277 1.278 1.279 1.28 1.280 1.281 1.282 1.283 1.284 1.285 1.286 ## 120.0 60.0 120.0 16.0 240.0 281.0 98.0 13.0 2.0 98.0 35.0 60.0 19.0 ## 1.29 1.3 1.30 1.31 1.32 1.33 1.34 1.35 1.36 1.37 1.38 1.39 1.4 ## 10.0 19.0 13.0 281.0 221.0 136.0 259.0 79.0 1.0 19.0 320.5 95.0 13.0 ## 1.40 1.41 1.42 1.43 1.44 1.45 1.46 1.47 1.48 1.49 1.5 1.50 1.51 ## 215.0 79.0 60.0 19.0 158.0 60.0 177.0 4.0 35.0 10.0 19.0 19.0 19.0 ## 1.52 1.53 1.54 1.55 1.56 1.57 1.58 1.59 1.6 1.60 1.61 1.62 1.63 ## 70.0 120.0 19.0 221.0 19.0 199.0 19.0 7.0 19.0 136.0 7.0 19.0 221.0 ## 1.64 1.65 1.66 1.67 1.68 1.69 1.7 1.70 1.71 1.72 1.73 1.74 1.75 ## 98.0 4.0 180.0 221.0 351.0 98.0 79.0 278.0 38.0 60.0 218.0 70.0 180.0 ## 1.76 1.77 1.78 1.79 1.8 1.80 1.81 1.82 1.83 1.84 1.85 1.86 1.87 ## 38.0 158.0 281.0 221.0 120.0 341.0 341.0 79.0 1.0 278.0 13.0 60.0 57.0 ## 1.88 1.89 1.9 1.90 1.91 1.92 1.93 1.94 1.95 1.96 1.97 1.98 1.99 ## 89.0 16.0 1.0 133.0 13.0 60.0 60.0 221.0 221.0 215.0 19.0 19.0 57.0 mean(unlist(pm1.d)) ## [1] 133.4056 sum(unlist(pm1.d)) ## [1] 38154 stratumStructure(pm1) ## 1:1 0:1 ## 286 31 # Merge to original dataset and calculate difference scores m2.df &lt;- tibble(id = as.numeric(names(pm1)), gbm_pm = as.numeric(pm1)) %&gt;% left_join(mc, by = &quot;id&quot;) %&gt;% filter(!is.na(gbm_pm)) %&gt;% select(icsacach, ageyc, fmale, blck, whit, hisp, pcedu, ipovl, pcemft, fthr, schbl, gbm_pm, intbl) %&gt;% group_by(intbl) %&gt;% arrange(gbm_pm) %&gt;% # sort by group to ensure that the columns are matched nest() %&gt;% pivot_wider(names_from = &quot;intbl&quot;, values_from = &quot;data&quot;, names_prefix = &quot;g&quot;) %&gt;% unnest(cols = c(g1, g0), names_sep = &quot;_&quot;) %&gt;% mutate(y = g1_icsacach - g0_icsacach, age = g1_ageyc - g0_ageyc, fmale = g1_fmale - g0_fmale, blck = g1_blck - g0_blck, whit = g1_whit - g0_whit, hisp = g1_hisp - g0_hisp, pcedu = g1_pcedu - g0_pcedu, ipovl = g1_ipovl - g0_ipovl, pcemft = g1_pcemft - g0_pcemft, fthr = g1_fthr - g0_fthr) 8.4 Balance Checks # Rand-gbm bal.tab(pm, intbl ~ ageyc + fmale + blck + whit + hisp + pcedu + ipovl + pcemft + fthr, data = mc, s.d.denom = &quot;pooled&quot;) ## Call ## pairmatch(x = d1, controls = 1) ## ## Balance Measures ## Type Diff.Adj ## ageyc Contin. 0.1066 ## fmale Binary 0.0035 ## blck Binary -0.0594 ## whit Binary 0.0280 ## hisp Binary -0.0035 ## pcedu Contin. 0.0035 ## ipovl Contin. 0.0392 ## pcemft Contin. 0.0751 ## fthr Contin. 0.0351 ## ## Sample sizes ## Control Treated ## All 317 286 ## Matched 286 286 ## Unmatched 31 0 # Stata-boost bal.tab(pm1, intbl ~ ageyc + fmale + blck + whit + hisp + pcedu + ipovl + pcemft + fthr, data = mc, s.d.denom = &quot;pooled&quot;) ## Call ## pairmatch(x = d1, controls = 1) ## ## Balance Measures ## Type Diff.Adj ## ageyc Contin. 0.0649 ## fmale Binary -0.0140 ## blck Binary -0.0594 ## whit Binary 0.0315 ## hisp Binary -0.0035 ## pcedu Contin. -0.0242 ## ipovl Contin. 0.0207 ## pcemft Contin. 0.0354 ## fthr Contin. 0.0434 ## ## Sample sizes ## Control Treated ## All 317 286 ## Matched 286 286 ## Unmatched 31 0 8.5 Postmatching Regression Analysis Using Difference Scores Results show that the treatment effects (i.e., constant of the regression model) in both models are not statistically significant. Thus, both methods provide similar findings. # Rand-gbm m1 &lt;- lm(y ~ age + fmale + blck + whit + hisp + pcedu + ipovl + pcemft + fthr, data = m1.df) lmtest::coeftest(m1, vcov = vcovCL, cluster = m1.df$g0_schbl) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.22867945 0.11081078 2.0637 0.04003 * ## age -0.02135916 0.12215360 -0.1749 0.86133 ## fmale 0.04132044 0.14649937 0.2821 0.77813 ## blck 0.29269891 0.26273751 1.1140 0.26628 ## whit 0.43520078 0.14532296 2.9947 0.00301 ** ## hisp 0.59910369 0.28111487 2.1312 0.03401 * ## pcedu 0.00608329 0.03293921 0.1847 0.85362 ## ipovl 0.00046462 0.00073206 0.6347 0.52620 ## pcemft 0.21106996 0.23340260 0.9043 0.36666 ## fthr -0.09083065 0.21202765 -0.4284 0.66872 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # Stata-boost m2 &lt;- lm(y ~ age + fmale + blck + whit + hisp + pcedu + ipovl + pcemft + fthr, data = m2.df) lmtest::coeftest(m2, vcov = vcovCL, cluster = m2.df$g0_schbl) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.22355848 0.15734928 1.4208 0.156566 ## age 0.04801577 0.10491408 0.4577 0.647569 ## fmale -0.19032328 0.06765594 -2.8131 0.005277 ** ## blck -0.38336032 0.51335951 -0.7468 0.455871 ## whit -0.24901285 0.38669958 -0.6439 0.520173 ## hisp -0.50934470 0.35281961 -1.4436 0.150030 ## pcedu 0.02932183 0.05044319 0.5813 0.561547 ## ipovl 0.00042512 0.00058994 0.7206 0.471785 ## pcemft 0.20884466 0.07313025 2.8558 0.004635 ** ## fthr -0.14958273 0.22612050 -0.6615 0.508859 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 "],["08_Section6.5.2.html", "9 Section 6.5.2 Subclassification &amp; Cox Proportional Hazards (PS) 9.1 Import Data 9.2 Create Propensity Score Using Logistic 9.3 Function to Conduct Balance Check Using Normalized Difference 9.4 Balance Check on the Original Sample (Normalized Difference) 9.5 Function to Check Balance Using Chi-Square Tests 9.6 Balance Check on the Original Sample (Chi-Square) 9.7 Get Quintiles 9.8 Create 5 Subclasses Using Quintiles 9.9 Check Imbalance Post-Subclassification (5 Subclasses) 9.10 Trimming: Search for Best Cutoff Alpha for Overlap 9.11 Trim Observations 9.12 Create 5 New Subclasses and Check Imbalance 9.13 Outcome Analysis by Subclass 9.14 Aggregate Results 9.15 Subclassification with MatchIt", " 9 Section 6.5.2 Subclassification &amp; Cox Proportional Hazards (PS) library(tidyverse) library(haven) library(MatchIt) library(cobalt) library(sjlabelled) library(broom) library(survival) library(PSweight) options(scipen=999) 9.1 Import Data df &lt;- read_dta(&quot;data/Data_Chapter6/sur_subclass.dta&quot;) %&gt;% zap_formats() df &lt;- sjlabelled::remove_all_labels(df) %&gt;% as_tibble() 9.2 Create Propensity Score Using Logistic cov &lt;- &quot;married + high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + employ + open + black + hispanic + natam + chdage1 + chdage2 + chdage3 + cgrage1 + cgrage2 + cgrage3 + CRA47A + mental + arrest + PSH17A + sexual + provide + supervis + other + ra + cidi + cgneed&quot; f &lt;- as.formula(paste(&quot;aodserv ~&quot;, cov)) m1 &lt;- glm(aodserv ~ married + high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + employ + open + black + hispanic + natam + chdage1 + chdage2 + chdage3 + cgrage1 + cgrage2 + cgrage3 + CRA47A + mental + arrest + PSH17A + sexual + provide + supervis + other + ra + cidi + cgneed, family = binomial, data = df) ps3 &lt;- predict(m1, type = &quot;response&quot;) sur_subclass1 &lt;- df sur_subclass1$ps3 &lt;- ps3 9.3 Function to Conduct Balance Check Using Normalized Difference nd &lt;- function(cov, df = sur_subclass1, tx = &quot;aodserv&quot;) { tx &lt;- as.name(tx) cov &lt;- as.name(cov) df &lt;- df %&gt;% group_by(!!tx) %&gt;% summarize(m = mean(!!cov, na.rm = T), s = sd(!!cov, na.rm = T), .groups = &quot;drop&quot;) %&gt;% pivot_wider(names_from = !!tx, values_from = c(&quot;m&quot;, &quot;s&quot;), names_sep = &quot;&quot;) %&gt;% mutate(nd = (m1-m0)/sqrt(s1^2+s0^2)) return(df$nd) } 9.4 Balance Check on the Original Sample (Normalized Difference) covs &lt;- str_split(cov, &quot;\\\\s[+]\\\\s&quot;)[[1]] # vector of covariates sapply(covs, nd) # apply the function nd on each covariate ## married high bahigh poverty2 poverty3 poverty4 ## -0.083782572 -0.020944688 -0.117467895 0.047519781 -0.101591707 -0.058597578 ## poverty5 employ open black hispanic natam ## -0.031356128 -0.206390823 0.365698430 0.056512656 -0.030820121 0.113101585 ## chdage1 chdage2 chdage3 cgrage1 cgrage2 cgrage3 ## 0.317144130 -0.061307219 -0.168353683 -0.058741019 0.028058160 0.026894624 ## CRA47A mental arrest PSH17A sexual provide ## 0.178218682 0.400231469 0.492396125 0.457862846 -0.236493710 0.221219159 ## supervis other ra cidi cgneed ## 0.043210479 0.008817453 0.996042062 0.529662472 0.354842755 9.5 Function to Check Balance Using Chi-Square Tests check_blc &lt;- function(cov, df = sur_subclass1, tx = &quot;aodserv&quot;) { ct &lt;- tidy( chisq.test( table(df[[cov]], y = df[[tx]]), correct =F ) ) %&gt;% add_column(cov = cov, .before = &quot;statistic&quot;) %&gt;% mutate(p.value = round(p.value, 2)) return(ct) } 9.6 Balance Check on the Original Sample (Chi-Square) covs2 &lt;- c(&quot;married&quot;, &quot;educ&quot;, &quot;pov&quot;, &quot;employ&quot;, &quot;open&quot;, &quot;race&quot;, &quot;chdage&quot;, &quot;cgage&quot;, &quot;CRA47A&quot;, &quot;mental&quot;, &quot;arrest&quot;, &quot;PSH17A&quot;, &quot;maltx&quot;, &quot;ra&quot;, &quot;cidi&quot;, &quot;cgneed&quot;) map_dfr(covs2, check_blc) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 3.52 0.06 1 Pearson&#39;s Chi-squared test ## 2 educ 10.2 0.01 2 Pearson&#39;s Chi-squared test ## 3 pov 11.2 0.02 4 Pearson&#39;s Chi-squared test ## 4 employ 21.5 0 1 Pearson&#39;s Chi-squared test ## 5 open 60.6 0 1 Pearson&#39;s Chi-squared test ## 6 race 11.6 0.01 3 Pearson&#39;s Chi-squared test ## 7 chdage 56.0 0 3 Pearson&#39;s Chi-squared test ## 8 cgage 4.00 0.26 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 17.7 0 1 Pearson&#39;s Chi-squared test ## 10 mental 92.4 0 1 Pearson&#39;s Chi-squared test ## 11 arrest 127. 0 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 171. 0 1 Pearson&#39;s Chi-squared test ## 13 maltx 47.9 0 4 Pearson&#39;s Chi-squared test ## 14 ra 584. 0 1 Pearson&#39;s Chi-squared test ## 15 cidi 154. 0 1 Pearson&#39;s Chi-squared test ## 16 cgneed 134. 0 1 Pearson&#39;s Chi-squared test 9.7 Get Quintiles q5 &lt;- c(0, round(quantile(sur_subclass1$ps3, c(.2, .4, .6, .8), type = 1), 7), 1) # round to 7 digits to replicate Stata code q5 ## 20% 40% 60% 80% ## 0.0000000 0.0121536 0.0216452 0.0440495 0.1421116 1.0000000 9.8 Create 5 Subclasses Using Quintiles # Cut 5 subclasses subs &lt;- sur_subclass1 %&gt;% arrange(ps3) %&gt;% group_by(q = cut(ps3, include.lowest = F, right = F, dig.lab = 7, breaks = q5, labels = F)) # Summary statistics of ps3 per subclass subs %&gt;% group_by(q) %&gt;% summarise(obs = n(), mean = mean(ps3), sd = sd(ps3), min = min(ps3), max = max(ps3), .groups = &quot;drop&quot;) ## # A tibble: 5 x 6 ## q obs mean sd min max ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 545 0.00813 0.00237 0.00263 0.0122 ## 2 2 545 0.0165 0.00271 0.0122 0.0216 ## 3 3 543 0.0308 0.00600 0.0217 0.0439 ## 4 4 546 0.0758 0.0264 0.0440 0.142 ## 5 5 544 0.409 0.215 0.143 0.951 # Filter each subclass into its own tibble sub1 &lt;- subs %&gt;% filter(q == 1) sub2 &lt;- subs %&gt;% filter(q == 2) sub3 &lt;- subs %&gt;% filter(q == 3) sub4 &lt;- subs %&gt;% filter(q == 4) sub5 &lt;- subs %&gt;% filter(q == 5) 9.9 Check Imbalance Post-Subclassification (5 Subclasses) map_dfr(covs2, check_blc, df = sub1) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 married 0.506 0.48 1 Pearson&#39;s Chi-squared test ## 2 educ 0.955 0.62 2 Pearson&#39;s Chi-squared test ## 3 pov 2.35 0.67 4 Pearson&#39;s Chi-squared test ## 4 employ 0.478 0.49 1 Pearson&#39;s Chi-squared test ## 5 open 2.69 0.1 1 Pearson&#39;s Chi-squared test ## 6 race 0.673 0.88 3 Pearson&#39;s Chi-squared test ## 7 chdage 2.31 0.51 3 Pearson&#39;s Chi-squared test ## 8 cgage 3.59 0.17 2 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.211 0.65 1 Pearson&#39;s Chi-squared test ## 10 mental 0.0303 0.86 1 Pearson&#39;s Chi-squared test ## 11 arrest 0.0402 0.84 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 0.00741 0.93 1 Pearson&#39;s Chi-squared test ## 13 maltx 2.39 0.66 4 Pearson&#39;s Chi-squared test ## 14 ra 541. 0 1 Chi-squared test for given probabilities ## 15 cidi 0.0323 0.86 1 Pearson&#39;s Chi-squared test ## 16 cgneed 541. 0 1 Chi-squared test for given probabilities map_dfr(covs2, check_blc, df = sub2) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 married 0.749 0.39 1 Pearson&#39;s Chi-squared test ## 2 educ 2.12 0.35 2 Pearson&#39;s Chi-squared test ## 3 pov 1.77 0.78 4 Pearson&#39;s Chi-squared test ## 4 employ 3.02 0.08 1 Pearson&#39;s Chi-squared test ## 5 open 2.21 0.14 1 Pearson&#39;s Chi-squared test ## 6 race 4.68 0.2 3 Pearson&#39;s Chi-squared test ## 7 chdage 5.67 0.13 3 Pearson&#39;s Chi-squared test ## 8 cgage 0.832 0.84 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 1.81 0.18 1 Pearson&#39;s Chi-squared test ## 10 mental 1.03 0.31 1 Pearson&#39;s Chi-squared test ## 11 arrest 0.000198 0.99 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 0.0789 0.78 1 Pearson&#39;s Chi-squared test ## 13 maltx 2.24 0.69 4 Pearson&#39;s Chi-squared test ## 14 ra 521. 0 1 Chi-squared test for given probabilities ## 15 cidi 0.250 0.62 1 Pearson&#39;s Chi-squared test ## 16 cgneed 44.1 0 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub3) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 0.147 0.7 1 Pearson&#39;s Chi-squared test ## 2 educ 2.85 0.24 2 Pearson&#39;s Chi-squared test ## 3 pov 1.41 0.84 4 Pearson&#39;s Chi-squared test ## 4 employ 1.93 0.17 1 Pearson&#39;s Chi-squared test ## 5 open 0.260 0.61 1 Pearson&#39;s Chi-squared test ## 6 race 3.90 0.27 3 Pearson&#39;s Chi-squared test ## 7 chdage 1.07 0.78 3 Pearson&#39;s Chi-squared test ## 8 cgage 3.15 0.37 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.428 0.51 1 Pearson&#39;s Chi-squared test ## 10 mental 0.447 0.5 1 Pearson&#39;s Chi-squared test ## 11 arrest 0.00553 0.94 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 10.5 0 1 Pearson&#39;s Chi-squared test ## 13 maltx 3.94 0.41 4 Pearson&#39;s Chi-squared test ## 14 ra 0.107 0.74 1 Pearson&#39;s Chi-squared test ## 15 cidi 0.835 0.36 1 Pearson&#39;s Chi-squared test ## 16 cgneed 3.18 0.07 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub4) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 0.474 0.49 1 Pearson&#39;s Chi-squared test ## 2 educ 3.22 0.2 2 Pearson&#39;s Chi-squared test ## 3 pov 5.56 0.23 4 Pearson&#39;s Chi-squared test ## 4 employ 0.495 0.48 1 Pearson&#39;s Chi-squared test ## 5 open 1.12 0.29 1 Pearson&#39;s Chi-squared test ## 6 race 0.315 0.96 3 Pearson&#39;s Chi-squared test ## 7 chdage 0.725 0.87 3 Pearson&#39;s Chi-squared test ## 8 cgage 0.299 0.96 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.466 0.49 1 Pearson&#39;s Chi-squared test ## 10 mental 0.000123 0.99 1 Pearson&#39;s Chi-squared test ## 11 arrest 3.57 0.06 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 1.95 0.16 1 Pearson&#39;s Chi-squared test ## 13 maltx 1.25 0.87 4 Pearson&#39;s Chi-squared test ## 14 ra 0.108 0.74 1 Pearson&#39;s Chi-squared test ## 15 cidi 0.141 0.71 1 Pearson&#39;s Chi-squared test ## 16 cgneed 4.11 0.04 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub5) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 0.160 0.69 1 Pearson&#39;s Chi-squared test ## 2 educ 2.66 0.26 2 Pearson&#39;s Chi-squared test ## 3 pov 1.57 0.81 4 Pearson&#39;s Chi-squared test ## 4 employ 0.623 0.43 1 Pearson&#39;s Chi-squared test ## 5 open 5.30 0.02 1 Pearson&#39;s Chi-squared test ## 6 race 1.98 0.58 3 Pearson&#39;s Chi-squared test ## 7 chdage 2.88 0.41 3 Pearson&#39;s Chi-squared test ## 8 cgage 0.848 0.84 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.203 0.65 1 Pearson&#39;s Chi-squared test ## 10 mental 3.86 0.05 1 Pearson&#39;s Chi-squared test ## 11 arrest 0.244 0.62 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 3.19 0.07 1 Pearson&#39;s Chi-squared test ## 13 maltx 2.79 0.59 4 Pearson&#39;s Chi-squared test ## 14 ra 19.8 0 1 Pearson&#39;s Chi-squared test ## 15 cidi 9.98 0 1 Pearson&#39;s Chi-squared test ## 16 cgneed 4.47 0.03 1 Pearson&#39;s Chi-squared test 9.10 Trimming: Search for Best Cutoff Alpha for Overlap # Program to search best cutoff value alpha for overlap (Crum et al., 2009) trim &lt;- PSweight::PStrim( data = as.data.frame(sur_subclass1), # fix for latest package update ps.formula = f, optimal = T ) trim$delta # or use .079 from the Stata results ## [1] 0.07802586 1-trim$delta # or use .921 from the Stata results ## [1] 0.9219741 9.11 Trim Observations summary(sur_subclass1$ps3) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.002628 0.014190 0.029990 0.107969 0.093391 0.950519 sur_subclass2 &lt;- sur_subclass1 %&gt;% filter(ps3 &gt;= .079 &amp; ps3 &lt;= .921) summary(sur_subclass2$ps3) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.07916 0.13539 0.24566 0.32245 0.47885 0.90917 9.12 Create 5 New Subclasses and Check Imbalance # Cut 5 subclasses (Type 2 and 5 in Quantile() are identical to Stata results) subs_t &lt;- sur_subclass2 %&gt;% arrange(ps3) %&gt;% group_by(q = cut(ps3, include.lowest = F, right = F, dig.lab = 7, breaks = c(0, round(quantile(sur_subclass2$ps3, c(.2, .4, .6, .8), type = 2), 7), 2), labels = F)) # Summary statistics of ps3 per subclass subs_t %&gt;% group_by(q) %&gt;% summarise(obs = n(), mean = mean(ps3), sd = sd(ps3), min = min(ps3), max = max(ps3), .groups = &quot;drop&quot;) ## # A tibble: 5 x 6 ## q obs mean sd min max ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 149 0.0959 0.0102 0.0792 0.115 ## 2 2 149 0.151 0.0212 0.115 0.190 ## 3 3 149 0.249 0.0386 0.190 0.317 ## 4 4 149 0.422 0.0675 0.318 0.546 ## 5 5 149 0.694 0.102 0.549 0.909 # Filter each subclass into its own tibble sub1_t &lt;- subs_t %&gt;% filter(q == 1) sub2_t &lt;- subs_t %&gt;% filter(q == 2) sub3_t &lt;- subs_t %&gt;% filter(q == 3) sub4_t &lt;- subs_t %&gt;% filter(q == 4) sub5_t &lt;- subs_t %&gt;% filter(q == 5) # Check imbalance map_dfr(covs2, check_blc, df = sub1_t) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 3.55 0.06 1 Pearson&#39;s Chi-squared test ## 2 educ 3.05 0.22 2 Pearson&#39;s Chi-squared test ## 3 pov 2.80 0.59 4 Pearson&#39;s Chi-squared test ## 4 employ 0.697 0.4 1 Pearson&#39;s Chi-squared test ## 5 open 1.28 0.26 1 Pearson&#39;s Chi-squared test ## 6 race 1.50 0.68 3 Pearson&#39;s Chi-squared test ## 7 chdage 11.6 0.01 3 Pearson&#39;s Chi-squared test ## 8 cgage 0.346 0.95 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.158 0.69 1 Pearson&#39;s Chi-squared test ## 10 mental 0.119 0.73 1 Pearson&#39;s Chi-squared test ## 11 arrest 0.0235 0.88 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 1.14 0.29 1 Pearson&#39;s Chi-squared test ## 13 maltx 1.52 0.82 4 Pearson&#39;s Chi-squared test ## 14 ra 0.146 0.7 1 Pearson&#39;s Chi-squared test ## 15 cidi 0.00627 0.94 1 Pearson&#39;s Chi-squared test ## 16 cgneed 0.810 0.37 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub2_t) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 1.15 0.28 1 Pearson&#39;s Chi-squared test ## 2 educ 3.50 0.17 2 Pearson&#39;s Chi-squared test ## 3 pov 1.45 0.84 4 Pearson&#39;s Chi-squared test ## 4 employ 0.882 0.35 1 Pearson&#39;s Chi-squared test ## 5 open 2.79 0.1 1 Pearson&#39;s Chi-squared test ## 6 race 0.320 0.96 3 Pearson&#39;s Chi-squared test ## 7 chdage 1.45 0.69 3 Pearson&#39;s Chi-squared test ## 8 cgage 5.59 0.13 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.00630 0.94 1 Pearson&#39;s Chi-squared test ## 10 mental 0.276 0.6 1 Pearson&#39;s Chi-squared test ## 11 arrest 3.07 0.08 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 0.903 0.34 1 Pearson&#39;s Chi-squared test ## 13 maltx 3.60 0.46 4 Pearson&#39;s Chi-squared test ## 14 ra 0.0639 0.8 1 Pearson&#39;s Chi-squared test ## 15 cidi 0.563 0.45 1 Pearson&#39;s Chi-squared test ## 16 cgneed 0.00555 0.94 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub3_t) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 0.0707 0.79 1 Pearson&#39;s Chi-squared test ## 2 educ 5.38 0.07 2 Pearson&#39;s Chi-squared test ## 3 pov 14.5 0.01 4 Pearson&#39;s Chi-squared test ## 4 employ 1.15 0.28 1 Pearson&#39;s Chi-squared test ## 5 open 0.0195 0.89 1 Pearson&#39;s Chi-squared test ## 6 race 1.05 0.79 3 Pearson&#39;s Chi-squared test ## 7 chdage 1.11 0.77 3 Pearson&#39;s Chi-squared test ## 8 cgage 0.0411 1 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.00458 0.95 1 Pearson&#39;s Chi-squared test ## 10 mental 1.37 0.24 1 Pearson&#39;s Chi-squared test ## 11 arrest 3.34 0.07 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 0.0215 0.88 1 Pearson&#39;s Chi-squared test ## 13 maltx 2.30 0.68 4 Pearson&#39;s Chi-squared test ## 14 ra 1.30 0.25 1 Pearson&#39;s Chi-squared test ## 15 cidi 1.02 0.31 1 Pearson&#39;s Chi-squared test ## 16 cgneed 0.103 0.75 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub4_t) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 0.381 0.54 1 Pearson&#39;s Chi-squared test ## 2 educ 4.39 0.11 2 Pearson&#39;s Chi-squared test ## 3 pov 6.41 0.17 4 Pearson&#39;s Chi-squared test ## 4 employ 0.475 0.49 1 Pearson&#39;s Chi-squared test ## 5 open 0.136 0.71 1 Pearson&#39;s Chi-squared test ## 6 race 0.471 0.93 3 Pearson&#39;s Chi-squared test ## 7 chdage 0.640 0.89 3 Pearson&#39;s Chi-squared test ## 8 cgage 0.196 0.98 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 1.84 0.18 1 Pearson&#39;s Chi-squared test ## 10 mental 2.93 0.09 1 Pearson&#39;s Chi-squared test ## 11 arrest 0.147 0.7 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 0.134 0.71 1 Pearson&#39;s Chi-squared test ## 13 maltx 1.60 0.81 4 Pearson&#39;s Chi-squared test ## 14 ra 1.00 0.32 1 Pearson&#39;s Chi-squared test ## 15 cidi 0.0107 0.92 1 Pearson&#39;s Chi-squared test ## 16 cgneed 3.79 0.05 1 Pearson&#39;s Chi-squared test map_dfr(covs2, check_blc, df = sub5_t) ## # A tibble: 16 x 5 ## cov statistic p.value parameter method ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;chr&gt; ## 1 married 0.766 0.38 1 Pearson&#39;s Chi-squared test ## 2 educ 3.03 0.22 2 Pearson&#39;s Chi-squared test ## 3 pov 1.35 0.85 4 Pearson&#39;s Chi-squared test ## 4 employ 0.335 0.56 1 Pearson&#39;s Chi-squared test ## 5 open 0.105 0.75 1 Pearson&#39;s Chi-squared test ## 6 race 3.13 0.37 3 Pearson&#39;s Chi-squared test ## 7 chdage 1.70 0.64 3 Pearson&#39;s Chi-squared test ## 8 cgage 1.02 0.8 3 Pearson&#39;s Chi-squared test ## 9 CRA47A 0.698 0.4 1 Pearson&#39;s Chi-squared test ## 10 mental 0.108 0.74 1 Pearson&#39;s Chi-squared test ## 11 arrest 1.15 0.28 1 Pearson&#39;s Chi-squared test ## 12 PSH17A 0.332 0.56 1 Pearson&#39;s Chi-squared test ## 13 maltx 5.93 0.2 4 Pearson&#39;s Chi-squared test ## 14 ra 0.116 0.73 1 Pearson&#39;s Chi-squared test ## 15 cidi 4.26 0.04 1 Pearson&#39;s Chi-squared test ## 16 cgneed 2.54 0.11 1 Pearson&#39;s Chi-squared test 9.13 Outcome Analysis by Subclass f2 &lt;- as.formula(&quot;Surv(durm, rrpt) ~ aodserv + married + high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + employ + open + black + hispanic + natam + chdage1 + chdage2 + chdage3 + CRA47A&quot;) tidy(survival::coxph(f2, sub1_t)) ## # A tibble: 17 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 aodserv 1.28 0.523 2.45 0.0143 ## 2 married 0.0453 0.435 0.104 0.917 ## 3 high -0.223 0.450 -0.496 0.620 ## 4 bahigh -0.580 0.572 -1.01 0.310 ## 5 poverty2 -0.245 0.488 -0.503 0.615 ## 6 poverty3 0.748 0.535 1.40 0.162 ## 7 poverty4 0.306 0.669 0.456 0.648 ## 8 poverty5 -1.15 1.11 -1.03 0.301 ## 9 employ 0.0966 0.414 0.233 0.816 ## 10 open 0.339 0.520 0.652 0.515 ## 11 black 0.428 0.465 0.921 0.357 ## 12 hispanic 0.441 0.606 0.728 0.467 ## 13 natam 0.372 0.625 0.595 0.552 ## 14 chdage1 -1.40 0.551 -2.55 0.0109 ## 15 chdage2 -1.19 0.763 -1.56 0.119 ## 16 chdage3 -0.924 0.555 -1.67 0.0955 ## 17 CRA47A 0.665 0.427 1.56 0.119 tidy(survival::coxph(f2, sub2_t)) ## # A tibble: 17 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 aodserv 0.0990 0.443 0.224 0.823 ## 2 married -0.0473 0.403 -0.117 0.906 ## 3 high 0.392 0.385 1.02 0.309 ## 4 bahigh 0.489 0.500 0.979 0.328 ## 5 poverty2 0.369 0.417 0.884 0.377 ## 6 poverty3 -2.09 1.08 -1.92 0.0544 ## 7 poverty4 0.0632 0.580 0.109 0.913 ## 8 poverty5 -1.25 1.10 -1.14 0.256 ## 9 employ 0.251 0.358 0.701 0.483 ## 10 open -0.345 0.379 -0.910 0.363 ## 11 black -0.123 0.496 -0.247 0.805 ## 12 hispanic 0.307 0.456 0.672 0.501 ## 13 natam 0.390 0.586 0.666 0.505 ## 14 chdage1 -0.162 0.472 -0.343 0.732 ## 15 chdage2 -0.544 0.657 -0.827 0.408 ## 16 chdage3 0.342 0.555 0.616 0.538 ## 17 CRA47A 0.00356 0.335 0.0106 0.992 tidy(survival::coxph(f2, sub3_t)) ## # A tibble: 17 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 aodserv -0.168 0.449 -0.375 0.708 ## 2 married -0.800 0.561 -1.43 0.154 ## 3 high -0.0488 0.452 -0.108 0.914 ## 4 bahigh -0.188 0.570 -0.329 0.742 ## 5 poverty2 0.0219 0.486 0.0451 0.964 ## 6 poverty3 -0.309 0.692 -0.447 0.655 ## 7 poverty4 -0.281 0.844 -0.332 0.740 ## 8 poverty5 -0.586 0.702 -0.836 0.403 ## 9 employ -0.341 0.443 -0.772 0.440 ## 10 open 0.259 0.440 0.589 0.556 ## 11 black -0.500 0.460 -1.09 0.277 ## 12 hispanic -1.24 0.679 -1.82 0.0687 ## 13 natam -0.118 0.735 -0.160 0.873 ## 14 chdage1 -0.0163 0.504 -0.0324 0.974 ## 15 chdage2 0.554 0.716 0.774 0.439 ## 16 chdage3 -0.486 0.700 -0.694 0.488 ## 17 CRA47A 0.664 0.382 1.74 0.0820 tidy(survival::coxph(f2, sub4_t)) ## # A tibble: 17 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 aodserv 0.245 0.377 0.649 0.516 ## 2 married 0.694 0.428 1.62 0.105 ## 3 high 0.512 0.426 1.20 0.230 ## 4 bahigh -0.323 0.711 -0.454 0.650 ## 5 poverty2 0.315 0.478 0.658 0.510 ## 6 poverty3 -0.132 0.672 -0.196 0.844 ## 7 poverty4 0.350 0.928 0.377 0.706 ## 8 poverty5 -0.988 0.855 -1.16 0.248 ## 9 employ -0.301 0.393 -0.767 0.443 ## 10 open 0.361 0.484 0.746 0.456 ## 11 black -0.0424 0.457 -0.0927 0.926 ## 12 hispanic 0.0690 0.664 0.104 0.917 ## 13 natam -1.66 1.07 -1.56 0.119 ## 14 chdage1 -0.644 0.520 -1.24 0.216 ## 15 chdage2 0.318 0.602 0.528 0.598 ## 16 chdage3 -0.406 0.568 -0.715 0.474 ## 17 CRA47A 0.569 0.402 1.42 0.157 tidy(survival::coxph(f2, sub5_t)) ## # A tibble: 17 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 aodserv 0.419 0.403 1.04 0.298 ## 2 married 0.116 0.449 0.258 0.796 ## 3 high -0.696 0.425 -1.64 0.101 ## 4 bahigh -1.13 0.649 -1.74 0.0824 ## 5 poverty2 0.910 0.402 2.27 0.0235 ## 6 poverty3 -1.18 1.09 -1.09 0.276 ## 7 poverty4 -0.609 0.818 -0.744 0.457 ## 8 poverty5 0.0969 0.642 0.151 0.880 ## 9 employ 0.127 0.405 0.313 0.755 ## 10 open 0.492 0.638 0.772 0.440 ## 11 black -1.07 0.466 -2.29 0.0220 ## 12 hispanic -0.526 0.514 -1.02 0.306 ## 13 natam -0.107 0.544 -0.197 0.844 ## 14 chdage1 -0.407 0.665 -0.613 0.540 ## 15 chdage2 0.872 0.694 1.26 0.209 ## 16 chdage3 0.491 0.729 0.674 0.500 ## 17 CRA47A 0.0749 0.359 0.209 0.835 9.14 Aggregate Results exp(0.37513328) ## [1] 1.455185 (1-pnorm(1.899353989))*2 # p = .05751795 ## [1] 0.05751795 tidy(survival::coxph(f2, df)) ## # A tibble: 17 x 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 aodserv 0.436 0.123 3.54 0.000404 ## 2 married -0.200 0.105 -1.90 0.0570 ## 3 high -0.217 0.100 -2.16 0.0305 ## 4 bahigh -0.0187 0.125 -0.149 0.881 ## 5 poverty2 -0.112 0.110 -1.02 0.308 ## 6 poverty3 -0.331 0.143 -2.32 0.0203 ## 7 poverty4 -0.453 0.174 -2.60 0.00922 ## 8 poverty5 -0.649 0.183 -3.55 0.000391 ## 9 employ -0.0660 0.0948 -0.696 0.487 ## 10 open 0.201 0.0940 2.13 0.0329 ## 11 black -0.248 0.109 -2.27 0.0231 ## 12 hispanic -0.233 0.132 -1.77 0.0761 ## 13 natam -0.0536 0.193 -0.279 0.781 ## 14 chdage1 -0.352 0.125 -2.82 0.00473 ## 15 chdage2 0.0579 0.137 0.422 0.673 ## 16 chdage3 -0.104 0.123 -0.847 0.397 ## 17 CRA47A 0.526 0.0921 5.71 0.0000000113 9.15 Subclassification with MatchIt mm &lt;- MatchIt::matchit(f, df, method = &quot;subclass&quot;, subclass = 5) love.plot(mm, binary = &quot;std&quot;, disp.subclass = T) bal.tab(mm, un = T, binary = &quot;std&quot;, disp.subclass = T) ## Call ## MatchIt::matchit(formula = f, data = df, method = &quot;subclass&quot;, ## subclass = 5) ## ## Balance by subclass ## - - - Subclass 1 - - - ## Type Diff.Adj ## distance Distance 0.1004 ## married Binary 0.0019 ## high Binary -0.1296 ## bahigh Binary 0.1385 ## poverty2 Binary -0.1337 ## poverty3 Binary 0.0069 ## poverty4 Binary -0.0942 ## poverty5 Binary 0.0016 ## employ Binary -0.1496 ## open Binary 0.2167 ## black Binary -0.0522 ## hispanic Binary -0.1573 ## natam Binary 0.1054 ## chdage1 Binary 0.2348 ## chdage2 Binary -0.0648 ## chdage3 Binary -0.1786 ## cgrage1 Binary -0.1987 ## cgrage2 Binary 0.1653 ## cgrage3 Binary -0.0007 ## CRA47A Binary 0.1883 ## mental Binary 0.2233 ## arrest Binary 0.5853 ## PSH17A Binary 0.2839 ## sexual Binary -0.1967 ## provide Binary 0.1416 ## supervis Binary 0.1216 ## other Binary -0.0225 ## ra Binary 0.0114 ## cidi Binary 0.2453 ## cgneed Binary 0.2427 ## ## - - - Subclass 2 - - - ## Type Diff.Adj ## distance Distance 0.1188 ## married Binary -0.2288 ## high Binary 0.0708 ## bahigh Binary -0.2186 ## poverty2 Binary 0.1363 ## poverty3 Binary -0.0619 ## poverty4 Binary 0.0678 ## poverty5 Binary -0.1715 ## employ Binary -0.2305 ## open Binary 0.1832 ## black Binary 0.2759 ## hispanic Binary 0.0786 ## natam Binary -0.1183 ## chdage1 Binary 0.0229 ## chdage2 Binary -0.0415 ## chdage3 Binary 0.0015 ## cgrage1 Binary 0.2587 ## cgrage2 Binary -0.3458 ## cgrage3 Binary 0.0723 ## CRA47A Binary -0.0331 ## mental Binary -0.1763 ## arrest Binary -0.1005 ## PSH17A Binary 0.0598 ## sexual Binary -0.0758 ## provide Binary -0.0004 ## supervis Binary 0.0833 ## other Binary -0.2021 ## ra Binary 0.3748 ## cidi Binary -0.0102 ## cgneed Binary -0.0775 ## ## - - - Subclass 3 - - - ## Type Diff.Adj ## distance Distance 0.0517 ## married Binary 0.0807 ## high Binary 0.3018 ## bahigh Binary -0.1770 ## poverty2 Binary -0.0041 ## poverty3 Binary -0.1898 ## poverty4 Binary 0.2086 ## poverty5 Binary 0.2580 ## employ Binary 0.1896 ## open Binary -0.0839 ## black Binary -0.0586 ## hispanic Binary 0.0110 ## natam Binary -0.0113 ## chdage1 Binary 0.1550 ## chdage2 Binary 0.0819 ## chdage3 Binary -0.1957 ## cgrage1 Binary -0.1763 ## cgrage2 Binary 0.1605 ## cgrage3 Binary 0.1128 ## CRA47A Binary -0.2136 ## mental Binary 0.1753 ## arrest Binary -0.1023 ## PSH17A Binary 0.0243 ## sexual Binary 0.0510 ## provide Binary -0.0124 ## supervis Binary 0.0325 ## other Binary 0.0121 ## ra Binary 0.0944 ## cidi Binary -0.1646 ## cgneed Binary -0.1342 ## ## - - - Subclass 4 - - - ## Type Diff.Adj ## distance Distance 0.0773 ## married Binary 0.1316 ## high Binary -0.2141 ## bahigh Binary 0.1601 ## poverty2 Binary -0.2027 ## poverty3 Binary 0.2446 ## poverty4 Binary -0.2026 ## poverty5 Binary 0.2254 ## employ Binary -0.0780 ## open Binary -0.0974 ## black Binary -0.2136 ## hispanic Binary -0.0038 ## natam Binary 0.2969 ## chdage1 Binary -0.1638 ## chdage2 Binary -0.0279 ## chdage3 Binary 0.3581 ## cgrage1 Binary 0.1318 ## cgrage2 Binary 0.1132 ## cgrage3 Binary -0.3836 ## CRA47A Binary -0.0432 ## mental Binary 0.0070 ## arrest Binary -0.1881 ## PSH17A Binary -0.1891 ## sexual Binary 0.0000 ## provide Binary -0.1871 ## supervis Binary -0.2469 ## other Binary 0.2729 ## ra Binary 0.0185 ## cidi Binary 0.4220 ## cgneed Binary 0.2198 ## ## - - - Subclass 5 - - - ## Type Diff.Adj ## distance Distance 0.1617 ## married Binary -0.0115 ## high Binary -0.3409 ## bahigh Binary 0.0120 ## poverty2 Binary 0.3926 ## poverty3 Binary -0.1355 ## poverty4 Binary -0.2126 ## poverty5 Binary -0.3593 ## employ Binary 0.1860 ## open Binary 0.0958 ## black Binary -0.0931 ## hispanic Binary 0.2813 ## natam Binary -0.1636 ## chdage1 Binary 0.0566 ## chdage2 Binary 0.0220 ## chdage3 Binary -0.1238 ## cgrage1 Binary -0.0767 ## cgrage2 Binary 0.0593 ## cgrage3 Binary 0.1251 ## CRA47A Binary 0.2930 ## mental Binary 0.3001 ## arrest Binary 0.0676 ## PSH17A Binary -0.1499 ## sexual Binary -0.1802 ## provide Binary 0.1060 ## supervis Binary -0.1284 ## other Binary 0.1314 ## ra Binary -0.0723 ## cidi Binary 0.1358 ## cgneed Binary 0.1843 "],["09_Section7.3.1.html", "10 Section 7.3.1 Propensity Score Weighting (SD &amp; PS) 10.1 Preparation 10.2 Solution 1: Obtain Weights with WeightIt 10.3 Solution 2: Creating the Weights Manually 10.4 Imbalance Checks", " 10 Section 7.3.1 Propensity Score Weighting (SD &amp; PS) 10.1 Preparation library(WeightIt) library(broom) library(cobalt) library(sandwich) library(stargazer) library(tidyverse) library(lmtest) # Load data d &lt;- haven::read_dta(&quot;data/Data_Chapter7/chpt5_2_original.dta&quot;) 10.2 Solution 1: Obtain Weights with WeightIt 10.2.1 Weights # ATE weight w1.out &lt;- WeightIt::weightit(kuse ~ male + black + age97 + pcged97 + mratio96, data = d, ps = d$ps, estimand = &quot;ATE&quot;) summary(w1.out) ## Summary of weights ## ## - Weight ranges: ## ## Min Max ## treated 2.1527 |--------------------| 5.2118 ## control 1.2307 |--| 1.7745 ## ## - Units with 5 greatest weights by group: ## ## 987 348 13 349 665 ## treated 5.1817 5.1898 5.1898 5.1986 5.2118 ## 730 795 329 999 997 ## control 1.6099 1.6114 1.6125 1.76 1.7745 ## ## - Weight statistics: ## ## Coef of Var MAD Entropy # Zeros ## treated 0.252 0.204 0.029 0 ## control 0.070 0.050 0.002 0 ## ## - Effective Sample Sizes: ## ## Control Treated ## Unweighted 729. 274. ## Weighted 725.43 257.71 # ATT weight w2.out &lt;- WeightIt::weightit(kuse ~ male + black + age97 + pcged97 + mratio96, data = d, ps = d$ps, estimand = &quot;ATT&quot;) summary(w2.out) ## Summary of weights ## ## - Weight ranges: ## ## Min Max ## treated 1.0000 || 1.0000 ## control 0.2307 |------------------| 0.7745 ## ## - Units with 5 greatest weights by group: ## ## 27 19 7 2 1 ## treated 1 1 1 1 1 ## 730 795 329 999 997 ## control 0.6099 0.6114 0.6125 0.76 0.7745 ## ## - Weight statistics: ## ## Coef of Var MAD Entropy # Zeros ## treated 0.000 0.000 -0.000 0 ## control 0.314 0.223 0.042 0 ## ## - Effective Sample Sizes: ## ## Control Treated ## Unweighted 729. 274 ## Weighted 663.65 274 Visual balance checks may be carried out with: cobalt::bal.tab(w1.out, m.threshold = .05, disp.v.ratio = TRUE) cobalt::bal.tab(w2.out, m.threshold = .05, disp.v.ratio = TRUE) 10.2.2 PSW With ATE Weights m1 &lt;- lm(lwss97~ kuse + male + black + age97 + pcged97 + mratio96, data = d, weights = w1.out$weights) lmtest::coeftest(m1, vcov. = vcovCL(m1, cluster = d$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 84.19992 4.83032 17.4315 &lt; 0.00000000000000022 *** ## kuse -5.16399 1.42438 -3.6254 0.0003031 *** ## male -1.62201 1.09186 -1.4855 0.1377180 ## black -2.49898 1.34670 -1.8556 0.0638009 . ## age97 0.73868 0.18075 4.0867 0.00004727 *** ## pcged97 0.99264 0.35596 2.7886 0.0053938 ** ## mratio96 1.13856 0.32220 3.5337 0.0004286 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 10.2.3 PSW With ATT Weights m2 &lt;- lm(lwss97~ kuse + male + black + age97 + pcged97 + mratio96, data = d, weights = w2.out$weights) lmtest::coeftest(m2, vcov. = vcovCL(m2, cluster = d$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 85.29467 5.05331 16.8790 &lt; 0.00000000000000022 *** ## kuse -4.62058 1.41182 -3.2728 0.001102 ** ## male -1.58995 1.14705 -1.3861 0.166020 ## black -2.74605 1.41605 -1.9392 0.052756 . ## age97 0.61577 0.20001 3.0787 0.002136 ** ## pcged97 0.92698 0.36718 2.5246 0.011738 * ## mratio96 1.26018 0.33556 3.7555 0.000183 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 10.3 Solution 2: Creating the Weights Manually 10.3.1 Weights d.weights &lt;- d %&gt;% mutate(ate_w = ifelse(kuse == 0, 1/(1-ps), 1/ps), att_w = ifelse(kuse == 0, ps/(1-ps), 1)) 10.3.2 PSW With ATE Weights # psw with ate_w weights m3 &lt;- lm(lwss97~ kuse + male + black + age97 + pcged97 + mratio96, data = d.weights, weights = ate_w) lmtest::coeftest(m3, vcov. = vcovCL(m3, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 84.19992 4.83032 17.4315 &lt; 0.00000000000000022 *** ## kuse -5.16399 1.42438 -3.6254 0.0003031 *** ## male -1.62201 1.09186 -1.4855 0.1377180 ## black -2.49898 1.34670 -1.8556 0.0638009 . ## age97 0.73868 0.18075 4.0867 0.00004727 *** ## pcged97 0.99264 0.35596 2.7886 0.0053938 ** ## mratio96 1.13856 0.32220 3.5337 0.0004286 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 10.3.3 PSW With ATT Weights m4 &lt;- lm(lwss97~ kuse + male + black + age97 + pcged97 + mratio96, data = d.weights, weights = att_w) lmtest::coeftest(m4, vcov. = vcovCL(m4, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 85.29467 5.05331 16.8790 &lt; 0.00000000000000022 *** ## kuse -4.62058 1.41182 -3.2728 0.001102 ** ## male -1.58995 1.14705 -1.3861 0.166020 ## black -2.74605 1.41605 -1.9392 0.052756 . ## age97 0.61577 0.20001 3.0787 0.002136 ** ## pcged97 0.92698 0.36718 2.5246 0.011738 * ## mratio96 1.26018 0.33556 3.7555 0.000183 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 10.4 Imbalance Checks The balance check used regression for a continuous dependent variable and logistic regression for a dichotomous dependent variable. c1 &lt;- glm(male ~ kuse, family = quasibinomial, data = d.weights, weights = ate_w) lmtest::coeftest(c1, vcov. = vcovCL(c1, cluster = d.weights$pcg_id)) ## ## z test of coefficients: ## ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.142911 0.075538 1.8919 0.0585 . ## kuse -0.060271 0.150143 -0.4014 0.6881 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c2 &lt;- glm(male ~ kuse, family = quasibinomial, data = d.weights, weights = att_w) lmtest::coeftest(c2, vcov. = vcovCL(c2, cluster = d.weights$pcg_id)) ## ## z test of coefficients: ## ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.152522 0.077410 1.9703 0.0488 * ## kuse -0.079497 0.147480 -0.5390 0.5899 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c3 &lt;- glm(black ~ kuse, family = quasibinomial, data = d.weights, weights = ate_w) lmtest::coeftest(c3, vcov. = vcovCL(c3, cluster = d.weights$pcg_id)) ## ## z test of coefficients: ## ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.513851 0.096079 -5.3482 0.0000000888277459 *** ## kuse 1.525001 0.210756 7.2358 0.0000000000004626 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c4 &lt;- glm(black ~ kuse, family = quasibinomial, data = d.weights, weights = att_w) lmtest::coeftest(c4, vcov. = vcovCL(c4, cluster = d.weights$pcg_id)) ## ## z test of coefficients: ## ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.33705 0.10054 -3.3525 0.000801 *** ## kuse 1.60868 0.21141 7.6093 0.00000000000002757 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c5 &lt;- lm(age97 ~ kuse, weights = ate_w, data = d.weights) lmtest::coeftest(c5, vcov. = vcovCL(c5, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.51389 0.10900 59.7615 &lt; 0.00000000000000022 *** ## kuse 0.61064 0.21883 2.7905 0.005362 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c6 &lt;- lm(age97 ~ kuse, weights = att_w, data = d.weights) lmtest::coeftest(c6, vcov. = vcovCL(c6, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.55501 0.11499 57.0057 &lt; 0.0000000000000002 *** ## kuse 0.56178 0.21939 2.5606 0.01059 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c7 &lt;- lm(pcged97 ~ kuse, weights = ate_w, data = d.weights) lmtest::coeftest(c7, vcov. = vcovCL(c7, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 13.107420 0.087963 149.0104 &lt; 0.00000000000000022 *** ## kuse -1.420987 0.149132 -9.5284 &lt; 0.00000000000000022 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c8 &lt;- lm(pcged97 ~ kuse, weights = att_w, data = d.weights) lmtest::coeftest(c8, vcov. = vcovCL(c8, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 12.932483 0.092094 140.4275 &lt; 0.00000000000000022 *** ## kuse -1.337592 0.148330 -9.0177 &lt; 0.00000000000000022 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c9 &lt;- lm(mratio96 ~ kuse, weights = ate_w, data = d.weights) lmtest::coeftest(c9, vcov. = vcovCL(c9, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.07912 0.12013 25.632 &lt; 0.00000000000000022 *** ## kuse -1.82436 0.15263 -11.953 &lt; 0.00000000000000022 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 c10 &lt;- lm(mratio96 ~ kuse, weights = att_w, data = d.weights) lmtest::coeftest(c10, vcov. = vcovCL(c10, cluster = d.weights$pcg_id)) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 2.78711 0.11387 24.476 &lt; 0.00000000000000022 *** ## kuse -1.73598 0.13410 -12.945 &lt; 0.00000000000000022 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 "],["10_Section7.3.2.html", "11 Section 7.3.2 Propensity Score Weighting With a Cox Proportional Hazards Model (SD &amp; PS) 11.1 Preparation 11.2 Propensity Score Weighting 11.3 Cox Proportional Hazards Model 11.4 Checking Imbalance", " 11 Section 7.3.2 Propensity Score Weighting With a Cox Proportional Hazards Model (SD &amp; PS) 11.1 Preparation library(WeightIt) library(broom) library(cobalt) library(survival) library(lmtest) library(sandwich) library(stargazer) library(tidyverse) library(knitr) library(kableExtra) # load data d &lt;- haven::read_dta(&quot;data/Data_Chapter7/survival.dta&quot;) # make convenient objects match_vars &lt;- colnames(select(d, PSH17A:cgneed, -aodserv)) psform &lt;- cobalt::f.build(&quot;aodserv&quot;, match_vars) d &lt;- as.data.frame(d) # cox_vars &lt;- colnames(select(d, aodserv:natam, chdage1:chdage3, CRA47A)) 11.2 Propensity Score Weighting # PSW w_ate.out &lt;- WeightIt::weightit(psform, data = d, method = &quot;ps&quot;, estimand = &quot;ATE&quot;) w_att.out &lt;- WeightIt::weightit(psform, data = d, method = &quot;ps&quot;, estimand = &quot;ATT&quot;) # weights d &lt;- d %&gt;% mutate( ate_w = w_ate.out$weights, att_w = w_att.out$weights ) 11.3 Cox Proportional Hazards Model # Unweighted cox_unweighted &lt;- survival::coxph(Surv(durm, rrpt) ~ aodserv + married + high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + employ + open + black + hispanic + natam + chdage1 + chdage2 + chdage3 + CRA47A, data = d, robust = TRUE, method = &quot;breslow&quot; ) summary(cox_unweighted) ## Call: ## survival::coxph(formula = Surv(durm, rrpt) ~ aodserv + married + ## high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + ## employ + open + black + hispanic + natam + chdage1 + chdage2 + ## chdage3 + CRA47A, data = d, robust = TRUE, method = &quot;breslow&quot;) ## ## n= 2723, number of events= 532 ## ## coef exp(coef) se(coef) robust se z Pr(&gt;|z|) ## aodserv 0.43629 1.54696 0.12338 0.12824 3.402 0.000669 *** ## married -0.19946 0.81917 0.10482 0.10608 -1.880 0.060080 . ## high -0.21677 0.80511 0.10022 0.10032 -2.161 0.030708 * ## bahigh -0.01873 0.98144 0.12541 0.12726 -0.147 0.882978 ## poverty2 -0.11175 0.89426 0.10975 0.11104 -1.006 0.314184 ## poverty3 -0.33078 0.71836 0.14256 0.14337 -2.307 0.021041 * ## poverty4 -0.45270 0.63591 0.17390 0.17568 -2.577 0.009969 ** ## poverty5 -0.64854 0.52281 0.18292 0.18473 -3.511 0.000447 *** ## employ -0.06599 0.93614 0.09482 0.09578 -0.689 0.490847 ## open 0.20058 1.22211 0.09404 0.09488 2.114 0.034511 * ## black -0.24752 0.78074 0.10896 0.10951 -2.260 0.023808 * ## hispanic -0.23345 0.79180 0.13160 0.13096 -1.783 0.074652 . ## natam -0.05366 0.94775 0.19263 0.19391 -0.277 0.781972 ## chdage1 -0.35216 0.70317 0.12470 0.12544 -2.807 0.004995 ** ## chdage2 0.05785 1.05956 0.13712 0.13677 0.423 0.672285 ## chdage3 -0.10431 0.90095 0.12317 0.12317 -0.847 0.397095 ## CRA47A 0.52563 1.69152 0.09207 0.09394 5.595 0.000000022 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## aodserv 1.5470 0.6464 1.2031 1.9890 ## married 0.8192 1.2207 0.6654 1.0085 ## high 0.8051 1.2421 0.6614 0.9801 ## bahigh 0.9814 1.0189 0.7648 1.2595 ## poverty2 0.8943 1.1182 0.7194 1.1117 ## poverty3 0.7184 1.3921 0.5424 0.9514 ## poverty4 0.6359 1.5725 0.4507 0.8973 ## poverty5 0.5228 1.9128 0.3640 0.7509 ## employ 0.9361 1.0682 0.7759 1.1295 ## open 1.2221 0.8183 1.0147 1.4719 ## black 0.7807 1.2808 0.6299 0.9677 ## hispanic 0.7918 1.2630 0.6125 1.0235 ## natam 0.9478 1.0551 0.6481 1.3860 ## chdage1 0.7032 1.4221 0.5499 0.8992 ## chdage2 1.0596 0.9438 0.8104 1.3853 ## chdage3 0.9009 1.1099 0.7077 1.1470 ## CRA47A 1.6915 0.5912 1.4071 2.0335 ## ## Concordance= 0.641 (se = 0.012 ) ## Likelihood ratio test= 128.5 on 17 df, p=&lt;0.0000000000000002 ## Wald test = 133.8 on 17 df, p=&lt;0.0000000000000002 ## Score (logrank) test = 133.6 on 17 df, p=&lt;0.0000000000000002, Robust = 111.4 p=0.0000000000000007 ## ## (Note: the likelihood ratio and score tests assume independence of ## observations within a cluster, the Wald and robust score tests do not). ## To get the same SE as STATA cox_unweighted_sum &lt;- summary(cox_unweighted) cox_unweighted_sum$coefficients[, 4] * cox_unweighted_sum$coefficients[, 2] ## aodserv married high bahigh poverty2 poverty3 poverty4 ## 0.19838411 0.08690146 0.08076877 0.12489367 0.09929461 0.10298916 0.11171394 ## poverty5 employ open black hispanic natam chdage1 ## 0.09657851 0.08966314 0.11595167 0.08549832 0.10369423 0.18377700 0.08820606 ## chdage2 chdage3 CRA47A ## 0.14491398 0.11097396 0.15890750 # ate-weighted cox_ate &lt;- survival::coxph(Surv(durm, rrpt) ~ aodserv + married + high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + employ + open + black + hispanic + natam + chdage1 + chdage2 + chdage3 + CRA47A, data = d, weights = d$ate_w, robust = TRUE, method = &quot;breslow&quot; ) summary(cox_ate) ## Call: ## survival::coxph(formula = Surv(durm, rrpt) ~ aodserv + married + ## high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + ## employ + open + black + hispanic + natam + chdage1 + chdage2 + ## chdage3 + CRA47A, data = d, weights = d$ate_w, robust = TRUE, ## method = &quot;breslow&quot;) ## ## n= 2723, number of events= 532 ## ## coef exp(coef) se(coef) robust se z Pr(&gt;|z|) ## aodserv 0.82002 2.27054 0.05935 0.19125 4.288 0.000018 *** ## married -0.28812 0.74967 0.07306 0.23468 -1.228 0.219563 ## high -0.17885 0.83624 0.07223 0.21053 -0.850 0.395596 ## bahigh 0.16512 1.17954 0.08647 0.23794 0.694 0.487701 ## poverty2 -0.10663 0.89886 0.07123 0.21092 -0.506 0.613188 ## poverty3 -1.07400 0.34164 0.10778 0.29654 -3.622 0.000293 *** ## poverty4 -1.39662 0.24743 0.13092 0.41690 -3.350 0.000808 *** ## poverty5 -1.21359 0.29713 0.12509 0.37780 -3.212 0.001317 ** ## employ 0.44994 1.56822 0.06503 0.19769 2.276 0.022844 * ## open 0.12827 1.13687 0.06137 0.21616 0.593 0.552894 ## black -0.17296 0.84117 0.07031 0.20882 -0.828 0.407520 ## hispanic -0.34897 0.70542 0.10256 0.23825 -1.465 0.143001 ## natam -0.13681 0.87213 0.12556 0.30898 -0.443 0.657909 ## chdage1 -0.79260 0.45267 0.08351 0.34256 -2.314 0.020683 * ## chdage2 -0.08189 0.92138 0.09205 0.38506 -0.213 0.831595 ## chdage3 0.03454 1.03515 0.07875 0.31387 0.110 0.912365 ## CRA47A -0.03167 0.96882 0.06419 0.20188 -0.157 0.875325 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## aodserv 2.2705 0.4404 1.5608 3.3031 ## married 0.7497 1.3339 0.4733 1.1875 ## high 0.8362 1.1958 0.5535 1.2634 ## bahigh 1.1795 0.8478 0.7399 1.8804 ## poverty2 0.8989 1.1125 0.5945 1.3590 ## poverty3 0.3416 2.9271 0.1911 0.6109 ## poverty4 0.2474 4.0415 0.1093 0.5602 ## poverty5 0.2971 3.3655 0.1417 0.6231 ## employ 1.5682 0.6377 1.0645 2.3104 ## open 1.1369 0.8796 0.7442 1.7366 ## black 0.8412 1.1888 0.5586 1.2666 ## hispanic 0.7054 1.4176 0.4422 1.1252 ## natam 0.8721 1.1466 0.4760 1.5980 ## chdage1 0.4527 2.2091 0.2313 0.8859 ## chdage2 0.9214 1.0853 0.4332 1.9598 ## chdage3 1.0351 0.9660 0.5595 1.9150 ## CRA47A 0.9688 1.0322 0.6522 1.4391 ## ## Concordance= 0.689 (se = 0.031 ) ## Likelihood ratio test= 675 on 17 df, p=&lt;0.0000000000000002 ## Wald test = 72.32 on 17 df, p=0.000000009 ## Score (logrank) test = 645 on 17 df, p=&lt;0.0000000000000002, Robust = 33.97 p=0.008 ## ## (Note: the likelihood ratio and score tests assume independence of ## observations within a cluster, the Wald and robust score tests do not). ## To get the same SE as STATA cox_ate_sum &lt;- summary(cox_ate) cox_ate_sum$coefficients[, 4] * cox_ate_sum$coefficients[, 2] ## aodserv married high bahigh poverty2 poverty3 poverty4 poverty5 ## 0.4342308 0.1759354 0.1760497 0.2806583 0.1895879 0.1013106 0.1031550 0.1122553 ## employ open black hispanic natam chdage1 chdage2 chdage3 ## 0.3100188 0.2457423 0.1756552 0.1680654 0.2694677 0.1550674 0.3547854 0.3249059 ## CRA47A ## 0.1955821 # att-weighted cox_att &lt;- survival::coxph(Surv(durm, rrpt) ~ aodserv + married + high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + employ + open + black + hispanic + natam + chdage1 + chdage2 + chdage3 + CRA47A, data = d, weights = d$att_w, robust = TRUE, method = &quot;breslow&quot; ) summary(cox_att) ## Call: ## survival::coxph(formula = Surv(durm, rrpt) ~ aodserv + married + ## high + bahigh + poverty2 + poverty3 + poverty4 + poverty5 + ## employ + open + black + hispanic + natam + chdage1 + chdage2 + ## chdage3 + CRA47A, data = d, weights = d$att_w, robust = TRUE, ## method = &quot;breslow&quot;) ## ## n= 2723, number of events= 532 ## ## coef exp(coef) se(coef) robust se z Pr(&gt;|z|) ## aodserv 0.4024749 1.4955213 0.1654058 0.1885616 2.134 0.03281 * ## married -0.0356362 0.9649913 0.2068842 0.2194889 -0.162 0.87102 ## high -0.0452240 0.9557834 0.1889715 0.2108417 -0.214 0.83016 ## bahigh 0.0273484 1.0277258 0.2637680 0.2499191 0.109 0.91286 ## poverty2 0.0599967 1.0618331 0.1903748 0.2261497 0.265 0.79078 ## poverty3 -0.9944343 0.3699327 0.3468869 0.3296811 -3.016 0.00256 ** ## poverty4 -0.7360582 0.4789983 0.3363917 0.4389999 -1.677 0.09361 . ## poverty5 -0.8467160 0.4288209 0.3491816 0.3742472 -2.262 0.02367 * ## employ 0.0419691 1.0428622 0.1850729 0.1983783 0.212 0.83245 ## open -0.2228788 0.8002118 0.1923686 0.2125882 -1.048 0.29445 ## black -0.3530099 0.7025703 0.2013714 0.2370435 -1.489 0.13643 ## hispanic -0.1302114 0.8779098 0.2717197 0.2681017 -0.486 0.62719 ## natam 0.0008848 1.0008852 0.2941011 0.3749287 0.002 0.99812 ## chdage1 -0.4153232 0.6601269 0.2503525 0.2538362 -1.636 0.10180 ## chdage2 0.2547951 1.2901972 0.2824613 0.2894612 0.880 0.37873 ## chdage3 0.1399171 1.1501785 0.2766948 0.2526171 0.554 0.57967 ## CRA47A 0.3135977 1.3683392 0.1676588 0.1806791 1.736 0.08262 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## aodserv 1.4955 0.6687 1.0334 2.1642 ## married 0.9650 1.0363 0.6276 1.4837 ## high 0.9558 1.0463 0.6323 1.4449 ## bahigh 1.0277 0.9730 0.6297 1.6773 ## poverty2 1.0618 0.9418 0.6816 1.6541 ## poverty3 0.3699 2.7032 0.1939 0.7059 ## poverty4 0.4790 2.0877 0.2026 1.1324 ## poverty5 0.4288 2.3320 0.2059 0.8930 ## employ 1.0429 0.9589 0.7069 1.5385 ## open 0.8002 1.2497 0.5275 1.2138 ## black 0.7026 1.4233 0.4415 1.1181 ## hispanic 0.8779 1.1391 0.5191 1.4848 ## natam 1.0009 0.9991 0.4800 2.0870 ## chdage1 0.6601 1.5149 0.4014 1.0857 ## chdage2 1.2902 0.7751 0.7316 2.2753 ## chdage3 1.1502 0.8694 0.7010 1.8871 ## CRA47A 1.3683 0.7308 0.9603 1.9498 ## ## Concordance= 0.668 (se = 0.027 ) ## Likelihood ratio test= 52.26 on 17 df, p=0.00002 ## Wald test = 48.9 on 17 df, p=0.00006 ## Score (logrank) test = 50.57 on 17 df, p=0.00003, Robust = 39.38 p=0.002 ## ## (Note: the likelihood ratio and score tests assume independence of ## observations within a cluster, the Wald and robust score tests do not). ## To get the same SE as STATA cox_att_sum &lt;- summary(cox_att) cox_att_sum$coefficients[, 4] * cox_att_sum$coefficients[, 2] ## aodserv married high bahigh poverty2 poverty3 poverty4 poverty5 ## 0.2819979 0.2118049 0.2015190 0.2568483 0.2401332 0.1219598 0.2102802 0.1604850 ## employ open black hispanic natam chdage1 chdage2 chdage3 ## 0.2068812 0.1701156 0.1665397 0.2353691 0.3752606 0.1675641 0.3734621 0.2905547 ## CRA47A ## 0.2472303 11.4 Checking Imbalance 11.4.1 Chi-square Tests: Original Sample # Check balance using chi-squared tests check_balance &lt;- function(df) { # List of covariates to check balance covs &lt;- c( &quot;married&quot;, &quot;educ&quot;, &quot;pov&quot;, &quot;employ&quot;, &quot;open&quot;, &quot;race&quot;, &quot;chdage&quot;, &quot;cgage&quot;, &quot;CRA47A&quot;, &quot;mental&quot;, &quot;arrest&quot;, &quot;PSH17A&quot;, &quot;maltx&quot;, &quot;ra&quot;, &quot;cidi&quot;, &quot;cgneed&quot; ) # Function to calculate chisq.test p-values calc &lt;- function(cov) { return(data.frame( covariate = cov, p = chisq.test(df[cov], df$aodserv)$p.value )) } # Calculate chisq.test for each covariate results &lt;- map_dfr(covs, calc) %&gt;% mutate(sig = ifelse(p &lt; 0.05, &quot;sig&quot;, &quot;not sig&quot;)) %&gt;% mutate(p = round(p, 2)) # Get covariates that did not overlap sufficiently (p &lt; .05) results_sig &lt;- results %&gt;% filter(sig == &quot;sig&quot;) # Return results return(list(table = results, sig = toupper(results_sig$covariate))) } check_balance(d) ## $table ## covariate p sig ## 1 married 0.07 not sig ## 2 educ 0.01 sig ## 3 pov 0.02 sig ## 4 employ 0.00 sig ## 5 open 0.00 sig ## 6 race 0.01 sig ## 7 chdage 0.00 sig ## 8 cgage 0.26 not sig ## 9 CRA47A 0.00 sig ## 10 mental 0.00 sig ## 11 arrest 0.00 sig ## 12 PSH17A 0.00 sig ## 13 maltx 0.00 sig ## 14 ra 0.00 sig ## 15 cidi 0.00 sig ## 16 cgneed 0.00 sig ## ## $sig ## [1] &quot;EDUC&quot; &quot;POV&quot; &quot;EMPLOY&quot; &quot;OPEN&quot; &quot;RACE&quot; &quot;CHDAGE&quot; &quot;CRA47A&quot; &quot;MENTAL&quot; ## [9] &quot;ARREST&quot; &quot;PSH17A&quot; &quot;MALTX&quot; &quot;RA&quot; &quot;CIDI&quot; &quot;CGNEED&quot; 11.4.2 Weighted Logistic Regression Note that a custom function by Jorge Cimentada is used to replicate the robust standard errors in Stata.3 robustse &lt;- function(x, coef = c(&quot;logit&quot;, &quot;odd.ratio&quot;, &quot;probs&quot;)) { suppressMessages(suppressWarnings(library(lmtest))) suppressMessages(suppressWarnings(library(sandwich))) sandwich1 &lt;- function(object, ...) { sandwich(object) * nobs(object) / (nobs(object) - 1) } # Function calculates SE&#39;s mod1 &lt;- coeftest(x, vcov = sandwich1) # apply the function over the variance-covariance matrix if (coef == &quot;logit&quot;) { return(mod1) # return logit with robust SE&#39;s } else if (coef == &quot;odd.ratio&quot;) { mod1[, 1] &lt;- exp(mod1[, 1]) # return odd ratios with robust SE&#39;s mod1[, 2] &lt;- mod1[, 1] * mod1[, 2] return(mod1) } else { mod1[, 1] &lt;- (mod1[, 1] / 4) # return probabilites with robust SE&#39;s mod1[, 2] &lt;- mod1[, 2] / 4 return(mod1) } } # Variables to check balance w_vars &lt;- c( &quot;married&quot;, &quot;high&quot;, &quot;bahigh&quot;, &quot;poverty2&quot;, &quot;poverty3&quot;, &quot;poverty4&quot;, &quot;poverty5&quot;, &quot;employ&quot;, &quot;open&quot;, &quot;black&quot;, &quot;hispanic&quot;, &quot;natam&quot;, &quot;chdage1&quot;, &quot;chdage2&quot;, &quot;chdage3&quot;, &quot;cgrage1&quot;, &quot;cgrage2&quot;, &quot;cgrage3&quot;, &quot;CRA47A&quot;, &quot;mental&quot;, &quot;arrest&quot;, &quot;PSH17A&quot;, &quot;sexual&quot;, &quot;provide&quot;, &quot;supervis&quot;, &quot;other&quot;, &quot;ra&quot;, &quot;cidi&quot;, &quot;cgneed&quot; ) # Function to check balance with weighted logistic regression w_check_bal &lt;- function(var, weight) { m &lt;- glm(as.formula(paste0(var, &quot;~aodserv&quot;)), family = binomial, data = d, weights = weight ) m2 &lt;- m %&gt;% tidy() %&gt;% mutate(odds.ratio = exp(estimate), variable = var) %&gt;% mutate(or.se = robustse(m, coef = &quot;odd.ratio&quot;)[,2]) %&gt;% mutate(statistic = robustse(m, coef = &quot;odd.ratio&quot;)[,3]) %&gt;% mutate(p.value = robustse(m, coef = &quot;odd.ratio&quot;)[,4]) %&gt;% select(variable, term, odds.ratio, or.se, statistic, p.value) return(m2) } # Function to print balance check results w_print_bal &lt;- function(df) { kable(df, digits = 4) %&gt;% kable_material(c(&quot;striped&quot;)) %&gt;% kable_styling(position = &quot;center&quot;) %&gt;% collapse_rows(columns = 1, valign = &quot;top&quot;) } # Balance with ATE weights w_print_bal(map_dfr(w_vars, w_check_bal, d$ate_w)) variable term odds.ratio or.se statistic p.value married (Intercept) 0.4237 0.0200 -18.2192 0.0000 aodserv 0.8222 0.1985 -0.8109 0.4174 high (Intercept) 0.8255 0.0382 -4.1392 0.0000 aodserv 1.1253 0.2581 0.5148 0.6067 bahigh (Intercept) 0.2747 0.0141 -25.1814 0.0000 aodserv 0.8527 0.2203 -0.6167 0.5374 poverty2 (Intercept) 0.4746 0.0227 -15.6143 0.0000 aodserv 1.0763 0.2707 0.2925 0.7699 poverty3 (Intercept) 0.2249 0.0127 -26.3809 0.0000 aodserv 0.8695 0.2760 -0.4405 0.6596 poverty4 (Intercept) 0.1464 0.0123 -22.8887 0.0000 aodserv 0.8950 0.3167 -0.3136 0.7538 poverty5 (Intercept) 0.1656 0.0102 -29.1123 0.0000 aodserv 0.7594 0.2254 -0.9269 0.3540 employ (Intercept) 0.9125 0.0412 -2.0271 0.0427 aodserv 0.8154 0.1890 -0.8802 0.3788 open (Intercept) 1.2934 0.0578 5.7591 0.0000 aodserv 1.1913 0.2894 0.7205 0.4712 black (Intercept) 0.3419 0.0176 -20.8466 0.0000 aodserv 0.8937 0.2080 -0.4830 0.6291 hispanic (Intercept) 0.1681 0.0105 -28.5568 0.0000 aodserv 0.6981 0.2780 -0.9026 0.3667 natam (Intercept) 0.0555 0.0059 -27.1168 0.0000 aodserv 1.3532 0.5599 0.7310 0.4648 chdage1 (Intercept) 0.5313 0.0273 -12.2990 0.0000 aodserv 1.2480 0.2756 1.0036 0.3156 chdage2 (Intercept) 0.1952 0.0116 -27.4494 0.0000 aodserv 1.1594 0.3906 0.4390 0.6607 chdage3 (Intercept) 0.4049 0.0191 -19.2162 0.0000 aodserv 0.6730 0.1767 -1.5087 0.1314 cgrage1 (Intercept) 2.1954 0.1145 15.0721 0.0000 aodserv 0.8588 0.2105 -0.6210 0.5346 cgrage2 (Intercept) 0.3169 0.0187 -19.4739 0.0000 aodserv 1.1526 0.3199 0.5118 0.6088 cgrage3 (Intercept) 0.0595 0.0055 -30.3524 0.0000 aodserv 0.8678 0.3082 -0.3993 0.6896 CRA47A (Intercept) 0.4539 0.0240 -14.9226 0.0000 aodserv 1.1874 0.2711 0.7523 0.4518 mental (Intercept) 0.3828 0.0223 -16.4789 0.0000 aodserv 1.1610 0.2483 0.6981 0.4851 arrest (Intercept) 0.5235 0.0274 -12.3844 0.0000 aodserv 1.7415 0.3936 2.4543 0.0141 PSH17A (Intercept) 0.1341 0.0143 -18.8305 0.0000 aodserv 1.6657 0.4110 2.0677 0.0387 sexual (Intercept) 0.1474 0.0089 -31.7014 0.0000 aodserv 0.8758 0.3922 -0.2962 0.7671 provide (Intercept) 0.2737 0.0150 -23.5964 0.0000 aodserv 1.2687 0.2932 1.0296 0.3032 supervis (Intercept) 0.4002 0.0219 -16.7556 0.0000 aodserv 0.9686 0.2270 -0.1359 0.8919 other (Intercept) 0.1438 0.0091 -30.5254 0.0000 aodserv 0.9776 0.3112 -0.0711 0.9433 ra (Intercept) 0.2212 0.0182 -18.3644 0.0000 aodserv 1.2561 0.2292 1.2496 0.2114 cidi (Intercept) 0.4189 0.0239 -15.2210 0.0000 aodserv 1.2655 0.2712 1.0990 0.2718 cgneed (Intercept) 0.0568 0.0111 -14.6808 0.0000 aodserv 2.0978 0.7946 1.9558 0.0505 # Balance with ATT weights w_print_bal(map_dfr(w_vars, w_check_bal, d$att_w)) variable term odds.ratio or.se statistic p.value married (Intercept) 0.2772 0.0446 -7.9726 0.0000 aodserv 1.2353 0.2585 1.0097 0.3127 high (Intercept) 0.9749 0.1763 -0.1408 0.8880 aodserv 0.7801 0.1683 -1.1508 0.2498 bahigh (Intercept) 0.1665 0.0289 -10.3346 0.0000 aodserv 1.1426 0.2690 0.5662 0.5712 poverty2 (Intercept) 0.4733 0.0821 -4.3120 0.0000 aodserv 1.1565 0.2453 0.6854 0.4931 poverty3 (Intercept) 0.1678 0.0395 -7.5811 0.0000 aodserv 0.9383 0.2725 -0.2192 0.8265 poverty4 (Intercept) 0.1765 0.0741 -4.1306 0.0000 aodserv 0.6200 0.2872 -1.0318 0.3022 poverty5 (Intercept) 0.1412 0.0302 -9.1465 0.0000 aodserv 1.0513 0.2899 0.1814 0.8560 employ (Intercept) 0.4376 0.0658 -5.4953 0.0000 aodserv 1.2696 0.2457 1.2335 0.2174 open (Intercept) 3.7999 0.5636 9.0011 0.0000 aodserv 0.8916 0.1813 -0.5643 0.5726 black (Intercept) 0.4050 0.0718 -5.1014 0.0000 aodserv 0.9878 0.2166 -0.0562 0.9552 hispanic (Intercept) 0.1297 0.0339 -7.8059 0.0000 aodserv 1.1791 0.3692 0.5261 0.5988 natam (Intercept) 0.0938 0.0264 -8.4120 0.0000 aodserv 1.0343 0.3603 0.0967 0.9230 chdage1 (Intercept) 1.3155 0.2230 1.6178 0.1057 aodserv 0.8711 0.1794 -0.6699 0.5029 chdage2 (Intercept) 0.1556 0.0380 -7.6199 0.0000 aodserv 1.0120 0.3012 0.0401 0.9680 chdage3 (Intercept) 0.2114 0.0338 -9.7110 0.0000 aodserv 1.1878 0.2570 0.7953 0.4264 cgrage1 (Intercept) 1.6662 0.3492 2.4365 0.0148 aodserv 1.1468 0.2786 0.5640 0.5727 cgrage2 (Intercept) 0.3994 0.1021 -3.5907 0.0003 aodserv 0.8422 0.2432 -0.5944 0.5522 cgrage3 (Intercept) 0.0641 0.0156 -11.3052 0.0000 aodserv 1.0778 0.3661 0.2207 0.8254 CRA47A (Intercept) 0.7845 0.1504 -1.2660 0.2055 aodserv 0.9042 0.2038 -0.4469 0.6549 mental (Intercept) 1.1318 0.1962 0.7141 0.4752 aodserv 0.9080 0.1897 -0.4621 0.6440 arrest (Intercept) 1.9692 0.3194 4.1782 0.0000 aodserv 0.8619 0.1743 -0.7349 0.4624 PSH17A (Intercept) 0.7078 0.1464 -1.6715 0.0946 aodserv 0.6850 0.1653 -1.5675 0.1170 sexual (Intercept) 0.0478 0.0114 -12.7450 0.0000 aodserv 0.9677 0.3587 -0.0886 0.9294 provide (Intercept) 0.4434 0.0734 -4.9097 0.0000 aodserv 1.1625 0.2399 0.7296 0.4656 supervis (Intercept) 0.5787 0.1239 -2.5540 0.0107 aodserv 0.7502 0.1868 -1.1543 0.2484 other (Intercept) 0.1177 0.0223 -11.3046 0.0000 aodserv 1.2998 0.3324 1.0253 0.3052 ra (Intercept) 2.4221 0.3209 6.6767 0.0000 aodserv 0.8515 0.1548 -0.8844 0.3765 cidi (Intercept) 1.6472 0.2568 3.2010 0.0014 aodserv 0.9055 0.1776 -0.5062 0.6127 cgneed (Intercept) 0.3166 0.1014 -3.5892 0.0003 aodserv 0.6787 0.2410 -1.0917 0.2750 https://cimentadaj.github.io/blog/2016-09-19-obtaining-robust-standard-errors-and-odds-ratios/obtaining-robust-standard-errors-and-odds-ratios-for-logistic-regression-in-r/ "],["11_Section8.4.1.html", "12 Section 8.4.1 Matching with Bias-Corrected and Robust Variance Estimators (SD &amp; PS) 12.1 Preparation 12.2 Breusch-Pagan Test for Heteroskedasticity 12.3 Matching Estimators", " 12 Section 8.4.1 Matching with Bias-Corrected and Robust Variance Estimators (SD &amp; PS) 12.1 Preparation library(lmtest) library(tidyverse) library(broom) library(Matching) # Load Data d &lt;- haven::read_dta(&quot;data/Data_Chapter8/cds_pcss97.dta&quot;) 12.2 Breusch-Pagan Test for Heteroskedasticity m0 &lt;- lm(pcss97 ~ kuse + male + black + age97 + pcged97 + mratio96 + pcg_adc, data = d) get_bptest &lt;- function(data, lm.model, var) { b &lt;- lmtest::bptest(lm.model, as.formula(paste0(&quot;~&quot;, var)), data = data, studentize = F) return(tibble(variable = var, statistic = b$statistic, df = b$parameter, p.value = b$p.value)) } map_dfr(c(&quot;kuse&quot;, &quot;male&quot;, &quot;black&quot;, &quot;age97&quot;, &quot;pcged97&quot;, &quot;mratio96&quot;, &quot;pcg_adc&quot;), get_bptest, data = d, lm.model = m0) ## # A tibble: 7 x 4 ## variable statistic df p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 kuse 0.00962 1 0.922 ## 2 male 3.07 1 0.0797 ## 3 black 1.43 1 0.231 ## 4 age97 25.3 1 0.000000498 ## 5 pcged97 0.189 1 0.664 ## 6 mratio96 0.618 1 0.432 ## 7 pcg_adc 0.291 1 0.590 12.3 Matching Estimators 12.3.1 Sample Average Treatment Effect (SATE) match_sate &lt;- with(d, Matching::Match( Y = pcss97, Tr = kuse, X = data.frame(male, black, age97, pcged97, mratio96, pcg_adc), estimand = &quot;ATE&quot;, M = 4, BiasAdjust = TRUE, sample = TRUE, Var.calc = 4 )) summary(match_sate) ## ## Estimate... -4.7038 ## AI SE...... 1.7697 ## T-stat..... -2.658 ## p.val...... 0.0078616 ## ## Original number of observations.............. 606 ## Original number of treated obs............... 188 ## Matched number of observations............... 606 ## Matched number of observations (unweighted). 2441 12.3.2 Population Average Treatment Effect (PATE) match_pate &lt;- with(d, Matching::Match( Y = pcss97, Tr = kuse, X = data.frame(male, black, age97, pcged97, mratio96, pcg_adc), estimand = &quot;ATE&quot;, M = 4, BiasAdjust = TRUE, sample = FALSE, Var.calc = 4 )) summary(match_pate) ## ## Estimate... -4.7038 ## AI SE...... 1.7652 ## T-stat..... -2.6647 ## p.val...... 0.0077047 ## ## Original number of observations.............. 606 ## Original number of treated obs............... 188 ## Matched number of observations............... 606 ## Matched number of observations (unweighted). 2441 12.3.3 Sample average treatment effect for the treated (SATT) match_satt &lt;- with(d, Matching::Match( Y = pcss97, Tr = kuse, X = data.frame(male, black, age97, pcged97, mratio96, pcg_adc), estimand = &quot;ATT&quot;, M = 4, BiasAdjust = TRUE, sample = TRUE, Var.calc = 4 )) summary(match_satt) ## ## Estimate... -5.2297 ## AI SE...... 1.7812 ## T-stat..... -2.936 ## p.val...... 0.0033248 ## ## Original number of observations.............. 606 ## Original number of treated obs............... 188 ## Matched number of observations............... 188 ## Matched number of observations (unweighted). 754 12.3.4 Population average treatment effect for the treated (PATT) match_patt &lt;- with(d, Matching::Match( Y = pcss97, Tr = kuse, X = data.frame(male, black, age97, pcged97, mratio96, pcg_adc), estimand = &quot;ATT&quot;, M = 4, BiasAdjust = TRUE, sample = FALSE, Var.calc = 4 )) summary(match_patt) ## ## Estimate... -5.2297 ## AI SE...... 1.7206 ## T-stat..... -3.0395 ## p.val...... 0.0023701 ## ## Original number of observations.............. 606 ## Original number of treated obs............... 188 ## Matched number of observations............... 188 ## Matched number of observations (unweighted). 754 12.3.5 Sample average treatment effect for the controls (SATC) match_satc &lt;- with(d, Matching::Match( Y = pcss97, Tr = kuse, X = data.frame(male, black, age97, pcged97, mratio96, pcg_adc), estimand = &quot;ATC&quot;, M = 4, BiasAdjust = TRUE, sample = TRUE, Var.calc = 4 )) summary(match_satc) ## ## Estimate... -4.4673 ## AI SE...... 2.1335 ## T-stat..... -2.0938 ## p.val...... 0.036275 ## ## Original number of observations.............. 606 ## Original number of control obs............... 418 ## Matched number of observations............... 418 ## Matched number of observations (unweighted). 1687 12.3.6 Population average treatment effect for the controls (PATC) match_patc &lt;- with(d, Matching::Match( Y = pcss97, Tr = kuse, X = data.frame(male, black, age97, pcged97, mratio96, pcg_adc), estimand = &quot;ATC&quot;, M = 4, BiasAdjust = TRUE, sample = FALSE, Var.calc = 4 )) summary(match_patc) ## ## Estimate... -4.4673 ## AI SE...... 2.1356 ## T-stat..... -2.0918 ## p.val...... 0.03646 ## ## Original number of observations.............. 606 ## Original number of control obs............... 418 ## Matched number of observations............... 418 ## Matched number of observations (unweighted). 1687 "],["12_Section8.4.2.html", "13 Section 8.4.2 Efficacy Subset &amp; Matching Estimators (PS) 13.1 Check Sample Sizes and Get Summary Statistics 13.2 Functions for Matching 13.3 Define Matching Variables 13.4 Matching 13.5 Function to Aggregate Using Rubins Rule 13.6 Aggregate Using Rubins Rule", " 13 Section 8.4.2 Efficacy Subset &amp; Matching Estimators (PS) library(tidyverse) library(glue) library(haven) library(scales) library(knitr) library(kableExtra) library(MatchIt) library(broom) library(lmtest) library(sandwich) library(Matching) library(rlang) library(tidyr) options(scipen=999) options(knitr.kable.NA = &quot;&quot;) # Do not display NAs in kable select &lt;- dplyr::select 13.1 Check Sample Sizes and Get Summary Statistics # Pattern to match every file except &quot;cds_pcss97.dta&quot; f.pattern &lt;- &quot;^(data/Data_Chapter8/)([:alpha:]+\\\\d?[:alpha:]+)(\\\\d+).dta$&quot; # Match all filenames in Data_Chapter8 and load data df.f &lt;- list.files(path = &quot;data/Data_Chapter8/&quot;, full.names = T) %&gt;% enframe(value = &quot;path&quot;, name = NULL) %&gt;% mutate(filename = str_match(path, f.pattern)[,3]) %&gt;% mutate(filename_no = str_match(path, f.pattern)[,4]) %&gt;% drop_na() %&gt;% # Remove&quot;cds_pcss97.dta&quot; mutate(data = lapply(path, read_dta)) # Inspect head head(df.f) ## # A tibble: 6 x 4 ## path filename filename_no data ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&gt; ## 1 data/Data_Chapter8/g4aca1.dta g4aca 1 &lt;tibble [413 x 47]&gt; ## 2 data/Data_Chapter8/g4aca10.dta g4aca 10 &lt;tibble [413 x 47]&gt; ## 3 data/Data_Chapter8/g4aca11.dta g4aca 11 &lt;tibble [413 x 47]&gt; ## 4 data/Data_Chapter8/g4aca12.dta g4aca 12 &lt;tibble [413 x 47]&gt; ## 5 data/Data_Chapter8/g4aca13.dta g4aca 13 &lt;tibble [413 x 47]&gt; ## 6 data/Data_Chapter8/g4aca14.dta g4aca 14 &lt;tibble [413 x 47]&gt; # Function to get summary statistics # Note: Stata codes missing values larger than any nonmissing values, hence the mcmin comparisons have been altered to adjust for this discrepancy get_sum &lt;- function(f, var_sum, var_freq, adq1, adq2, adq_val1, adq3, adq_val2, hi1, hi_val1, hi2, hi3, hi_val2, flag) { var_sum &lt;- as.name(var_sum) # `2` in the Stata code var_freq &lt;- as.name(var_freq) # `3` in the Stata code df &lt;- df.f %&gt;% filter(filename == f) %&gt;% mutate(data = map(data, . %&gt;% filter(!is.na(!!var_sum)) %&gt;% mutate(!!var_freq := ifelse(flag == &quot;adq&quot; &amp; mcmin &gt;= adq1 &amp; mcmin &lt; adq2, adq_val1, ifelse(flag == &quot;adq&quot; &amp; mcmin &gt;= adq3, adq_val2, ifelse(flag == &quot;hi&quot; &amp; (mcmin &gt;= hi1 | is.na(mcmin)), hi_val1, # note that a . in this condition will be 1 in Stata ifelse(flag == &quot;hi&quot; &amp; mcmin &gt; hi2 &amp; mcmin &lt; hi3, hi_val2, 0))))) %&gt;% summarise(obs = n(), var_name = as.character(var_sum), var_mean = mean(!!var_sum, na.rm = T), var_sd = sd(!!var_sum, na.rm = T), var_min = min(!!var_sum), var_max = max(!!var_sum), var2_name = as.character(var_freq), var2_freq_0 = sum(!!var_freq==0, na.rm = T), var2_pct_0 = scales::percent(var2_freq_0/sum(!is.na(!!var_freq)), accuracy=.01), var2_freq_1 = sum(!!var_freq==1, na.rm = T), var2_pct_1 = scales::percent(var2_freq_1/sum(!is.na(!!var_freq)), accuracy=.01), .groups = &quot;drop&quot;) %&gt;% select(obs, starts_with(&quot;var_&quot;), starts_with(&quot;var2_&quot;)) )) %&gt;% unnest(data) %&gt;% mutate(filename_no = as.numeric(filename_no)) %&gt;% arrange(filename_no) %&gt;% mutate(file = glue(&quot;{filename}{filename_no}&quot;)) %&gt;% relocate(file, .before = &quot;path&quot;) %&gt;% select(-path, -filename, -filename_no) return(df) } # Function to create tables with kbl() create_kab &lt;- function(df) { df %&gt;% kbl(format = &quot;html&quot;, digits = 2) %&gt;% kable_paper() %&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;500px&quot;) } # Define get_sum() arguments arg1 &lt;- c(&quot;g4aca&quot;, &quot;g4agg&quot;, &quot;g4emrg&quot;, &quot;g4int&quot;, &quot;g4pros&quot;, &quot;g4ragg&quot;, &quot;g4scom&quot;) arg2 &lt;- c(&quot;icsacach&quot;, &quot;icsaggch&quot;, &quot;cceregch&quot;, &quot;icsintch&quot;, &quot;ccprosch&quot;, &quot;raggrch&quot;, &quot;ccscomch&quot;) 13.1.1 g4adq s1 &lt;- map2_dfr(arg1, arg2, get_sum, var_freq = &quot;g4adq&quot;, adq1 = 240, adq2 = 380, adq_val1 = 1, adq3 = 380, adq_val2 = NA, hi1 = 380, hi_val1 = NA, hi2 = 240, hi3 = 380, hi_val2 = 1, flag = &quot;adq&quot;) create_kab(s1) file obs var_name var_mean var_sd var_min var_max var2_name var2_freq_0 var2_pct_0 var2_freq_1 var2_pct_1 g4aca1 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca2 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca3 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca4 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca5 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca6 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca7 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca8 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca9 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca10 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca11 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca12 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca13 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca14 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca15 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca16 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca17 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca18 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca19 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca20 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca21 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca22 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca23 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca24 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca25 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca26 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca27 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca28 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca29 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca30 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca31 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca32 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca33 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca34 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca35 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca36 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca37 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca38 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca39 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca40 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca41 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca42 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca43 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca44 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca45 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca46 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca47 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca48 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca49 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4aca50 413 icsacach -0.03 1.10 -4.50 4.50 g4adq 223 63.17% 130 36.83% g4agg1 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg2 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg3 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg4 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg5 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg6 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg7 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg8 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg9 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg10 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg11 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg12 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg13 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg14 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg15 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg16 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg17 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg18 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg19 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg20 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg21 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg22 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg23 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg24 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg25 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg26 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg27 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg28 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg29 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg30 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg31 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg32 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg33 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg34 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg35 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg36 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg37 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg38 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg39 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg40 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg41 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg42 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg43 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg44 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg45 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg46 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg47 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg48 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg49 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4agg50 413 icsaggch 0.06 1.09 -3.67 5.33 g4adq 223 63.17% 130 36.83% g4emrg1 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg2 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg3 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg4 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg5 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg6 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg7 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg8 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg9 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg10 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg11 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg12 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg13 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg14 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg15 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg16 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg17 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg18 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg19 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg20 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg21 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg22 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg23 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg24 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg25 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg26 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg27 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg28 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg29 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg30 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg31 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg32 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg33 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg34 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg35 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg36 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg37 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg38 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg39 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg40 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg41 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg42 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg43 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg44 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg45 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg46 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg47 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg48 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg49 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4emrg50 414 cceregch 0.15 0.73 -3.00 2.50 g4adq 223 63.17% 130 36.83% g4int1 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int2 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int3 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int4 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int5 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int6 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int7 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int8 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int9 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int10 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int11 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int12 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int13 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int14 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int15 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int16 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int17 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int18 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int19 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int20 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int21 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int22 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int23 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int24 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int25 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int26 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int27 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int28 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int29 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int30 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int31 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int32 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int33 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int34 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int35 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int36 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int37 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int38 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int39 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int40 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int41 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int42 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int43 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int44 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int45 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int46 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int47 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int48 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int49 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4int50 413 icsintch -0.06 0.99 -3.67 3.00 g4adq 223 63.17% 130 36.83% g4pros1 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros2 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros3 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros4 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros5 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros6 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros7 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros8 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros9 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros10 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros11 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros12 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros13 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros14 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros15 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros16 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros17 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros18 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros19 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros20 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros21 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros22 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros23 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros24 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros25 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros26 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros27 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros28 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros29 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros30 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros31 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros32 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros33 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros34 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros35 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros36 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros37 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros38 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros39 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros40 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros41 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros42 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros43 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros44 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros45 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros46 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros47 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros48 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros49 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4pros50 414 ccprosch 0.17 0.73 -3.00 3.20 g4adq 223 63.17% 130 36.83% g4ragg1 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg2 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg3 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg4 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg5 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg6 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg7 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg8 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg9 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg10 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg11 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg12 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg13 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg14 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg15 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg16 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg17 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg18 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg19 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg20 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg21 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg22 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg23 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg24 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg25 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg26 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg27 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg28 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg29 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg30 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg31 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg32 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg33 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg34 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg35 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg36 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg37 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg38 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg39 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg40 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg41 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg42 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg43 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg44 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg45 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg46 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg47 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg48 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg49 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4ragg50 414 raggrch 0.02 0.66 -3.00 2.78 g4adq 223 63.17% 130 36.83% g4scom1 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom2 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom3 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom4 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom5 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom6 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom7 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom8 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom9 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom10 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom11 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom12 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom13 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom14 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom15 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom16 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom17 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom18 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom19 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom20 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom21 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom22 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom23 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom24 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom25 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom26 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom27 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom28 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom29 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom30 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom31 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom32 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom33 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom34 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom35 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom36 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom37 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom38 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom39 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom40 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom41 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom42 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom43 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom44 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom45 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom46 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom47 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom48 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom49 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% g4scom50 414 ccscomch 0.16 0.68 -2.67 2.67 g4adq 223 63.17% 130 36.83% 13.1.2 g4hi s2 &lt;- map2_dfr(arg1, arg2, get_sum, var_freq = &quot;g4hi&quot;, adq1 = 380, adq2 = Inf, adq_val1 = 1, adq3 = 380, adq_val2 = 1, hi1 = 380, hi_val1 = 1, hi2 = 0, hi3 = 380, hi_val2 = NA, flag = &quot;hi&quot;) create_kab(s2) file obs var_name var_mean var_sd var_min var_max var2_name var2_freq_0 var2_pct_0 var2_freq_1 var2_pct_1 g4aca1 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca2 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca3 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca4 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca5 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca6 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca7 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca8 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca9 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca10 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca11 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca12 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca13 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca14 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca15 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca16 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca17 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca18 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca19 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca20 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca21 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca22 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca23 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca24 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca25 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca26 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca27 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca28 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca29 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca30 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca31 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca32 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca33 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca34 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca35 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca36 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca37 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca38 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca39 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca40 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca41 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca42 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca43 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca44 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca45 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca46 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca47 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca48 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca49 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4aca50 413 icsacach -0.03 1.10 -4.50 4.50 g4hi 223 78.80% 60 21.20% g4agg1 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg2 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg3 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg4 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg5 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg6 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg7 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg8 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg9 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg10 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg11 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg12 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg13 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg14 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg15 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg16 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg17 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg18 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg19 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg20 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg21 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg22 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg23 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg24 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg25 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg26 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg27 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg28 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg29 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg30 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg31 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg32 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg33 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg34 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg35 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg36 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg37 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg38 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg39 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg40 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg41 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg42 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg43 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg44 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg45 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg46 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg47 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg48 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg49 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4agg50 413 icsaggch 0.06 1.09 -3.67 5.33 g4hi 223 78.80% 60 21.20% g4emrg1 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg2 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg3 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg4 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg5 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg6 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg7 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg8 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg9 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg10 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg11 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg12 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg13 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg14 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg15 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg16 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg17 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg18 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg19 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg20 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg21 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg22 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg23 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg24 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg25 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg26 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg27 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg28 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg29 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg30 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg31 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg32 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg33 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg34 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg35 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg36 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg37 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg38 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg39 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg40 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg41 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg42 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg43 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg44 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg45 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg46 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg47 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg48 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg49 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4emrg50 414 cceregch 0.15 0.73 -3.00 2.50 g4hi 223 78.52% 61 21.48% g4int1 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int2 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int3 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int4 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int5 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int6 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int7 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int8 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int9 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int10 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int11 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int12 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int13 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int14 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int15 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int16 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int17 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int18 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int19 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int20 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int21 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int22 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int23 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int24 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int25 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int26 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int27 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int28 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int29 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int30 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int31 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int32 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int33 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int34 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int35 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int36 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int37 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int38 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int39 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int40 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int41 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int42 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int43 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int44 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int45 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int46 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int47 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int48 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int49 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4int50 413 icsintch -0.06 0.99 -3.67 3.00 g4hi 223 78.80% 60 21.20% g4pros1 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros2 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros3 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros4 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros5 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros6 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros7 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros8 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros9 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros10 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros11 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros12 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros13 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros14 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros15 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros16 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros17 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros18 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros19 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros20 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros21 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros22 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros23 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros24 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros25 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros26 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros27 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros28 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros29 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros30 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros31 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros32 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros33 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros34 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros35 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros36 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros37 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros38 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros39 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros40 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros41 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros42 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros43 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros44 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros45 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros46 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros47 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros48 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros49 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4pros50 414 ccprosch 0.17 0.73 -3.00 3.20 g4hi 223 78.52% 61 21.48% g4ragg1 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg2 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg3 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg4 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg5 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg6 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg7 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg8 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg9 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg10 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg11 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg12 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg13 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg14 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg15 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg16 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg17 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg18 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg19 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg20 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg21 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg22 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg23 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg24 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg25 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg26 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg27 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg28 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg29 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg30 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg31 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg32 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg33 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg34 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg35 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg36 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg37 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg38 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg39 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg40 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg41 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg42 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg43 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg44 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg45 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg46 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg47 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg48 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg49 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4ragg50 414 raggrch 0.02 0.66 -3.00 2.78 g4hi 223 78.52% 61 21.48% g4scom1 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom2 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom3 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom4 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom5 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom6 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom7 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom8 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom9 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom10 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom11 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom12 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom13 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom14 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom15 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom16 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom17 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom18 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom19 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom20 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom21 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom22 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom23 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom24 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom25 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom26 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom27 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom28 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom29 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom30 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom31 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom32 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom33 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom34 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom35 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom36 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom37 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom38 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom39 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom40 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom41 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom42 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom43 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom44 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom45 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom46 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom47 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom48 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom49 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% g4scom50 414 ccscomch 0.16 0.68 -2.67 2.67 g4hi 223 78.52% 61 21.48% 13.1.3 g5adq # New arguments arg1_new &lt;- str_replace_all(arg1, &quot;4&quot;, &quot;5&quot;) s3 &lt;- map2_dfr(arg1_new, arg2, get_sum, var_freq = &quot;g5adq&quot;, adq1 = 240, adq2 = 380, adq_val1 = 1, adq3 = 380, adq_val2 = NA, hi1 = 380, hi_val1 = NA, hi2 = 240, hi3 = 380, hi_val2 = 1, flag = &quot;adq&quot;) create_kab(s3) file obs var_name var_mean var_sd var_min var_max var2_name var2_freq_0 var2_pct_0 var2_freq_1 var2_pct_1 g5aca1 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca2 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca3 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca4 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca5 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca6 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca7 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca8 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca9 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca10 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca11 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca12 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca13 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca14 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca15 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca16 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca17 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca18 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca19 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca20 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca21 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca22 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca23 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca24 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca25 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca26 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca27 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca28 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca29 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca30 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca31 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca32 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca33 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca34 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca35 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca36 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca37 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca38 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca39 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca40 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca41 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca42 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca43 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca44 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca45 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca46 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca47 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca48 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca49 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5aca50 434 icsacach -0.09 1.24 -4.50 6.00 g5adq 253 63.09% 148 36.91% g5agg1 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg2 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg3 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg4 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg5 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg6 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg7 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg8 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg9 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg10 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg11 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg12 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg13 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg14 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg15 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg16 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg17 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg18 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg19 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg20 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg21 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg22 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg23 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg24 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg25 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg26 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg27 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg28 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg29 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg30 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg31 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg32 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg33 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg34 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg35 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg36 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg37 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg38 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg39 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg40 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg41 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg42 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg43 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg44 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg45 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg46 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg47 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg48 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg49 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5agg50 434 icsaggch 0.19 1.19 -3.67 6.00 g5adq 253 63.09% 148 36.91% g5emrg1 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg2 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg3 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg4 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg5 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg6 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg7 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg8 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg9 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg10 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg11 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg12 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg13 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg14 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg15 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg16 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg17 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg18 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg19 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg20 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg21 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg22 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg23 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg24 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg25 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg26 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg27 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg28 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg29 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg30 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg31 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg32 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg33 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg34 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg35 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg36 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg37 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg38 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg39 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg40 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg41 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg42 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg43 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg44 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg45 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg46 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg47 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg48 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg49 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5emrg50 433 cceregch -0.03 0.75 -2.50 2.50 g5adq 251 62.75% 149 37.25% g5int1 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int2 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int3 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int4 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int5 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int6 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int7 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int8 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int9 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int10 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int11 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int12 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int13 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int14 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int15 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int16 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int17 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int18 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int19 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int20 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int21 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int22 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int23 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int24 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int25 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int26 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int27 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int28 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int29 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int30 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int31 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int32 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int33 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int34 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int35 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int36 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int37 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int38 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int39 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int40 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int41 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int42 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int43 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int44 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int45 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int46 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int47 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int48 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int49 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5int50 434 icsintch 0.01 1.03 -3.00 4.00 g5adq 253 63.09% 148 36.91% g5pros1 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros2 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros3 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros4 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros5 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros6 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros7 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros8 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros9 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros10 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros11 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros12 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros13 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros14 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros15 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros16 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros17 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros18 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros19 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros20 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros21 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros22 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros23 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros24 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros25 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros26 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros27 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros28 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros29 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros30 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros31 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros32 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros33 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros34 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros35 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros36 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros37 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros38 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros39 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros40 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros41 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros42 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros43 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros44 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros45 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros46 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros47 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros48 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros49 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5pros50 433 ccprosch -0.04 0.79 -2.80 3.20 g5adq 251 62.75% 149 37.25% g5ragg1 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg2 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg3 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg4 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg5 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg6 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg7 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg8 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg9 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg10 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg11 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg12 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg13 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg14 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg15 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg16 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg17 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg18 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg19 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg20 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg21 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg22 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg23 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg24 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg25 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg26 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg27 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg28 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg29 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg30 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg31 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg32 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg33 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg34 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg35 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg36 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg37 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg38 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg39 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg40 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg41 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg42 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg43 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg44 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg45 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg46 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg47 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg48 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg49 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5ragg50 433 raggrch 0.17 0.68 -2.78 3.11 g5adq 251 62.75% 149 37.25% g5scom1 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom2 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom3 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom4 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom5 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom6 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom7 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom8 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom9 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom10 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom11 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom12 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom13 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom14 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom15 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom16 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom17 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom18 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom19 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom20 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom21 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom22 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom23 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom24 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom25 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom26 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom27 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom28 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom29 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom30 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom31 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom32 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom33 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom34 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom35 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom36 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom37 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom38 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom39 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom40 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom41 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom42 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom43 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom44 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom45 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom46 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom47 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom48 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom49 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% g5scom50 433 ccscomch -0.04 0.72 -2.33 2.67 g5adq 251 62.75% 149 37.25% 13.1.4 g5hi s4 &lt;- map2_dfr(arg1_new, arg2, get_sum, var_freq = &quot;g5hi&quot;, adq1 = 380, adq2 = Inf, adq_val1 = 1, adq3 = 380, adq_val2 = 1, hi1 = 380, hi_val1 = 1, hi2 = 0, hi3 = 380, hi_val2 = NA, flag = &quot;hi&quot;) create_kab(s4) file obs var_name var_mean var_sd var_min var_max var2_name var2_freq_0 var2_pct_0 var2_freq_1 var2_pct_1 g5aca1 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca2 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca3 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca4 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca5 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca6 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca7 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca8 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca9 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca10 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca11 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca12 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca13 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca14 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca15 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca16 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca17 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca18 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca19 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca20 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca21 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca22 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca23 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca24 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca25 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca26 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca27 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca28 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca29 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca30 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca31 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca32 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca33 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca34 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca35 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca36 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca37 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca38 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca39 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca40 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca41 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca42 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca43 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca44 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca45 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca46 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca47 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca48 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca49 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5aca50 434 icsacach -0.09 1.24 -4.50 6.00 g5hi 253 88.46% 33 11.54% g5agg1 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg2 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg3 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg4 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg5 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg6 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg7 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg8 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg9 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg10 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg11 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg12 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg13 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg14 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg15 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg16 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg17 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg18 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg19 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg20 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg21 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg22 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg23 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg24 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg25 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg26 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg27 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg28 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg29 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg30 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg31 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg32 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg33 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg34 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg35 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg36 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg37 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg38 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg39 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg40 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg41 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg42 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg43 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg44 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg45 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg46 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg47 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg48 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg49 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5agg50 434 icsaggch 0.19 1.19 -3.67 6.00 g5hi 253 88.46% 33 11.54% g5emrg1 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg2 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg3 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg4 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg5 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg6 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg7 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg8 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg9 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg10 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg11 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg12 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg13 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg14 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg15 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg16 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg17 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg18 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg19 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg20 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg21 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg22 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg23 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg24 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg25 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg26 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg27 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg28 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg29 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg30 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg31 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg32 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg33 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg34 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg35 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg36 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg37 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg38 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg39 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg40 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg41 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg42 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg43 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg44 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg45 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg46 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg47 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg48 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg49 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5emrg50 433 cceregch -0.03 0.75 -2.50 2.50 g5hi 251 88.38% 33 11.62% g5int1 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int2 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int3 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int4 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int5 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int6 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int7 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int8 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int9 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int10 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int11 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int12 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int13 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int14 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int15 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int16 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int17 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int18 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int19 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int20 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int21 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int22 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int23 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int24 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int25 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int26 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int27 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int28 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int29 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int30 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int31 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int32 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int33 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int34 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int35 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int36 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int37 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int38 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int39 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int40 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int41 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int42 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int43 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int44 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int45 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int46 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int47 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int48 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int49 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5int50 434 icsintch 0.01 1.03 -3.00 4.00 g5hi 253 88.46% 33 11.54% g5pros1 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros2 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros3 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros4 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros5 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros6 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros7 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros8 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros9 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros10 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros11 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros12 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros13 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros14 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros15 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros16 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros17 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros18 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros19 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros20 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros21 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros22 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros23 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros24 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros25 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros26 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros27 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros28 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros29 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros30 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros31 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros32 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros33 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros34 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros35 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros36 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros37 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros38 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros39 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros40 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros41 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros42 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros43 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros44 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros45 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros46 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros47 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros48 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros49 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5pros50 433 ccprosch -0.04 0.79 -2.80 3.20 g5hi 251 88.38% 33 11.62% g5ragg1 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg2 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg3 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg4 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg5 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg6 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg7 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg8 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg9 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg10 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg11 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg12 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg13 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg14 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg15 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg16 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg17 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg18 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg19 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg20 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg21 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg22 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg23 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg24 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg25 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg26 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg27 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg28 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg29 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg30 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg31 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg32 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg33 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg34 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg35 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg36 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg37 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg38 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg39 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg40 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg41 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg42 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg43 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg44 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg45 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg46 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg47 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg48 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg49 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5ragg50 433 raggrch 0.17 0.68 -2.78 3.11 g5hi 251 88.38% 33 11.62% g5scom1 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom2 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom3 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom4 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom5 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom6 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom7 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom8 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom9 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom10 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom11 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom12 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom13 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom14 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom15 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom16 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom17 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom18 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom19 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom20 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom21 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom22 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom23 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom24 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom25 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom26 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom27 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom28 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom29 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom30 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom31 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom32 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom33 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom34 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom35 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom36 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom37 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom38 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom39 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom40 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom41 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom42 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom43 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom44 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom45 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom46 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom47 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom48 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom49 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% g5scom50 433 ccscomch -0.04 0.72 -2.33 2.67 g5hi 251 88.38% 33 11.62% 13.2 Functions for Matching # Prepare data df.f2 &lt;- df.f %&gt;% mutate(filename_no = as.numeric(filename_no)) %&gt;% arrange(filename, filename_no) %&gt;% mutate(filename2 = paste0(filename, filename_no)) %&gt;% select(filename, filename2, data) # Create adq treatment variable create_adq &lt;- function(mcmin) { adq &lt;- tibble(mcmin = mcmin) %&gt;% mutate(adq = ifelse(mcmin &gt;= 240 &amp; mcmin &lt; 380, 1, ifelse(mcmin &gt;= 380, NA, 0))) return(adq$adq) } # Create hi treatment variable create_hi &lt;- function(mcmin) { hi &lt;- tibble(mcmin = mcmin) %&gt;% mutate(hi = ifelse(mcmin &gt;= 380 | is.na(mcmin), 1, ifelse(mcmin &gt; 0 &amp; mcmin &lt; 380, NA, 0))) return(hi$hi) } # Function to perform matching get_model &lt;- function(df, tx, dv, cov) { # Drop missing model variables df &lt;- df %&gt;% select(all_of(c(tx, dv, cov))) %&gt;% drop_na() # Define arguments and match (SATT) Y &lt;- df[[dv]] Tr &lt;- df[[tx]] X &lt;- select(df, all_of(cov)) M &lt;- Match(Y = Y, Tr = Tr, X = X, M = 4, estimand = &quot;ATT&quot;, BiasAdjust = T, Var.calc = 4, sample = T) # Return results in a tibble return(tibble( se = as.numeric(M$se), n = as.numeric(M$nobs), c = as.numeric(M$est) )) } # Function to use nested data to call get_model() get_matching_models &lt;- function(data, f, tx1 = &quot;intbl&quot;, tx2 = &quot;g4adq&quot;, tx3 = &quot;g4hi&quot;, dv, cov) { # Create column names col1 = as.name(paste0(f, &quot;_&quot;, dv, &quot;_&quot;, tx1)) col2 = as.name(paste0(f, &quot;_&quot;, dv, &quot;_&quot;, tx2)) col3 = as.name(paste0(f, &quot;_&quot;, dv, &quot;_&quot;, tx3)) # Create three treatment variables df &lt;- data %&gt;% filter(filename == f) %&gt;% mutate(data = map(data, . %&gt;% mutate(g4adq = create_adq(mcmin), g4hi = create_hi(mcmin)))) %&gt;% # Fit three models using the three treatment variables mutate({{ col1 }} := map(data, ~get_model(., tx = tx1, dv = dv, cov = cov))) %&gt;% mutate({{ col2 }} := map(data, ~get_model(., tx = tx2, dv = dv, cov = cov))) %&gt;% mutate({{ col3 }} := map(data, ~get_model(., tx = tx3, dv = dv, cov = cov))) # Return the dataset return(df) } 13.3 Define Matching Variables X_icsacach &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsagg2&quot;, &quot;dicsint2&quot;, &quot;dccereg2&quot;, &quot;dccscom2&quot;, &quot;dccpros2&quot;, &quot;draggr2&quot;) X_icsaggch &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsaca2&quot;, &quot;dicsint2&quot;, &quot;dccpros2&quot;) X_cceregch &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsaca2&quot;, &quot;dicsint2&quot;) X_icsintch &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsagg2&quot;, &quot;dicsaca2&quot;, &quot;dccereg2&quot;, &quot;dccscom2&quot;, &quot;dccpros2&quot;, &quot;draggr2&quot;) X_ccprosch &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsagg2&quot;, &quot;dicsaca2&quot;, &quot;dicsint2&quot;) X_raggrch &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsaca2&quot;, &quot;dicsint2&quot;) X_ccscomch &lt;- c(&quot;ageyc&quot;, &quot;fmale&quot;, &quot;blck&quot;, &quot;whit&quot;, &quot;hisp&quot;, &quot;pcedu&quot;, &quot;ipovl&quot;, &quot;pcemft&quot;, &quot;fthr&quot;, &quot;tchange&quot;, &quot;dicsaca2&quot;, &quot;dicsint2&quot;) 13.4 Matching # Replicates 21 Stata programs (dv_g4aca_tot to dv_g4scom_hi) df.m1 &lt;- get_matching_models(data = df.f2, f = &quot;g4aca&quot;, dv = &quot;icsacach&quot;, cov = X_icsacach) df.m2 &lt;- get_matching_models(data = df.f2, f = &quot;g4agg&quot;, dv = &quot;icsaggch&quot;, cov = X_icsaggch) df.m3 &lt;- get_matching_models(data = df.f2, f = &quot;g4emrg&quot;, dv = &quot;cceregch&quot;, cov = X_cceregch) df.m4 &lt;- get_matching_models(data = df.f2, f = &quot;g4int&quot;, dv = &quot;icsintch&quot;, cov = X_icsintch) df.m5 &lt;- get_matching_models(data = df.f2, f = &quot;g4pros&quot;, dv = &quot;ccprosch&quot;, cov = X_ccprosch) df.m6 &lt;- get_matching_models(data = df.f2, f = &quot;g4ragg&quot;, dv = &quot;raggrch&quot;, cov = X_raggrch) df.m7 &lt;- get_matching_models(data = df.f2, f = &quot;g4scom&quot;, dv = &quot;ccscomch&quot;, cov = X_ccscomch) # Replicates 21 Stata programs (dv_g5aca_tot to dv_g5scom_hi) df.m8 &lt;- get_matching_models(data = df.f2, f = &quot;g5aca&quot;, dv = &quot;icsacach&quot;, cov = X_icsacach) df.m9 &lt;- get_matching_models(data = df.f2, f = &quot;g5agg&quot;, dv = &quot;icsaggch&quot;, cov = X_icsaggch) df.m10 &lt;- get_matching_models(data = df.f2, f = &quot;g5emrg&quot;, dv = &quot;cceregch&quot;, cov = X_cceregch) df.m11 &lt;- get_matching_models(data = df.f2, f = &quot;g5int&quot;, dv = &quot;icsintch&quot;, cov = X_icsintch) df.m12 &lt;- get_matching_models(data = df.f2, f = &quot;g5pros&quot;, dv = &quot;ccprosch&quot;, cov = X_ccprosch) df.m13 &lt;- get_matching_models(data = df.f2, f = &quot;g5ragg&quot;, dv = &quot;raggrch&quot;, cov = X_raggrch) df.m14 &lt;- get_matching_models(data = df.f2, f = &quot;g5scom&quot;, dv = &quot;ccscomch&quot;, cov = X_ccscomch) # Each tibble above contains 50 (imputed datasets) * 3 (treatment variable) = 150 ATTs df.m1 ## # A tibble: 50 x 6 ## filename filename2 data g4aca_icsacach_intbl g4aca_icsacach_g~ ## &lt;chr&gt; &lt;chr&gt; &lt;list&gt; &lt;list&gt; &lt;list&gt; ## 1 g4aca g4aca1 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 2 g4aca g4aca2 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 3 g4aca g4aca3 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 4 g4aca g4aca4 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 5 g4aca g4aca5 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 6 g4aca g4aca6 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 7 g4aca g4aca7 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 8 g4aca g4aca8 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 9 g4aca g4aca9 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## 10 g4aca g4aca10 &lt;tibble [413 x 49]&gt; &lt;tibble [1 x 3]&gt; &lt;tibble [1 x 3]&gt; ## # ... with 40 more rows, and 1 more variable: g4aca_icsacach_g4hi &lt;list&gt; df.m1$g4aca_icsacach_intbl[[1]] ## # A tibble: 1 x 3 ## se n c ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.132 354 -0.0746 13.5 Function to Aggregate Using Rubins Rule postmatch &lt;- function(se, n, c1) { pm &lt;- tibble(se = se, n = n, c1 = c1) %&gt;% mutate(Q_ = mean(c1), obs = mean(n), var = se*se, U_ = mean(var), qj_q_2 = (c1-Q_)^2, B = (1/(50-1))*sum(qj_q_2), T = U_ + (1+(1/50))*B, overall_se = sqrt(T), t = Q_/overall_se, xx = (1+(50*U_)/((50+1)*B))^2, df = (50-1)*xx, t_pvalue = pt(-abs(t), df = df)*2 ) %&gt;% slice(1) %&gt;% select(coef = Q_, p = t_pvalue, avg_obs = obs, df = df) return(pm) } 13.6 Aggregate Using Rubins Rule # Unnest models for postmatch() get_postmatch &lt;- function(df) { df %&gt;% select(-filename, -data) %&gt;% pivot_longer(-filename2) %&gt;% group_by(name) %&gt;% nest() %&gt;% unnest(data) %&gt;% unnest(value) %&gt;% group_by(name) %&gt;% summarise(results = postmatch(se, n, c), .groups = &quot;drop&quot;) %&gt;% tidyr::unpack(results) } # List of results dfs &lt;- list(df.m1, df.m2, df.m3, df.m4, df.m5, df.m6, df.m7, df.m8, df.m9, df.m10, df.m11, df.m12, df.m13, df.m14) # Start post-match aggregation on the list of results results &lt;- map_dfr(dfs, get_postmatch) results %&gt;% separate(name, into = c(&quot;file&quot;, &quot;depvar&quot;, &quot;tx&quot;), sep = &quot;_&quot;) %&gt;% mutate(tx = ifelse(tx == &quot;intbl&quot;, &quot;tot&quot;, tx)) %&gt;% kbl(col.names = c(&quot;File&quot;, &quot;DV&quot;, &quot;Treatment&quot;, &quot;Coefficient&quot;, &quot;p-value&quot;, &quot;Average Obs.&quot;, &quot;df&quot;)) %&gt;% kable_paper() %&gt;% scroll_box(height = &quot;600px&quot;) File DV Treatment Coefficient p-value Average Obs. df g4aca icsacach g4adq -0.2078875 0.1525476 308 413184.156 g4aca icsacach g4hi 0.1812781 0.3830480 245 30705.905 g4aca icsacach tot -0.0900701 0.4883134 354 407643.896 g4agg icsaggch g4adq -0.3431373 0.0190340 308 273272.663 g4agg icsaggch g4hi -0.7830205 0.0001958 245 16011.864 g4agg icsaggch tot -0.4746019 0.0006297 354 112806.107 g4emrg cceregch g4adq 0.2111075 0.0254078 353 18221.173 g4emrg cceregch g4hi 0.2241886 0.1060488 284 8209.713 g4emrg cceregch tot 0.2213830 0.0158916 414 16006.687 g4int icsintch g4adq -0.0478860 0.7121552 308 262745.496 g4int icsintch g4hi 0.3126315 0.0961233 245 80963.834 g4int icsintch tot 0.0482277 0.6805874 354 398581.508 g4pros ccprosch g4adq 0.2150736 0.0236220 353 15086.031 g4pros ccprosch g4hi 0.1456080 0.2326624 284 3090.968 g4pros ccprosch tot 0.2047603 0.0181738 414 12316.421 g4ragg raggrch g4adq -0.1951525 0.0250622 353 7294.835 g4ragg raggrch g4hi -0.4545085 0.0003364 284 3297.613 g4ragg raggrch tot -0.2721956 0.0011217 414 8344.596 g4scom ccscomch g4adq 0.2055294 0.0241059 353 13160.684 g4scom ccscomch g4hi 0.1773895 0.1340911 284 4247.049 g4scom ccscomch tot 0.2061175 0.0125941 414 13922.817 g5aca icsacach g4adq 0.1059220 0.4895470 332 295648.813 g5aca icsacach g4hi 0.3349887 0.3121470 232 11834.074 g5aca icsacach tot 0.1459517 0.3079436 354 296282.222 g5agg icsaggch g4adq -0.1543318 0.3255574 332 789901.327 g5agg icsaggch g4hi -0.1425321 0.5437643 232 61874.638 g5agg icsaggch tot -0.1491603 0.2947243 354 432669.025 g5emrg cceregch g4adq 0.2498195 0.0123141 392 21579.147 g5emrg cceregch g4hi 0.2957510 0.0985664 277 1460.804 g5emrg cceregch tot 0.2594880 0.0044600 425 24289.881 g5int icsintch g4adq -0.3268946 0.0107414 332 586556.074 g5int icsintch g4hi 0.0892931 0.6860994 232 10780.353 g5int icsintch tot -0.3039597 0.0102561 354 245629.058 g5pros ccprosch g4adq 0.3041289 0.0018155 392 16692.721 g5pros ccprosch g4hi 0.2452488 0.2191204 277 13889.429 g5pros ccprosch tot 0.2921683 0.0016715 425 14129.730 g5ragg raggrch g4adq -0.1774314 0.0904556 392 37546.442 g5ragg raggrch g4hi -0.2477423 0.1107352 277 4038.825 g5ragg raggrch tot -0.1810632 0.0579942 425 26833.157 g5scom ccscomch g4adq 0.2706440 0.0039533 392 12244.053 g5scom ccscomch g4hi 0.2732523 0.1422008 277 1889.570 g5scom ccscomch tot 0.2715199 0.0020116 425 11438.926 "],["13_Section10.6.1.html", "14 Section 10.6.1 Modeling Doses of Treatment (SD &amp; PS) 14.1 Preparation 14.2 Create Treatment Variable 14.3 Generalized Propensity Scores 14.4 Sampling Weights 14.5 Dummy Variables 14.6 Regression", " 14 Section 10.6.1 Modeling Doses of Treatment (SD &amp; PS) 14.1 Preparation library(nnet) library(lmtest) library(sandwich) library(stargazer) library(tidyverse) # Load Data d &lt;- haven::read_dta(&quot;data/Data_Chapter10/chpt10.dta&quot;) # Function to replicate Stata tab tab &lt;- function(df, var) { df %&gt;% group_by({{ var }}) %&gt;% summarise(n = n(), .groups = &quot;drop&quot;) %&gt;% mutate(Percent = 100 * round((n / sum(n)), 4), Cum. = 100 * round(cumsum(n / sum(n)),4)) %&gt;% rename(Freq. = n) } 14.2 Create Treatment Variable tab(d, k_adc) ## # A tibble: 51 x 4 ## k_adc Freq. Percent Cum. ## &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 729 72.7 72.7 ## 2 7.69 25 2.49 75.2 ## 3 8.33 10 1 76.2 ## 4 9.09 5 0.5 76.7 ## 5 10 4 0.4 77.1 ## 6 11.1 8 0.8 77.9 ## 7 12.5 1 0.1 78.0 ## 8 14.3 1 0.1 78.1 ## 9 15.4 15 1.5 79.6 ## 10 16.7 4 0.4 80.0 ## # ... with 41 more rows # Treatment d &lt;- d %&gt;% mutate(kadc_ds = as.factor( case_when( k_adc == 0 ~ 0, k_adc &gt;0 &amp; k_adc &lt;34 ~ 1, k_adc &gt;= 34 ~ 2 ))) tab(d, kadc_ds) ## # A tibble: 3 x 4 ## kadc_ds Freq. Percent Cum. ## &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 729 72.7 72.7 ## 2 1 135 13.5 86.1 ## 3 2 139 13.9 100 14.3 Generalized Propensity Scores 14.3.1 Mulitinomial Logit Model # Use multinomial logit model to predict generalized propensity scores # set kadc_ds = 2 as base outcome d &lt;- d %&gt;% mutate(kadc_ds = relevel(kadc_ds, ref = 3)) # mlogit m &lt;- nnet::multinom( kadc_ds ~ pcg_adc + age97 + mratio96 + pcged97 + black, data = d ) ## # weights: 21 (12 variable) ## initial value 1101.908126 ## iter 10 value 651.499728 ## iter 20 value 534.660846 ## final value 534.657501 ## converged summary(m) ## Call: ## nnet::multinom(formula = kadc_ds ~ pcg_adc + age97 + mratio96 + ## pcged97 + black, data = d) ## ## Coefficients: ## (Intercept) pcg_adc age97 mratio96 pcged97 black ## 0 -2.6933481 -0.2758773 -0.11732695 1.767833 0.29748922 -0.9878301 ## 1 -0.4118176 -0.1550842 -0.08486823 1.032242 0.03898852 -0.2768833 ## ## Std. Errors: ## (Intercept) pcg_adc age97 mratio96 pcged97 black ## 0 0.9788544 0.05545970 0.04258354 0.1859115 0.07719240 0.3033386 ## 1 1.0171423 0.05356707 0.04483509 0.1935113 0.08088266 0.3349232 ## ## Residual Deviance: 1069.315 ## AIC: 1093.315 # prediction pr &lt;- as.data.frame(fitted(m)) %&gt;% rename( pr0 = &quot;0&quot;, pr1 = &quot;1&quot;, pr2 = &quot;2&quot; ) head(pr) ## pr2 pr0 pr1 ## 1 0.146603075 0.6463734 0.20702356 ## 2 0.495585081 0.2469185 0.25749645 ## 3 0.000244027 0.9835595 0.01619643 ## 4 0.175124578 0.5883837 0.23649169 ## 5 0.146015065 0.6203262 0.23365875 ## 6 0.009837973 0.9057460 0.08441600 summary(pr) ## pr2 pr0 pr1 ## Min. :0.000000 Min. :0.02348 Min. :0.00000 ## 1st Qu.:0.002256 1st Qu.:0.52566 1st Qu.:0.03719 ## Median :0.029368 Median :0.84854 Median :0.12447 ## Mean :0.138588 Mean :0.72682 Mean :0.13460 ## 3rd Qu.:0.201214 3rd Qu.:0.96053 3rd Qu.:0.22369 ## Max. :0.885824 Max. :1.00000 Max. :0.42421 14.4 Sampling Weights # define inverse of the generalized p-scores as sampling weights d &lt;- d %&gt;% mutate(dose_w = case_when( kadc_ds == 0 ~ 1 / pr$pr0, kadc_ds == 1 ~ 1 / pr$pr1, kadc_ds == 2 ~ 1 / pr$pr2 )) summary(d$dose_w) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 1.000 1.043 1.208 6.648 2.206 2611.475 14.5 Dummy Variables # create t-1 dummy variables to measure dose categories d &lt;- d %&gt;% mutate(kadc_ds0 = ifelse(kadc_ds == 0, 1, 0), kadc_ds1 = ifelse(kadc_ds == 1, 1, 0)) tab(d, kadc_ds0) ## # A tibble: 2 x 4 ## kadc_ds0 Freq. Percent Cum. ## &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 274 27.3 27.3 ## 2 1 729 72.7 100 tab(d, kadc_ds1) ## # A tibble: 2 x 4 ## kadc_ds1 Freq. Percent Cum. ## &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 868 86.5 86.5 ## 2 1 135 13.5 100 14.6 Regression 14.6.1 Without Control # Regression does not control for selection reg1 &lt;- lm(lwss97 ~ male + black + age97 + pcged97 + mratio96 + pcg_adc + kadc_ds0 + kadc_ds1, data = d) lmtest::coeftest(reg1,vcovCL, cluster = d$pcg_id) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 79.40538 4.44405 17.8678 &lt; 0.00000000000000022 *** ## male -2.01599 0.98653 -2.0435 0.0412657 * ## black -1.85547 1.23201 -1.5061 0.1323713 ## age97 0.87847 0.16895 5.1995 0.0000002425 *** ## pcged97 0.90784 0.33594 2.7024 0.0070013 ** ## mratio96 1.12921 0.33211 3.4001 0.0007003 *** ## pcg_adc -0.72704 0.31807 -2.2858 0.0224783 * ## kadc_ds0 5.44600 1.79756 3.0297 0.0025116 ** ## kadc_ds1 1.29861 1.97936 0.6561 0.5119295 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 14.6.2 With Control # Regression controls for selection using inverse p-scores as weights reg2 &lt;- lm(lwss97 ~ male + black + age97 + pcged97 + mratio96 + pcg_adc + kadc_ds0 + kadc_ds1, weights = dose_w, data = d) lmtest::coeftest(reg2, vcovCL, cluster = d$pcg_id) ## ## t test of coefficients: ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 73.32126 3.99587 18.3493 &lt; 0.00000000000000022 *** ## male -1.17070 1.30288 -0.8985 0.3691148 ## black -1.58184 1.95036 -0.8110 0.4175313 ## age97 0.65806 0.20802 3.1635 0.0016062 ** ## pcged97 1.25721 0.37837 3.3227 0.0009240 *** ## mratio96 1.02647 0.28148 3.6467 0.0002794 *** ## pcg_adc -0.48280 0.53557 -0.9015 0.3675611 ## kadc_ds0 7.48356 1.06752 7.0102 0.000000000004388 *** ## kadc_ds1 3.28909 1.73504 1.8957 0.0582914 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 "],["14_Section11.5.1_11.5.2.html", "15 Section 11.5.1 &amp; 11.5.2 Sensitivity Analysis of the Effects (SD &amp; PS) 15.1 Section 11.5.1 Sensitivity Analysis of the Effects 15.2 Section 11.5.2 Sensitivity Analysis &amp; Pair Matching", " 15 Section 11.5.1 &amp; 11.5.2 Sensitivity Analysis of the Effects (SD &amp; PS) 15.1 Section 11.5.1 Sensitivity Analysis of the Effects Example from rbounds:4 library(rbounds) library(coin) library(tidyverse) # Data: Matched Data of Lead Blood Levels in Children trt &lt;- c(38, 23, 41, 18, 37, 36, 23, 62, 31, 34, 24, 14, 21, 17, 16, 20, 15, 10, 45, 39, 22, 35, 49, 48, 44, 35, 43, 39, 34, 13, 73, 25, 27) ctrl &lt;- c(16, 18, 18, 24, 19, 11, 10, 15, 16, 18, 18, 13, 19, 10, 16, 16, 24, 13, 9, 14, 21, 19, 7, 18, 19, 12, 11, 22, 25, 16, 13, 11, 13) p &lt;- rbounds::psens(trt, ctrl, GammaInc = 0.01) p$bounds %&gt;% filter(Gamma %in% c(1:4, 4.25, 5:6)) ## Gamma Lower bound Upper bound ## 1 1.00 0 0.0000 ## 2 2.00 0 0.0018 ## 3 3.00 0 0.0131 ## 4 4.00 0 0.0367 ## 5 4.25 0 0.0441 ## 6 5.00 0 0.0694 ## 7 6.00 0 0.1073 h &lt;- rbounds::hlsens(trt, ctrl, GammaInc = 0.01) h$bounds %&gt;% filter(Gamma %in% c(1:4, 4.25, 5:6)) ## Gamma Lower bound Upper bound ## 1 1.00 15.5 15.5 ## 2 2.00 10.5 19.6 ## 3 3.00 8.0 23.1 ## 4 4.00 6.5 25.1 ## 5 4.25 6.0 25.1 ## 6 5.00 5.0 26.6 ## 7 6.00 4.0 28.1 15.2 Section 11.5.2 Sensitivity Analysis &amp; Pair Matching d &lt;- haven::read_dta(&quot;data/Data_Chapter11/chpt5_2.dta&quot;) # kuse == 1 d1 &lt;- d %&gt;% filter(kuse == 1) %&gt;% dplyr::select(pm, kuse, y1 = lwss97) # kuse == 0 d0 &lt;- d %&gt;% filter(kuse == 0) %&gt;% dplyr::select(pm, kuse, y0 = lwss97) # merge data d2 &lt;- left_join(d0, d1, &quot;pm&quot;) %&gt;% na.omit(y1, y0) # Notice that the direction of some results from the rbounds::psens() function may need to be reversed to obtain the same results as Stata&#39;s rbounds module. p1 &lt;- rbounds::psens(d2$y1, d2$y0, GammaInc = 0.01) p1$bounds %&gt;% filter(Gamma %in% c(1, 1.3, 1.42, 1.43, 1.44, 1.45, 1.5, 2)) %&gt;% mutate(`Lower bound` = 1 - `Lower bound`, `Upper bound` = 1 - `Upper bound`) ## Gamma Lower bound Upper bound ## 1 1.00 0.0000 0 ## 2 1.30 0.0094 0 ## 3 1.42 0.0407 0 ## 4 1.43 0.0451 0 ## 5 1.44 0.0499 0 ## 6 1.45 0.0550 0 ## 7 1.50 0.0860 0 ## 8 2.00 0.7254 0 h1 &lt;- rbounds::hlsens(d2$y1, d2$y0, GammaInc = 0.01) h1$bounds %&gt;% filter(Gamma %in% c(1, 1.3, 1.42, 1.43, 1.44, 1.45, 1.5, 2)) ## Gamma Lower bound Upper bound ## 1 1.00 -5.5 -5.5 ## 2 1.30 -8.0 -2.9 ## 3 1.42 -8.5 -2.4 ## 4 1.43 -8.5 -1.9 ## 5 1.44 -8.5 -1.9 ## 6 1.45 -9.0 -1.9 ## 7 1.50 -9.0 -1.9 ## 8 2.00 -11.5 1.1 coin::wilcoxsign_test(y1 ~ y0, data = d2) ## ## Asymptotic Wilcoxon-Pratt Signed-Rank Test ## ## data: y by x (pos, neg) ## stratified by block ## Z = -4.1914, p-value = 0.00002772 ## alternative hypothesis: true mu is not equal to 0 https://cran.r-project.org/web/packages/rbounds/rbounds.pdf "],["15_SessionInfo.html", "16 Session Info", " 16 Session Info The R session information when compiling this book: sessionInfo() ## R version 4.1.3 (2022-03-10) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 10 x64 (build 19043) ## ## Matrix products: default ## ## locale: ## [1] LC_COLLATE=English_United States.1252 ## [2] LC_CTYPE=English_United States.1252 ## [3] LC_MONETARY=English_United States.1252 ## [4] LC_NUMERIC=C ## [5] LC_TIME=English_United States.1252 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] coin_1.4-2 rbounds_2.1 nnet_7.3-17 ## [4] scales_1.1.1 glue_1.6.2 Matching_4.9-11 ## [7] MASS_7.3-55 WeightIt_0.12.0 PSweight_1.1.6 ## [10] estimatr_0.30.6 performance_0.8.0 sjlabelled_1.1.8 ## [13] lmerTest_3.1-3 lme4_1.1-28 Matrix_1.4-0 ## [16] plm_2.6-1 rlang_1.0.2 optmatch_0.10.0 ## [19] kableExtra_1.3.4.9000 knitr_1.37 survminer_0.4.9 ## [22] ggpubr_0.4.0 survMisc_0.5.5 survival_3.2-13 ## [25] cobalt_4.3.2 MatchIt_4.3.4 mitools_2.4 ## [28] broom_0.7.12 sandwich_3.0-1 lmtest_0.9-39 ## [31] zoo_1.8-9 stargazer_5.2.3 forcats_0.5.1 ## [34] stringr_1.4.0 dplyr_1.0.8 purrr_0.3.4 ## [37] readr_2.1.2 tidyr_1.2.0 tibble_3.1.6 ## [40] ggplot2_3.3.5 tidyverse_1.3.1 gmodels_2.18.1 ## [43] sampleSelection_1.2-12 maxLik_1.5-2 miscTools_0.6-26 ## [46] haven_2.4.3 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 backports_1.4.1 VGAM_1.1-6 ## [4] systemfonts_1.0.4 splines_4.1.3 TH.data_1.1-0 ## [7] digest_0.6.29 foreach_1.5.2 htmltools_0.5.2 ## [10] gdata_2.18.0 fansi_1.0.2 magrittr_2.0.2 ## [13] tzdb_0.2.0 modelr_0.1.8 matrixStats_0.61.0 ## [16] svglite_2.1.0 bdsmatrix_1.3-4 colorspace_2.0-3 ## [19] rvest_1.0.2 rbibutils_2.2.7 xfun_0.30 ## [22] libcoin_1.0-9 crayon_1.5.0 jsonlite_1.8.0 ## [25] iterators_1.0.14 gtable_0.3.0 nnls_1.4 ## [28] emmeans_1.7.2 webshot_0.5.2 car_3.0-12 ## [31] abind_1.4-5 mvtnorm_1.1-3 DBI_1.1.2 ## [34] rstatix_0.7.0 Rcpp_1.0.8.2 viridisLite_0.4.0 ## [37] xtable_1.8-4 km.ci_0.5-2 Formula_1.2-4 ## [40] stats4_4.1.3 survey_4.1-1 collapse_1.7.6 ## [43] SuperLearner_2.0-28 httr_1.4.2 modeltools_0.2-23 ## [46] ellipsis_0.3.2 pkgconfig_2.0.3 farver_2.1.0 ## [49] sass_0.4.0 dbplyr_2.1.1 utf8_1.2.2 ## [52] systemfit_1.1-24 tidyselect_1.1.2 labeling_0.4.2 ## [55] munsell_0.5.0 cellranger_1.1.0 tools_4.1.3 ## [58] cli_3.2.0 generics_0.1.2 evaluate_0.15 ## [61] fastmap_1.1.0 yaml_2.3.5 fs_1.5.2 ## [64] nlme_3.1-155 gam_1.20.1 xml2_1.3.3 ## [67] compiler_4.1.3 rstudioapi_0.13 ggsignif_0.6.3 ## [70] reprex_2.0.1 bslib_0.3.1 stringi_1.7.6 ## [73] highr_0.9 lattice_0.20-45 nloptr_2.0.0 ## [76] gbm_2.1.8 KMsurv_0.1-5 vctrs_0.3.8 ## [79] pillar_1.7.0 lifecycle_1.0.1 Rdpack_2.1.4 ## [82] jquerylib_0.1.4 rlemon_0.1.0 estimability_1.3 ## [85] data.table_1.14.2 insight_0.16.0 R6_2.5.1 ## [88] bookdown_0.25 gridExtra_2.3 codetools_0.2-18 ## [91] boot_1.3-28 gtools_3.9.2 assertthat_0.2.1 ## [94] withr_2.5.0 multcomp_1.4-18 parallel_4.1.3 ## [97] hms_1.1.1 grid_4.1.3 coda_0.19-4 ## [100] minqa_1.2.4 rmarkdown_2.13 carData_3.0-5 ## [103] numDeriv_2016.8-1.1 lubridate_1.8.0 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
